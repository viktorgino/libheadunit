// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AndroidAuto.proto

#include "AndroidAuto.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace HU {

inline constexpr VoiceSessionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        voice_status_{static_cast< ::HU::VoiceSessionRequest_VOICE_STATUS >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR VoiceSessionRequest::VoiceSessionRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VoiceSessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VoiceSessionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VoiceSessionRequestDefaultTypeInternal() {}
  union {
    VoiceSessionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VoiceSessionRequestDefaultTypeInternal _VoiceSessionRequest_default_instance_;

inline constexpr VideoFocusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        disp_index_{0},
        mode_{static_cast< ::HU::VIDEO_FOCUS_MODE >(1)},
        reason_{static_cast< ::HU::VIDEO_FOCUS_REASON >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR VideoFocusRequest::VideoFocusRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VideoFocusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VideoFocusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VideoFocusRequestDefaultTypeInternal() {}
  union {
    VideoFocusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VideoFocusRequestDefaultTypeInternal _VideoFocusRequest_default_instance_;

inline constexpr VideoFocus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        unrequested_{false},
        mode_{static_cast< ::HU::VIDEO_FOCUS_MODE >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR VideoFocus::VideoFocus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VideoFocusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VideoFocusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VideoFocusDefaultTypeInternal() {}
  union {
    VideoFocus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VideoFocusDefaultTypeInternal _VideoFocus_default_instance_;

inline constexpr TouchInfo_Location::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0u},
        y_{0u},
        pointer_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR TouchInfo_Location::TouchInfo_Location(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TouchInfo_LocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TouchInfo_LocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TouchInfo_LocationDefaultTypeInternal() {}
  union {
    TouchInfo_Location _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TouchInfo_LocationDefaultTypeInternal _TouchInfo_Location_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR StopGenericNotifications::StopGenericNotifications(::_pbi::ConstantInitialized) {}
struct StopGenericNotificationsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopGenericNotificationsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopGenericNotificationsDefaultTypeInternal() {}
  union {
    StopGenericNotifications _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopGenericNotificationsDefaultTypeInternal _StopGenericNotifications_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR StartGenericNotifications::StartGenericNotifications(::_pbi::ConstantInitialized) {}
struct StartGenericNotificationsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartGenericNotificationsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartGenericNotificationsDefaultTypeInternal() {}
  union {
    StartGenericNotifications _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartGenericNotificationsDefaultTypeInternal _StartGenericNotifications_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ShutdownResponse::ShutdownResponse(::_pbi::ConstantInitialized) {}
struct ShutdownResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShutdownResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShutdownResponseDefaultTypeInternal() {}
  union {
    ShutdownResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShutdownResponseDefaultTypeInternal _ShutdownResponse_default_instance_;

inline constexpr ShutdownRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        reason_{static_cast< ::HU::ShutdownRequest_REASON >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR ShutdownRequest::ShutdownRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ShutdownRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShutdownRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShutdownRequestDefaultTypeInternal() {}
  union {
    ShutdownRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShutdownRequestDefaultTypeInternal _ShutdownRequest_default_instance_;

inline constexpr ServiceDiscoveryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        phone_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ServiceDiscoveryRequest::ServiceDiscoveryRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ServiceDiscoveryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServiceDiscoveryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServiceDiscoveryRequestDefaultTypeInternal() {}
  union {
    ServiceDiscoveryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServiceDiscoveryRequestDefaultTypeInternal _ServiceDiscoveryRequest_default_instance_;

inline constexpr SensorStartResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{static_cast< ::HU::STATUS >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR SensorStartResponse::SensorStartResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorStartResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorStartResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorStartResponseDefaultTypeInternal() {}
  union {
    SensorStartResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorStartResponseDefaultTypeInternal _SensorStartResponse_default_instance_;

inline constexpr SensorStartRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        refresh_interval_{::int64_t{0}},
        type_{static_cast< ::HU::SENSOR_TYPE >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR SensorStartRequest::SensorStartRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorStartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorStartRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorStartRequestDefaultTypeInternal() {}
  union {
    SensorStartRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorStartRequestDefaultTypeInternal _SensorStartRequest_default_instance_;

inline constexpr SensorEvent_SpeedData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        speed_e6_{0},
        cruise_engaged_{false},
        cruise_set_speed_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_SpeedData::SensorEvent_SpeedData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_SpeedDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_SpeedDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_SpeedDataDefaultTypeInternal() {}
  union {
    SensorEvent_SpeedData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_SpeedDataDefaultTypeInternal _SensorEvent_SpeedData_default_instance_;

inline constexpr SensorEvent_RPM::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rpm_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_RPM::SensorEvent_RPM(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_RPMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_RPMDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_RPMDefaultTypeInternal() {}
  union {
    SensorEvent_RPM _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_RPMDefaultTypeInternal _SensorEvent_RPM_default_instance_;

inline constexpr SensorEvent_Passenger::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        passenger_present_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_Passenger::SensorEvent_Passenger(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_PassengerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_PassengerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_PassengerDefaultTypeInternal() {}
  union {
    SensorEvent_Passenger _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_PassengerDefaultTypeInternal _SensorEvent_Passenger_default_instance_;

inline constexpr SensorEvent_ParkingBreak::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parking_breake_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_ParkingBreak::SensorEvent_ParkingBreak(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_ParkingBreakDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_ParkingBreakDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_ParkingBreakDefaultTypeInternal() {}
  union {
    SensorEvent_ParkingBreak _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_ParkingBreakDefaultTypeInternal _SensorEvent_ParkingBreak_default_instance_;

inline constexpr SensorEvent_OdometerData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        kms_el_{0},
        trip_kms_el_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_OdometerData::SensorEvent_OdometerData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_OdometerDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_OdometerDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_OdometerDataDefaultTypeInternal() {}
  union {
    SensorEvent_OdometerData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_OdometerDataDefaultTypeInternal _SensorEvent_OdometerData_default_instance_;

inline constexpr SensorEvent_NightMode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        is_night_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_NightMode::SensorEvent_NightMode(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_NightModeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_NightModeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_NightModeDefaultTypeInternal() {}
  union {
    SensorEvent_NightMode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_NightModeDefaultTypeInternal _SensorEvent_NightMode_default_instance_;

inline constexpr SensorEvent_LocationData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_{::uint64_t{0u}},
        latitude_{0},
        longitude_{0},
        accuracy_{0u},
        altitude_{0},
        speed_{0},
        bearing_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_LocationData::SensorEvent_LocationData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_LocationDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_LocationDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_LocationDataDefaultTypeInternal() {}
  union {
    SensorEvent_LocationData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_LocationDataDefaultTypeInternal _SensorEvent_LocationData_default_instance_;

inline constexpr SensorEvent_Light::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        headlight_{static_cast< ::HU::SensorEvent_Light_HEADLIGHT_STATE >(0)},
        turn_indicator_{static_cast< ::HU::SensorEvent_Light_TURN_INDICATOR_STATE >(0)},
        hazard_light_on_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_Light::SensorEvent_Light(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_LightDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_LightDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_LightDefaultTypeInternal() {}
  union {
    SensorEvent_Light _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_LightDefaultTypeInternal _SensorEvent_Light_default_instance_;

inline constexpr SensorEvent_HVAC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_temperature_e3_{0},
        current_temperature_e3_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_HVAC::SensorEvent_HVAC(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_HVACDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_HVACDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_HVACDefaultTypeInternal() {}
  union {
    SensorEvent_HVAC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_HVACDefaultTypeInternal _SensorEvent_HVAC_default_instance_;

inline constexpr SensorEvent_Gyro::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rotation_speed_x_e3_{0},
        rotation_speed_y_e3_{0},
        rotation_speed_z_e3_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_Gyro::SensorEvent_Gyro(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_GyroDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_GyroDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_GyroDefaultTypeInternal() {}
  union {
    SensorEvent_Gyro _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_GyroDefaultTypeInternal _SensorEvent_Gyro_default_instance_;

inline constexpr SensorEvent_GearData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gear_{static_cast< ::HU::SensorEvent_GearData_GEAR >(100)} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_GearData::SensorEvent_GearData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_GearDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_GearDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_GearDataDefaultTypeInternal() {}
  union {
    SensorEvent_GearData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_GearDataDefaultTypeInternal _SensorEvent_GearData_default_instance_;

inline constexpr SensorEvent_FuelLevel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        fuel_level_{0},
        range_{0},
        low_fuel_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_FuelLevel::SensorEvent_FuelLevel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_FuelLevelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_FuelLevelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_FuelLevelDefaultTypeInternal() {}
  union {
    SensorEvent_FuelLevel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_FuelLevelDefaultTypeInternal _SensorEvent_FuelLevel_default_instance_;

inline constexpr SensorEvent_Environment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        temperature_e3_{0},
        pressure_e3_{0},
        rain_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_Environment::SensorEvent_Environment(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_EnvironmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_EnvironmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_EnvironmentDefaultTypeInternal() {}
  union {
    SensorEvent_Environment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_EnvironmentDefaultTypeInternal _SensorEvent_Environment_default_instance_;

inline constexpr SensorEvent_DrivingStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_DrivingStatus::SensorEvent_DrivingStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_DrivingStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_DrivingStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_DrivingStatusDefaultTypeInternal() {}
  union {
    SensorEvent_DrivingStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_DrivingStatusDefaultTypeInternal _SensorEvent_DrivingStatus_default_instance_;

inline constexpr SensorEvent_Door::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        door_open_{},
        hood_open_{false},
        boot_open_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_Door::SensorEvent_Door(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_DoorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_DoorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_DoorDefaultTypeInternal() {}
  union {
    SensorEvent_Door _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_DoorDefaultTypeInternal _SensorEvent_Door_default_instance_;

inline constexpr SensorEvent_Diagnostics::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        diagnostics_byte_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_Diagnostics::SensorEvent_Diagnostics(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_DiagnosticsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_DiagnosticsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_DiagnosticsDefaultTypeInternal() {}
  union {
    SensorEvent_Diagnostics _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_DiagnosticsDefaultTypeInternal _SensorEvent_Diagnostics_default_instance_;

inline constexpr SensorEvent_DeadReckoning::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        steering_angel_{0},
        wheel_speed_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_DeadReckoning::SensorEvent_DeadReckoning(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_DeadReckoningDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_DeadReckoningDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_DeadReckoningDefaultTypeInternal() {}
  union {
    SensorEvent_DeadReckoning _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_DeadReckoningDefaultTypeInternal _SensorEvent_DeadReckoning_default_instance_;

inline constexpr SensorEvent_CompassData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        bearing_e6_{0},
        pitch_e6_{0},
        roll_e6_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_CompassData::SensorEvent_CompassData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_CompassDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_CompassDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_CompassDataDefaultTypeInternal() {}
  union {
    SensorEvent_CompassData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_CompassDataDefaultTypeInternal _SensorEvent_CompassData_default_instance_;

inline constexpr SensorEvent_Accel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        acceleration_x_e3_{0},
        acceleration_y_e3_{0},
        acceleration_z_e3_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent_Accel::SensorEvent_Accel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEvent_AccelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEvent_AccelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEvent_AccelDefaultTypeInternal() {}
  union {
    SensorEvent_Accel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEvent_AccelDefaultTypeInternal _SensorEvent_Accel_default_instance_;

inline constexpr RelativeInputEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        scan_code_{0u},
        delta_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RelativeInputEvent::RelativeInputEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RelativeInputEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RelativeInputEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RelativeInputEventDefaultTypeInternal() {}
  union {
    RelativeInputEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RelativeInputEventDefaultTypeInternal _RelativeInputEvent_default_instance_;

inline constexpr PingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR PingResponse::PingResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PingResponseDefaultTypeInternal() {}
  union {
    PingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PingResponseDefaultTypeInternal _PingResponse_default_instance_;

inline constexpr PingRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR PingRequest::PingRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PingRequestDefaultTypeInternal() {}
  union {
    PingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PingRequestDefaultTypeInternal _PingRequest_default_instance_;

inline constexpr PhoneStatusInput::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        caller_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        caller_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR PhoneStatusInput::PhoneStatusInput(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PhoneStatusInputDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PhoneStatusInputDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PhoneStatusInputDefaultTypeInternal() {}
  union {
    PhoneStatusInput _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PhoneStatusInputDefaultTypeInternal _PhoneStatusInput_default_instance_;

inline constexpr PhoneStatus_Call::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        phone_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        caller_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        phone_number_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        thumbnail_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        call_time_{0u},
        state_{static_cast< ::HU::PhoneStatus_PHONE_STATE >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR PhoneStatus_Call::PhoneStatus_Call(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PhoneStatus_CallDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PhoneStatus_CallDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PhoneStatus_CallDefaultTypeInternal() {}
  union {
    PhoneStatus_Call _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PhoneStatus_CallDefaultTypeInternal _PhoneStatus_Call_default_instance_;

inline constexpr NavigationFocusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        focus_type_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR NavigationFocusResponse::NavigationFocusResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NavigationFocusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NavigationFocusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NavigationFocusResponseDefaultTypeInternal() {}
  union {
    NavigationFocusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NavigationFocusResponseDefaultTypeInternal _NavigationFocusResponse_default_instance_;

inline constexpr NavigationFocusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        focus_type_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR NavigationFocusRequest::NavigationFocusRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NavigationFocusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NavigationFocusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NavigationFocusRequestDefaultTypeInternal() {}
  union {
    NavigationFocusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NavigationFocusRequestDefaultTypeInternal _NavigationFocusRequest_default_instance_;

inline constexpr NAVTurnMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        event_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        image_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        turn_event_{static_cast< ::HU::NAVTurnMessage_TURN_EVENT >(0)},
        turn_number_{0},
        turn_angle_{0},
        turn_side_{static_cast< ::HU::NAVTurnMessage_TURN_SIDE >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR NAVTurnMessage::NAVTurnMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NAVTurnMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NAVTurnMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NAVTurnMessageDefaultTypeInternal() {}
  union {
    NAVTurnMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NAVTurnMessageDefaultTypeInternal _NAVTurnMessage_default_instance_;

inline constexpr NAVMessagesStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{static_cast< ::HU::NAVMessagesStatus_STATUS >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR NAVMessagesStatus::NAVMessagesStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NAVMessagesStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NAVMessagesStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NAVMessagesStatusDefaultTypeInternal() {}
  union {
    NAVMessagesStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NAVMessagesStatusDefaultTypeInternal _NAVMessagesStatus_default_instance_;

inline constexpr NAVDistanceMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        distance_{0},
        time_until_{0},
        display_distance_{::uint64_t{0u}},
        display_distance_unit_{static_cast< ::HU::NAVDistanceMessage_DISPLAY_DISTANCE_UNIT >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR NAVDistanceMessage::NAVDistanceMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NAVDistanceMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NAVDistanceMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NAVDistanceMessageDefaultTypeInternal() {}
  union {
    NAVDistanceMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NAVDistanceMessageDefaultTypeInternal _NAVDistanceMessage_default_instance_;

inline constexpr MicResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_{0},
        value_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR MicResponse::MicResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MicResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MicResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MicResponseDefaultTypeInternal() {}
  union {
    MicResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MicResponseDefaultTypeInternal _MicResponse_default_instance_;

inline constexpr MicRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        open_{false},
        anc_{false},
        ec_{false},
        max_unacked_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MicRequest::MicRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MicRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MicRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MicRequestDefaultTypeInternal() {}
  union {
    MicRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MicRequestDefaultTypeInternal _MicRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR MediaStopRequest::MediaStopRequest(::_pbi::ConstantInitialized) {}
struct MediaStopRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MediaStopRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MediaStopRequestDefaultTypeInternal() {}
  union {
    MediaStopRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MediaStopRequestDefaultTypeInternal _MediaStopRequest_default_instance_;

inline constexpr MediaStartRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_{0},
        config_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR MediaStartRequest::MediaStartRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MediaStartRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MediaStartRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MediaStartRequestDefaultTypeInternal() {}
  union {
    MediaStartRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MediaStartRequestDefaultTypeInternal _MediaStartRequest_default_instance_;

inline constexpr MediaSetupResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        configs_{},
        max_unacked_{0u},
        media_status_{static_cast< ::HU::MediaSetupResponse_MEDIA_STATUS >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR MediaSetupResponse::MediaSetupResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MediaSetupResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MediaSetupResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MediaSetupResponseDefaultTypeInternal() {}
  union {
    MediaSetupResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MediaSetupResponseDefaultTypeInternal _MediaSetupResponse_default_instance_;

inline constexpr MediaSetupRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        type_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR MediaSetupRequest::MediaSetupRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MediaSetupRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MediaSetupRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MediaSetupRequestDefaultTypeInternal() {}
  union {
    MediaSetupRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MediaSetupRequestDefaultTypeInternal _MediaSetupRequest_default_instance_;

inline constexpr MediaAck::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        session_{0},
        value_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR MediaAck::MediaAck(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MediaAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MediaAckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MediaAckDefaultTypeInternal() {}
  union {
    MediaAck _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MediaAckDefaultTypeInternal _MediaAck_default_instance_;

inline constexpr GenericNotificationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        handled_{false} {}

template <typename>
PROTOBUF_CONSTEXPR GenericNotificationResponse::GenericNotificationResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GenericNotificationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenericNotificationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenericNotificationResponseDefaultTypeInternal() {}
  union {
    GenericNotificationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenericNotificationResponseDefaultTypeInternal _GenericNotificationResponse_default_instance_;

inline constexpr GenericNotificationRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        icon_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GenericNotificationRequest::GenericNotificationRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GenericNotificationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenericNotificationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenericNotificationRequestDefaultTypeInternal() {}
  union {
    GenericNotificationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenericNotificationRequestDefaultTypeInternal _GenericNotificationRequest_default_instance_;

inline constexpr ChannelOpenResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{static_cast< ::HU::STATUS >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelOpenResponse::ChannelOpenResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChannelOpenResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelOpenResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelOpenResponseDefaultTypeInternal() {}
  union {
    ChannelOpenResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelOpenResponseDefaultTypeInternal _ChannelOpenResponse_default_instance_;

inline constexpr ChannelOpenRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        priority_{0},
        id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelOpenRequest::ChannelOpenRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChannelOpenRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelOpenRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelOpenRequestDefaultTypeInternal() {}
  union {
    ChannelOpenRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelOpenRequestDefaultTypeInternal _ChannelOpenRequest_default_instance_;

inline constexpr ChannelDescriptor_VendorExtensionService::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        package_white_list_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ChannelDescriptor_VendorExtensionService::ChannelDescriptor_VendorExtensionService(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChannelDescriptor_VendorExtensionServiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDescriptor_VendorExtensionServiceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDescriptor_VendorExtensionServiceDefaultTypeInternal() {}
  union {
    ChannelDescriptor_VendorExtensionService _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDescriptor_VendorExtensionServiceDefaultTypeInternal _ChannelDescriptor_VendorExtensionService_default_instance_;

inline constexpr ChannelDescriptor_SensorChannel_Sensor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        type_{static_cast< ::HU::SENSOR_TYPE >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelDescriptor_SensorChannel_Sensor::ChannelDescriptor_SensorChannel_Sensor(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChannelDescriptor_SensorChannel_SensorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDescriptor_SensorChannel_SensorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDescriptor_SensorChannel_SensorDefaultTypeInternal() {}
  union {
    ChannelDescriptor_SensorChannel_Sensor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDescriptor_SensorChannel_SensorDefaultTypeInternal _ChannelDescriptor_SensorChannel_Sensor_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ChannelDescriptor_PhoneStatusService::ChannelDescriptor_PhoneStatusService(::_pbi::ConstantInitialized) {}
struct ChannelDescriptor_PhoneStatusServiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDescriptor_PhoneStatusServiceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDescriptor_PhoneStatusServiceDefaultTypeInternal() {}
  union {
    ChannelDescriptor_PhoneStatusService _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDescriptor_PhoneStatusServiceDefaultTypeInternal _ChannelDescriptor_PhoneStatusService_default_instance_;

inline constexpr ChannelDescriptor_OutputStreamChannel_VideoConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        margin_width_{0u},
        margin_height_{0u},
        dpi_{0u},
        additional_depth_{0u},
        resolution_{static_cast< ::HU::ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_RESOLUTION >(1)},
        frame_rate_{static_cast< ::HU::ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_FPS >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelDescriptor_OutputStreamChannel_VideoConfig::ChannelDescriptor_OutputStreamChannel_VideoConfig(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChannelDescriptor_OutputStreamChannel_VideoConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDescriptor_OutputStreamChannel_VideoConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDescriptor_OutputStreamChannel_VideoConfigDefaultTypeInternal() {}
  union {
    ChannelDescriptor_OutputStreamChannel_VideoConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDescriptor_OutputStreamChannel_VideoConfigDefaultTypeInternal _ChannelDescriptor_OutputStreamChannel_VideoConfig_default_instance_;

inline constexpr ChannelDescriptor_NavigationStatusService_ImageOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        width_{0},
        height_{0},
        colour_depth_bits_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelDescriptor_NavigationStatusService_ImageOptions::ChannelDescriptor_NavigationStatusService_ImageOptions(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChannelDescriptor_NavigationStatusService_ImageOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDescriptor_NavigationStatusService_ImageOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDescriptor_NavigationStatusService_ImageOptionsDefaultTypeInternal() {}
  union {
    ChannelDescriptor_NavigationStatusService_ImageOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDescriptor_NavigationStatusService_ImageOptionsDefaultTypeInternal _ChannelDescriptor_NavigationStatusService_ImageOptions_default_instance_;

inline constexpr ChannelDescriptor_InputEventChannel_TouchScreenConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        width_{0u},
        height_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelDescriptor_InputEventChannel_TouchScreenConfig::ChannelDescriptor_InputEventChannel_TouchScreenConfig(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChannelDescriptor_InputEventChannel_TouchScreenConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDescriptor_InputEventChannel_TouchScreenConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDescriptor_InputEventChannel_TouchScreenConfigDefaultTypeInternal() {}
  union {
    ChannelDescriptor_InputEventChannel_TouchScreenConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDescriptor_InputEventChannel_TouchScreenConfigDefaultTypeInternal _ChannelDescriptor_InputEventChannel_TouchScreenConfig_default_instance_;

inline constexpr ChannelDescriptor_GenericNotificationService::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ChannelDescriptor_GenericNotificationService::ChannelDescriptor_GenericNotificationService(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChannelDescriptor_GenericNotificationServiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDescriptor_GenericNotificationServiceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDescriptor_GenericNotificationServiceDefaultTypeInternal() {}
  union {
    ChannelDescriptor_GenericNotificationService _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDescriptor_GenericNotificationServiceDefaultTypeInternal _ChannelDescriptor_GenericNotificationService_default_instance_;

inline constexpr ChannelDescriptor_BluetoothService::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        supported_pairing_methods_{},
        car_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ChannelDescriptor_BluetoothService::ChannelDescriptor_BluetoothService(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChannelDescriptor_BluetoothServiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDescriptor_BluetoothServiceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDescriptor_BluetoothServiceDefaultTypeInternal() {}
  union {
    ChannelDescriptor_BluetoothService _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDescriptor_BluetoothServiceDefaultTypeInternal _ChannelDescriptor_BluetoothService_default_instance_;

inline constexpr ButtonInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        scan_code_{0u},
        meta_{0u},
        is_pressed_{false},
        long_press_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ButtonInfo::ButtonInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ButtonInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ButtonInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ButtonInfoDefaultTypeInternal() {}
  union {
    ButtonInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ButtonInfoDefaultTypeInternal _ButtonInfo_default_instance_;

inline constexpr BluetoothPairingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        already_paired_{false},
        status_{static_cast< ::HU::BluetoothPairingResponse_PAIRING_STATUS >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR BluetoothPairingResponse::BluetoothPairingResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BluetoothPairingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BluetoothPairingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BluetoothPairingResponseDefaultTypeInternal() {}
  union {
    BluetoothPairingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BluetoothPairingResponseDefaultTypeInternal _BluetoothPairingResponse_default_instance_;

inline constexpr BluetoothPairingRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        phone_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pairing_method_{static_cast< ::HU::BluetoothPairingMethod >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR BluetoothPairingRequest::BluetoothPairingRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BluetoothPairingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BluetoothPairingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BluetoothPairingRequestDefaultTypeInternal() {}
  union {
    BluetoothPairingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BluetoothPairingRequestDefaultTypeInternal _BluetoothPairingRequest_default_instance_;

inline constexpr BluetoothAuthData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR BluetoothAuthData::BluetoothAuthData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BluetoothAuthDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BluetoothAuthDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BluetoothAuthDataDefaultTypeInternal() {}
  union {
    BluetoothAuthData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BluetoothAuthDataDefaultTypeInternal _BluetoothAuthData_default_instance_;

inline constexpr BindingResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{static_cast< ::HU::STATUS >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR BindingResponse::BindingResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BindingResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BindingResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BindingResponseDefaultTypeInternal() {}
  union {
    BindingResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BindingResponseDefaultTypeInternal _BindingResponse_default_instance_;

inline constexpr BindingRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : scan_codes_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BindingRequest::BindingRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BindingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BindingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BindingRequestDefaultTypeInternal() {}
  union {
    BindingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BindingRequestDefaultTypeInternal _BindingRequest_default_instance_;

inline constexpr AuthCompleteResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{static_cast< ::HU::STATUS >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR AuthCompleteResponse::AuthCompleteResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AuthCompleteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AuthCompleteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AuthCompleteResponseDefaultTypeInternal() {}
  union {
    AuthCompleteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AuthCompleteResponseDefaultTypeInternal _AuthCompleteResponse_default_instance_;

inline constexpr AudioFocusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        focus_type_{static_cast< ::HU::AudioFocusResponse_AUDIO_FOCUS_STATE >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR AudioFocusResponse::AudioFocusResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AudioFocusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioFocusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioFocusResponseDefaultTypeInternal() {}
  union {
    AudioFocusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioFocusResponseDefaultTypeInternal _AudioFocusResponse_default_instance_;

inline constexpr AudioFocusRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        focus_type_{static_cast< ::HU::AudioFocusRequest_AUDIO_FOCUS >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR AudioFocusRequest::AudioFocusRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AudioFocusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioFocusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioFocusRequestDefaultTypeInternal() {}
  union {
    AudioFocusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioFocusRequestDefaultTypeInternal _AudioFocusRequest_default_instance_;

inline constexpr AudioCofig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sample_rate_{0u},
        bit_depth_{0u},
        channel_count_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AudioCofig::AudioCofig(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AudioCofigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioCofigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioCofigDefaultTypeInternal() {}
  union {
    AudioCofig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioCofigDefaultTypeInternal _AudioCofig_default_instance_;

inline constexpr AbsoluteInputEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        scan_code_{0u},
        value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AbsoluteInputEvent::AbsoluteInputEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AbsoluteInputEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AbsoluteInputEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AbsoluteInputEventDefaultTypeInternal() {}
  union {
    AbsoluteInputEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AbsoluteInputEventDefaultTypeInternal _AbsoluteInputEvent_default_instance_;

inline constexpr TouchInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        location_{},
        action_index_{0u},
        action_{static_cast< ::HU::TouchInfo_TOUCH_ACTION >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR TouchInfo::TouchInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TouchInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TouchInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TouchInfoDefaultTypeInternal() {}
  union {
    TouchInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TouchInfoDefaultTypeInternal _TouchInfo_default_instance_;

inline constexpr SensorEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : location_data_{},
        compass_data_{},
        speed_data_{},
        rpm_{},
        odometer_data_{},
        fuel_data_{},
        parkingbrake_data_{},
        gear_data_{},
        diagnostics_data_{},
        night_mode_{},
        enviorment_data_{},
        hvac_data_{},
        driving_status_{},
        dead_reckoning_{},
        passenger_data_{},
        door_data_{},
        light_data_{},
        accel_data_{},
        gyro_data_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorEvent::SensorEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorEventDefaultTypeInternal() {}
  union {
    SensorEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorEventDefaultTypeInternal _SensorEvent_default_instance_;

inline constexpr RelativeInputEventWrapper::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        event_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RelativeInputEventWrapper::RelativeInputEventWrapper(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RelativeInputEventWrapperDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RelativeInputEventWrapperDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RelativeInputEventWrapperDefaultTypeInternal() {}
  union {
    RelativeInputEventWrapper _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RelativeInputEventWrapperDefaultTypeInternal _RelativeInputEventWrapper_default_instance_;

inline constexpr PhoneStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        calls_{},
        signal_strength_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PhoneStatus::PhoneStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PhoneStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PhoneStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PhoneStatusDefaultTypeInternal() {}
  union {
    PhoneStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PhoneStatusDefaultTypeInternal _PhoneStatus_default_instance_;

inline constexpr ChannelDescriptor_SensorChannel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sensor_list_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelDescriptor_SensorChannel::ChannelDescriptor_SensorChannel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChannelDescriptor_SensorChannelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDescriptor_SensorChannelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDescriptor_SensorChannelDefaultTypeInternal() {}
  union {
    ChannelDescriptor_SensorChannel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDescriptor_SensorChannelDefaultTypeInternal _ChannelDescriptor_SensorChannel_default_instance_;

inline constexpr ChannelDescriptor_OutputStreamChannel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        audio_configs_{},
        video_configs_{},
        available_while_in_call_{false},
        type_{static_cast< ::HU::STREAM_TYPE >(1)},
        audio_type_{static_cast< ::HU::AUDIO_TYPE >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelDescriptor_OutputStreamChannel::ChannelDescriptor_OutputStreamChannel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChannelDescriptor_OutputStreamChannelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDescriptor_OutputStreamChannelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDescriptor_OutputStreamChannelDefaultTypeInternal() {}
  union {
    ChannelDescriptor_OutputStreamChannel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDescriptor_OutputStreamChannelDefaultTypeInternal _ChannelDescriptor_OutputStreamChannel_default_instance_;

inline constexpr ChannelDescriptor_NavigationStatusService::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        image_options_{nullptr},
        minimum_interval_ms_{0u},
        type_{static_cast< ::HU::ChannelDescriptor_NavigationStatusService_CLUSTER_TYPE >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelDescriptor_NavigationStatusService::ChannelDescriptor_NavigationStatusService(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChannelDescriptor_NavigationStatusServiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDescriptor_NavigationStatusServiceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDescriptor_NavigationStatusServiceDefaultTypeInternal() {}
  union {
    ChannelDescriptor_NavigationStatusService _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDescriptor_NavigationStatusServiceDefaultTypeInternal _ChannelDescriptor_NavigationStatusService_default_instance_;

inline constexpr ChannelDescriptor_InputStreamChannel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        audio_config_{nullptr},
        available_while_in_call_{false},
        type_{static_cast< ::HU::STREAM_TYPE >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelDescriptor_InputStreamChannel::ChannelDescriptor_InputStreamChannel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChannelDescriptor_InputStreamChannelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDescriptor_InputStreamChannelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDescriptor_InputStreamChannelDefaultTypeInternal() {}
  union {
    ChannelDescriptor_InputStreamChannel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDescriptor_InputStreamChannelDefaultTypeInternal _ChannelDescriptor_InputStreamChannel_default_instance_;

inline constexpr ChannelDescriptor_InputEventChannel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        keycodes_supported_{},
        touch_screen_config_{nullptr},
        touch_pad_config_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelDescriptor_InputEventChannel::ChannelDescriptor_InputEventChannel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChannelDescriptor_InputEventChannelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDescriptor_InputEventChannelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDescriptor_InputEventChannelDefaultTypeInternal() {}
  union {
    ChannelDescriptor_InputEventChannel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDescriptor_InputEventChannelDefaultTypeInternal _ChannelDescriptor_InputEventChannel_default_instance_;

inline constexpr ButtonInfoWrapper::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : button_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ButtonInfoWrapper::ButtonInfoWrapper(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ButtonInfoWrapperDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ButtonInfoWrapperDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ButtonInfoWrapperDefaultTypeInternal() {}
  union {
    ButtonInfoWrapper _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ButtonInfoWrapperDefaultTypeInternal _ButtonInfoWrapper_default_instance_;

inline constexpr AbsoluteInputEventWrapper::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        event_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AbsoluteInputEventWrapper::AbsoluteInputEventWrapper(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AbsoluteInputEventWrapperDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AbsoluteInputEventWrapperDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AbsoluteInputEventWrapperDefaultTypeInternal() {}
  union {
    AbsoluteInputEventWrapper _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AbsoluteInputEventWrapperDefaultTypeInternal _AbsoluteInputEventWrapper_default_instance_;

inline constexpr InputEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        touch_{nullptr},
        button_{nullptr},
        abs_event_{nullptr},
        rel_event_{nullptr},
        timestamp_{::uint64_t{0u}},
        disp_channel_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InputEvent::InputEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InputEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InputEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InputEventDefaultTypeInternal() {}
  union {
    InputEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InputEventDefaultTypeInternal _InputEvent_default_instance_;

inline constexpr ChannelDescriptor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sensor_channel_{nullptr},
        output_stream_channel_{nullptr},
        input_event_channel_{nullptr},
        input_stream_channel_{nullptr},
        bluetooth_service_{nullptr},
        navigation_status_service_{nullptr},
        phone_status_service_{nullptr},
        vendor_extension_service_{nullptr},
        generic_notification_service_{nullptr},
        channel_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelDescriptor::ChannelDescriptor(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChannelDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDescriptorDefaultTypeInternal() {}
  union {
    ChannelDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDescriptorDefaultTypeInternal _ChannelDescriptor_default_instance_;

inline constexpr ServiceDiscoveryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        channels_{},
        head_unit_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        car_model_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        car_year_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        car_serial_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        headunit_make_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        headunit_model_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sw_build_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sw_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        driver_pos_{false},
        can_play_native_media_during_vr_{false},
        hide_clock_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ServiceDiscoveryResponse::ServiceDiscoveryResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ServiceDiscoveryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServiceDiscoveryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServiceDiscoveryResponseDefaultTypeInternal() {}
  union {
    ServiceDiscoveryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServiceDiscoveryResponseDefaultTypeInternal _ServiceDiscoveryResponse_default_instance_;
}  // namespace HU
static ::_pb::Metadata file_level_metadata_AndroidAuto_2eproto[84];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_AndroidAuto_2eproto[26];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_AndroidAuto_2eproto = nullptr;
const ::uint32_t TableStruct_AndroidAuto_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::HU::ButtonInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ButtonInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ButtonInfo, _impl_.scan_code_),
    PROTOBUF_FIELD_OFFSET(::HU::ButtonInfo, _impl_.is_pressed_),
    PROTOBUF_FIELD_OFFSET(::HU::ButtonInfo, _impl_.meta_),
    PROTOBUF_FIELD_OFFSET(::HU::ButtonInfo, _impl_.long_press_),
    0,
    2,
    1,
    3,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::HU::ButtonInfoWrapper, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ButtonInfoWrapper, _impl_.button_),
    PROTOBUF_FIELD_OFFSET(::HU::TouchInfo_Location, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::TouchInfo_Location, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::TouchInfo_Location, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::HU::TouchInfo_Location, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::HU::TouchInfo_Location, _impl_.pointer_id_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::HU::TouchInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::TouchInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::TouchInfo, _impl_.location_),
    PROTOBUF_FIELD_OFFSET(::HU::TouchInfo, _impl_.action_index_),
    PROTOBUF_FIELD_OFFSET(::HU::TouchInfo, _impl_.action_),
    ~0u,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::HU::RelativeInputEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::RelativeInputEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::RelativeInputEvent, _impl_.scan_code_),
    PROTOBUF_FIELD_OFFSET(::HU::RelativeInputEvent, _impl_.delta_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::HU::AbsoluteInputEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::AbsoluteInputEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::AbsoluteInputEvent, _impl_.scan_code_),
    PROTOBUF_FIELD_OFFSET(::HU::AbsoluteInputEvent, _impl_.value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::HU::AbsoluteInputEventWrapper, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::AbsoluteInputEventWrapper, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::AbsoluteInputEventWrapper, _impl_.event_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::RelativeInputEventWrapper, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::RelativeInputEventWrapper, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::RelativeInputEventWrapper, _impl_.event_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::InputEvent, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::InputEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::InputEvent, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::HU::InputEvent, _impl_.disp_channel_),
    PROTOBUF_FIELD_OFFSET(::HU::InputEvent, _impl_.touch_),
    PROTOBUF_FIELD_OFFSET(::HU::InputEvent, _impl_.button_),
    PROTOBUF_FIELD_OFFSET(::HU::InputEvent, _impl_.abs_event_),
    PROTOBUF_FIELD_OFFSET(::HU::InputEvent, _impl_.rel_event_),
    4,
    5,
    0,
    1,
    2,
    3,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::HU::BindingRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::BindingRequest, _impl_.scan_codes_),
    PROTOBUF_FIELD_OFFSET(::HU::BindingResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::BindingResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::BindingResponse, _impl_.status_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_LocationData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_LocationData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_LocationData, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_LocationData, _impl_.latitude_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_LocationData, _impl_.longitude_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_LocationData, _impl_.accuracy_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_LocationData, _impl_.altitude_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_LocationData, _impl_.speed_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_LocationData, _impl_.bearing_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_NightMode, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_NightMode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_NightMode, _impl_.is_night_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_RPM, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_RPM, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_RPM, _impl_.rpm_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_FuelLevel, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_FuelLevel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_FuelLevel, _impl_.fuel_level_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_FuelLevel, _impl_.range_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_FuelLevel, _impl_.low_fuel_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_DrivingStatus, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_DrivingStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_DrivingStatus, _impl_.status_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_DeadReckoning, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_DeadReckoning, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_DeadReckoning, _impl_.steering_angel_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_DeadReckoning, _impl_.wheel_speed_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_CompassData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_CompassData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_CompassData, _impl_.bearing_e6_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_CompassData, _impl_.pitch_e6_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_CompassData, _impl_.roll_e6_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_SpeedData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_SpeedData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_SpeedData, _impl_.speed_e6_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_SpeedData, _impl_.cruise_engaged_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_SpeedData, _impl_.cruise_set_speed_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_OdometerData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_OdometerData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_OdometerData, _impl_.kms_el_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_OdometerData, _impl_.trip_kms_el_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_ParkingBreak, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_ParkingBreak, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_ParkingBreak, _impl_.parking_breake_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Passenger, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Passenger, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Passenger, _impl_.passenger_present_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Diagnostics, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Diagnostics, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Diagnostics, _impl_.diagnostics_byte_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Environment, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Environment, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Environment, _impl_.temperature_e3_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Environment, _impl_.pressure_e3_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Environment, _impl_.rain_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_HVAC, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_HVAC, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_HVAC, _impl_.target_temperature_e3_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_HVAC, _impl_.current_temperature_e3_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Accel, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Accel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Accel, _impl_.acceleration_x_e3_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Accel, _impl_.acceleration_y_e3_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Accel, _impl_.acceleration_z_e3_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Gyro, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Gyro, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Gyro, _impl_.rotation_speed_x_e3_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Gyro, _impl_.rotation_speed_y_e3_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Gyro, _impl_.rotation_speed_z_e3_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Door, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Door, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Door, _impl_.hood_open_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Door, _impl_.boot_open_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Door, _impl_.door_open_),
    0,
    1,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Light, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Light, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Light, _impl_.headlight_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Light, _impl_.turn_indicator_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_Light, _impl_.hazard_light_on_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_GearData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_GearData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent_GearData, _impl_.gear_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.location_data_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.compass_data_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.speed_data_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.rpm_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.odometer_data_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.fuel_data_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.parkingbrake_data_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.gear_data_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.diagnostics_data_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.night_mode_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.enviorment_data_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.hvac_data_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.driving_status_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.dead_reckoning_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.passenger_data_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.door_data_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.light_data_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.accel_data_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorEvent, _impl_.gyro_data_),
    PROTOBUF_FIELD_OFFSET(::HU::AudioCofig, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::AudioCofig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::AudioCofig, _impl_.sample_rate_),
    PROTOBUF_FIELD_OFFSET(::HU::AudioCofig, _impl_.bit_depth_),
    PROTOBUF_FIELD_OFFSET(::HU::AudioCofig, _impl_.channel_count_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_SensorChannel_Sensor, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_SensorChannel_Sensor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_SensorChannel_Sensor, _impl_.type_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_SensorChannel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_SensorChannel, _impl_.sensor_list_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_OutputStreamChannel_VideoConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.resolution_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.frame_rate_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.margin_width_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.margin_height_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.dpi_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.additional_depth_),
    4,
    5,
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_OutputStreamChannel, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_OutputStreamChannel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_OutputStreamChannel, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_OutputStreamChannel, _impl_.audio_type_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_OutputStreamChannel, _impl_.audio_configs_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_OutputStreamChannel, _impl_.video_configs_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_OutputStreamChannel, _impl_.available_while_in_call_),
    1,
    2,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_InputEventChannel_TouchScreenConfig, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_InputEventChannel_TouchScreenConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_InputEventChannel_TouchScreenConfig, _impl_.width_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_InputEventChannel_TouchScreenConfig, _impl_.height_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_InputEventChannel, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_InputEventChannel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_InputEventChannel, _impl_.keycodes_supported_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_InputEventChannel, _impl_.touch_screen_config_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_InputEventChannel, _impl_.touch_pad_config_),
    ~0u,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_InputStreamChannel, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_InputStreamChannel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_InputStreamChannel, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_InputStreamChannel, _impl_.audio_config_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_InputStreamChannel, _impl_.available_while_in_call_),
    2,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_BluetoothService, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_BluetoothService, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_BluetoothService, _impl_.car_address_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_BluetoothService, _impl_.supported_pairing_methods_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_NavigationStatusService_ImageOptions, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_NavigationStatusService_ImageOptions, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_NavigationStatusService_ImageOptions, _impl_.width_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_NavigationStatusService_ImageOptions, _impl_.height_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_NavigationStatusService_ImageOptions, _impl_.colour_depth_bits_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_NavigationStatusService, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_NavigationStatusService, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_NavigationStatusService, _impl_.minimum_interval_ms_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_NavigationStatusService, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_NavigationStatusService, _impl_.image_options_),
    1,
    2,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_PhoneStatusService, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_VendorExtensionService, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_VendorExtensionService, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_VendorExtensionService, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_VendorExtensionService, _impl_.package_white_list_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_VendorExtensionService, _impl_.data_),
    0,
    ~0u,
    1,
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_GenericNotificationService, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_GenericNotificationService, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor_GenericNotificationService, _impl_.name_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor, _impl_.channel_id_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor, _impl_.sensor_channel_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor, _impl_.output_stream_channel_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor, _impl_.input_event_channel_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor, _impl_.input_stream_channel_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor, _impl_.bluetooth_service_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor, _impl_.navigation_status_service_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor, _impl_.phone_status_service_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor, _impl_.vendor_extension_service_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelDescriptor, _impl_.generic_notification_service_),
    9,
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    PROTOBUF_FIELD_OFFSET(::HU::ServiceDiscoveryRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ServiceDiscoveryRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ServiceDiscoveryRequest, _impl_.phone_name_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::ServiceDiscoveryResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ServiceDiscoveryResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ServiceDiscoveryResponse, _impl_.channels_),
    PROTOBUF_FIELD_OFFSET(::HU::ServiceDiscoveryResponse, _impl_.head_unit_name_),
    PROTOBUF_FIELD_OFFSET(::HU::ServiceDiscoveryResponse, _impl_.car_model_),
    PROTOBUF_FIELD_OFFSET(::HU::ServiceDiscoveryResponse, _impl_.car_year_),
    PROTOBUF_FIELD_OFFSET(::HU::ServiceDiscoveryResponse, _impl_.car_serial_),
    PROTOBUF_FIELD_OFFSET(::HU::ServiceDiscoveryResponse, _impl_.driver_pos_),
    PROTOBUF_FIELD_OFFSET(::HU::ServiceDiscoveryResponse, _impl_.headunit_make_),
    PROTOBUF_FIELD_OFFSET(::HU::ServiceDiscoveryResponse, _impl_.headunit_model_),
    PROTOBUF_FIELD_OFFSET(::HU::ServiceDiscoveryResponse, _impl_.sw_build_),
    PROTOBUF_FIELD_OFFSET(::HU::ServiceDiscoveryResponse, _impl_.sw_version_),
    PROTOBUF_FIELD_OFFSET(::HU::ServiceDiscoveryResponse, _impl_.can_play_native_media_during_vr_),
    PROTOBUF_FIELD_OFFSET(::HU::ServiceDiscoveryResponse, _impl_.hide_clock_),
    ~0u,
    0,
    1,
    2,
    3,
    8,
    4,
    5,
    6,
    7,
    9,
    10,
    PROTOBUF_FIELD_OFFSET(::HU::ChannelOpenRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelOpenRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ChannelOpenRequest, _impl_.priority_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelOpenRequest, _impl_.id_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::HU::ChannelOpenResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ChannelOpenResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ChannelOpenResponse, _impl_.status_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::PingRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::PingRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::PingRequest, _impl_.timestamp_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::PingResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::PingResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::PingResponse, _impl_.timestamp_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::ShutdownRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::ShutdownRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::ShutdownRequest, _impl_.reason_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::HU::ShutdownResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::MediaSetupRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::MediaSetupRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::MediaSetupRequest, _impl_.type_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::MediaSetupResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::MediaSetupResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::MediaSetupResponse, _impl_.media_status_),
    PROTOBUF_FIELD_OFFSET(::HU::MediaSetupResponse, _impl_.max_unacked_),
    PROTOBUF_FIELD_OFFSET(::HU::MediaSetupResponse, _impl_.configs_),
    1,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::HU::MediaStopRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::MediaStartRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::MediaStartRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::MediaStartRequest, _impl_.session_),
    PROTOBUF_FIELD_OFFSET(::HU::MediaStartRequest, _impl_.config_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::HU::MediaAck, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::MediaAck, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::MediaAck, _impl_.session_),
    PROTOBUF_FIELD_OFFSET(::HU::MediaAck, _impl_.value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::HU::MicRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::MicRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::MicRequest, _impl_.open_),
    PROTOBUF_FIELD_OFFSET(::HU::MicRequest, _impl_.anc_),
    PROTOBUF_FIELD_OFFSET(::HU::MicRequest, _impl_.ec_),
    PROTOBUF_FIELD_OFFSET(::HU::MicRequest, _impl_.max_unacked_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::HU::MicResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::MicResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::MicResponse, _impl_.session_),
    PROTOBUF_FIELD_OFFSET(::HU::MicResponse, _impl_.value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::HU::VideoFocusRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::VideoFocusRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::VideoFocusRequest, _impl_.disp_index_),
    PROTOBUF_FIELD_OFFSET(::HU::VideoFocusRequest, _impl_.mode_),
    PROTOBUF_FIELD_OFFSET(::HU::VideoFocusRequest, _impl_.reason_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::HU::VideoFocus, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::VideoFocus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::VideoFocus, _impl_.mode_),
    PROTOBUF_FIELD_OFFSET(::HU::VideoFocus, _impl_.unrequested_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::HU::SensorStartRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorStartRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorStartRequest, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorStartRequest, _impl_.refresh_interval_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::HU::SensorStartResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::SensorStartResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::SensorStartResponse, _impl_.status_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::NavigationFocusRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::NavigationFocusRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::NavigationFocusRequest, _impl_.focus_type_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::NavigationFocusResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::NavigationFocusResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::NavigationFocusResponse, _impl_.focus_type_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::VoiceSessionRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::VoiceSessionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::VoiceSessionRequest, _impl_.voice_status_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::AudioFocusRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::AudioFocusRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::AudioFocusRequest, _impl_.focus_type_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::AudioFocusResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::AudioFocusResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::AudioFocusResponse, _impl_.focus_type_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::AuthCompleteResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::AuthCompleteResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::AuthCompleteResponse, _impl_.status_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::PhoneStatus_Call, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::PhoneStatus_Call, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::PhoneStatus_Call, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::HU::PhoneStatus_Call, _impl_.call_time_),
    PROTOBUF_FIELD_OFFSET(::HU::PhoneStatus_Call, _impl_.phone_number_),
    PROTOBUF_FIELD_OFFSET(::HU::PhoneStatus_Call, _impl_.caller_id_),
    PROTOBUF_FIELD_OFFSET(::HU::PhoneStatus_Call, _impl_.phone_number_type_),
    PROTOBUF_FIELD_OFFSET(::HU::PhoneStatus_Call, _impl_.thumbnail_),
    5,
    4,
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::HU::PhoneStatus, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::PhoneStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::PhoneStatus, _impl_.calls_),
    PROTOBUF_FIELD_OFFSET(::HU::PhoneStatus, _impl_.signal_strength_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::HU::PhoneStatusInput, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::PhoneStatusInput, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::PhoneStatusInput, _impl_.caller_number_),
    PROTOBUF_FIELD_OFFSET(::HU::PhoneStatusInput, _impl_.caller_id_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::HU::GenericNotificationRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::GenericNotificationRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::GenericNotificationRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::HU::GenericNotificationRequest, _impl_.text_),
    PROTOBUF_FIELD_OFFSET(::HU::GenericNotificationRequest, _impl_.icon_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::HU::GenericNotificationResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::GenericNotificationResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::GenericNotificationResponse, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::HU::GenericNotificationResponse, _impl_.handled_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::HU::StartGenericNotifications, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::HU::StopGenericNotifications, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::BluetoothPairingRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::BluetoothPairingRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::BluetoothPairingRequest, _impl_.phone_address_),
    PROTOBUF_FIELD_OFFSET(::HU::BluetoothPairingRequest, _impl_.pairing_method_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::HU::BluetoothPairingResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::BluetoothPairingResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::BluetoothPairingResponse, _impl_.already_paired_),
    PROTOBUF_FIELD_OFFSET(::HU::BluetoothPairingResponse, _impl_.status_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::HU::BluetoothAuthData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::BluetoothAuthData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::BluetoothAuthData, _impl_.data_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::NAVMessagesStatus, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::NAVMessagesStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::NAVMessagesStatus, _impl_.status_),
    0,
    PROTOBUF_FIELD_OFFSET(::HU::NAVTurnMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::NAVTurnMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::NAVTurnMessage, _impl_.event_name_),
    PROTOBUF_FIELD_OFFSET(::HU::NAVTurnMessage, _impl_.turn_side_),
    PROTOBUF_FIELD_OFFSET(::HU::NAVTurnMessage, _impl_.turn_event_),
    PROTOBUF_FIELD_OFFSET(::HU::NAVTurnMessage, _impl_.image_),
    PROTOBUF_FIELD_OFFSET(::HU::NAVTurnMessage, _impl_.turn_number_),
    PROTOBUF_FIELD_OFFSET(::HU::NAVTurnMessage, _impl_.turn_angle_),
    0,
    5,
    2,
    1,
    3,
    4,
    PROTOBUF_FIELD_OFFSET(::HU::NAVDistanceMessage, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::HU::NAVDistanceMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::HU::NAVDistanceMessage, _impl_.distance_),
    PROTOBUF_FIELD_OFFSET(::HU::NAVDistanceMessage, _impl_.time_until_),
    PROTOBUF_FIELD_OFFSET(::HU::NAVDistanceMessage, _impl_.display_distance_),
    PROTOBUF_FIELD_OFFSET(::HU::NAVDistanceMessage, _impl_.display_distance_unit_),
    0,
    1,
    2,
    3,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::HU::ButtonInfo)},
        {16, -1, -1, sizeof(::HU::ButtonInfoWrapper)},
        {25, 36, -1, sizeof(::HU::TouchInfo_Location)},
        {39, 50, -1, sizeof(::HU::TouchInfo)},
        {53, 63, -1, sizeof(::HU::RelativeInputEvent)},
        {65, 75, -1, sizeof(::HU::AbsoluteInputEvent)},
        {77, 86, -1, sizeof(::HU::AbsoluteInputEventWrapper)},
        {87, 96, -1, sizeof(::HU::RelativeInputEventWrapper)},
        {97, 111, -1, sizeof(::HU::InputEvent)},
        {117, -1, -1, sizeof(::HU::BindingRequest)},
        {126, 135, -1, sizeof(::HU::BindingResponse)},
        {136, 151, -1, sizeof(::HU::SensorEvent_LocationData)},
        {158, 167, -1, sizeof(::HU::SensorEvent_NightMode)},
        {168, 177, -1, sizeof(::HU::SensorEvent_RPM)},
        {178, 189, -1, sizeof(::HU::SensorEvent_FuelLevel)},
        {192, 201, -1, sizeof(::HU::SensorEvent_DrivingStatus)},
        {202, 212, -1, sizeof(::HU::SensorEvent_DeadReckoning)},
        {214, 225, -1, sizeof(::HU::SensorEvent_CompassData)},
        {228, 239, -1, sizeof(::HU::SensorEvent_SpeedData)},
        {242, 252, -1, sizeof(::HU::SensorEvent_OdometerData)},
        {254, 263, -1, sizeof(::HU::SensorEvent_ParkingBreak)},
        {264, 273, -1, sizeof(::HU::SensorEvent_Passenger)},
        {274, 283, -1, sizeof(::HU::SensorEvent_Diagnostics)},
        {284, 295, -1, sizeof(::HU::SensorEvent_Environment)},
        {298, 308, -1, sizeof(::HU::SensorEvent_HVAC)},
        {310, 321, -1, sizeof(::HU::SensorEvent_Accel)},
        {324, 335, -1, sizeof(::HU::SensorEvent_Gyro)},
        {338, 349, -1, sizeof(::HU::SensorEvent_Door)},
        {352, 363, -1, sizeof(::HU::SensorEvent_Light)},
        {366, 375, -1, sizeof(::HU::SensorEvent_GearData)},
        {376, -1, -1, sizeof(::HU::SensorEvent)},
        {403, 414, -1, sizeof(::HU::AudioCofig)},
        {417, 426, -1, sizeof(::HU::ChannelDescriptor_SensorChannel_Sensor)},
        {427, -1, -1, sizeof(::HU::ChannelDescriptor_SensorChannel)},
        {436, 450, -1, sizeof(::HU::ChannelDescriptor_OutputStreamChannel_VideoConfig)},
        {456, 469, -1, sizeof(::HU::ChannelDescriptor_OutputStreamChannel)},
        {474, 484, -1, sizeof(::HU::ChannelDescriptor_InputEventChannel_TouchScreenConfig)},
        {486, 497, -1, sizeof(::HU::ChannelDescriptor_InputEventChannel)},
        {500, 511, -1, sizeof(::HU::ChannelDescriptor_InputStreamChannel)},
        {514, 524, -1, sizeof(::HU::ChannelDescriptor_BluetoothService)},
        {526, 537, -1, sizeof(::HU::ChannelDescriptor_NavigationStatusService_ImageOptions)},
        {540, 551, -1, sizeof(::HU::ChannelDescriptor_NavigationStatusService)},
        {554, -1, -1, sizeof(::HU::ChannelDescriptor_PhoneStatusService)},
        {562, 573, -1, sizeof(::HU::ChannelDescriptor_VendorExtensionService)},
        {576, 585, -1, sizeof(::HU::ChannelDescriptor_GenericNotificationService)},
        {586, 604, -1, sizeof(::HU::ChannelDescriptor)},
        {614, 623, -1, sizeof(::HU::ServiceDiscoveryRequest)},
        {624, 644, -1, sizeof(::HU::ServiceDiscoveryResponse)},
        {656, 666, -1, sizeof(::HU::ChannelOpenRequest)},
        {668, 677, -1, sizeof(::HU::ChannelOpenResponse)},
        {678, 687, -1, sizeof(::HU::PingRequest)},
        {688, 697, -1, sizeof(::HU::PingResponse)},
        {698, 707, -1, sizeof(::HU::ShutdownRequest)},
        {708, -1, -1, sizeof(::HU::ShutdownResponse)},
        {716, 725, -1, sizeof(::HU::MediaSetupRequest)},
        {726, 737, -1, sizeof(::HU::MediaSetupResponse)},
        {740, -1, -1, sizeof(::HU::MediaStopRequest)},
        {748, 758, -1, sizeof(::HU::MediaStartRequest)},
        {760, 770, -1, sizeof(::HU::MediaAck)},
        {772, 784, -1, sizeof(::HU::MicRequest)},
        {788, 798, -1, sizeof(::HU::MicResponse)},
        {800, 811, -1, sizeof(::HU::VideoFocusRequest)},
        {814, 824, -1, sizeof(::HU::VideoFocus)},
        {826, 836, -1, sizeof(::HU::SensorStartRequest)},
        {838, 847, -1, sizeof(::HU::SensorStartResponse)},
        {848, 857, -1, sizeof(::HU::NavigationFocusRequest)},
        {858, 867, -1, sizeof(::HU::NavigationFocusResponse)},
        {868, 877, -1, sizeof(::HU::VoiceSessionRequest)},
        {878, 887, -1, sizeof(::HU::AudioFocusRequest)},
        {888, 897, -1, sizeof(::HU::AudioFocusResponse)},
        {898, 907, -1, sizeof(::HU::AuthCompleteResponse)},
        {908, 922, -1, sizeof(::HU::PhoneStatus_Call)},
        {928, 938, -1, sizeof(::HU::PhoneStatus)},
        {940, 950, -1, sizeof(::HU::PhoneStatusInput)},
        {952, 963, -1, sizeof(::HU::GenericNotificationRequest)},
        {966, 976, -1, sizeof(::HU::GenericNotificationResponse)},
        {978, -1, -1, sizeof(::HU::StartGenericNotifications)},
        {986, -1, -1, sizeof(::HU::StopGenericNotifications)},
        {994, 1004, -1, sizeof(::HU::BluetoothPairingRequest)},
        {1006, 1016, -1, sizeof(::HU::BluetoothPairingResponse)},
        {1018, 1027, -1, sizeof(::HU::BluetoothAuthData)},
        {1028, 1037, -1, sizeof(::HU::NAVMessagesStatus)},
        {1038, 1052, -1, sizeof(::HU::NAVTurnMessage)},
        {1058, 1070, -1, sizeof(::HU::NAVDistanceMessage)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::HU::_ButtonInfo_default_instance_._instance,
    &::HU::_ButtonInfoWrapper_default_instance_._instance,
    &::HU::_TouchInfo_Location_default_instance_._instance,
    &::HU::_TouchInfo_default_instance_._instance,
    &::HU::_RelativeInputEvent_default_instance_._instance,
    &::HU::_AbsoluteInputEvent_default_instance_._instance,
    &::HU::_AbsoluteInputEventWrapper_default_instance_._instance,
    &::HU::_RelativeInputEventWrapper_default_instance_._instance,
    &::HU::_InputEvent_default_instance_._instance,
    &::HU::_BindingRequest_default_instance_._instance,
    &::HU::_BindingResponse_default_instance_._instance,
    &::HU::_SensorEvent_LocationData_default_instance_._instance,
    &::HU::_SensorEvent_NightMode_default_instance_._instance,
    &::HU::_SensorEvent_RPM_default_instance_._instance,
    &::HU::_SensorEvent_FuelLevel_default_instance_._instance,
    &::HU::_SensorEvent_DrivingStatus_default_instance_._instance,
    &::HU::_SensorEvent_DeadReckoning_default_instance_._instance,
    &::HU::_SensorEvent_CompassData_default_instance_._instance,
    &::HU::_SensorEvent_SpeedData_default_instance_._instance,
    &::HU::_SensorEvent_OdometerData_default_instance_._instance,
    &::HU::_SensorEvent_ParkingBreak_default_instance_._instance,
    &::HU::_SensorEvent_Passenger_default_instance_._instance,
    &::HU::_SensorEvent_Diagnostics_default_instance_._instance,
    &::HU::_SensorEvent_Environment_default_instance_._instance,
    &::HU::_SensorEvent_HVAC_default_instance_._instance,
    &::HU::_SensorEvent_Accel_default_instance_._instance,
    &::HU::_SensorEvent_Gyro_default_instance_._instance,
    &::HU::_SensorEvent_Door_default_instance_._instance,
    &::HU::_SensorEvent_Light_default_instance_._instance,
    &::HU::_SensorEvent_GearData_default_instance_._instance,
    &::HU::_SensorEvent_default_instance_._instance,
    &::HU::_AudioCofig_default_instance_._instance,
    &::HU::_ChannelDescriptor_SensorChannel_Sensor_default_instance_._instance,
    &::HU::_ChannelDescriptor_SensorChannel_default_instance_._instance,
    &::HU::_ChannelDescriptor_OutputStreamChannel_VideoConfig_default_instance_._instance,
    &::HU::_ChannelDescriptor_OutputStreamChannel_default_instance_._instance,
    &::HU::_ChannelDescriptor_InputEventChannel_TouchScreenConfig_default_instance_._instance,
    &::HU::_ChannelDescriptor_InputEventChannel_default_instance_._instance,
    &::HU::_ChannelDescriptor_InputStreamChannel_default_instance_._instance,
    &::HU::_ChannelDescriptor_BluetoothService_default_instance_._instance,
    &::HU::_ChannelDescriptor_NavigationStatusService_ImageOptions_default_instance_._instance,
    &::HU::_ChannelDescriptor_NavigationStatusService_default_instance_._instance,
    &::HU::_ChannelDescriptor_PhoneStatusService_default_instance_._instance,
    &::HU::_ChannelDescriptor_VendorExtensionService_default_instance_._instance,
    &::HU::_ChannelDescriptor_GenericNotificationService_default_instance_._instance,
    &::HU::_ChannelDescriptor_default_instance_._instance,
    &::HU::_ServiceDiscoveryRequest_default_instance_._instance,
    &::HU::_ServiceDiscoveryResponse_default_instance_._instance,
    &::HU::_ChannelOpenRequest_default_instance_._instance,
    &::HU::_ChannelOpenResponse_default_instance_._instance,
    &::HU::_PingRequest_default_instance_._instance,
    &::HU::_PingResponse_default_instance_._instance,
    &::HU::_ShutdownRequest_default_instance_._instance,
    &::HU::_ShutdownResponse_default_instance_._instance,
    &::HU::_MediaSetupRequest_default_instance_._instance,
    &::HU::_MediaSetupResponse_default_instance_._instance,
    &::HU::_MediaStopRequest_default_instance_._instance,
    &::HU::_MediaStartRequest_default_instance_._instance,
    &::HU::_MediaAck_default_instance_._instance,
    &::HU::_MicRequest_default_instance_._instance,
    &::HU::_MicResponse_default_instance_._instance,
    &::HU::_VideoFocusRequest_default_instance_._instance,
    &::HU::_VideoFocus_default_instance_._instance,
    &::HU::_SensorStartRequest_default_instance_._instance,
    &::HU::_SensorStartResponse_default_instance_._instance,
    &::HU::_NavigationFocusRequest_default_instance_._instance,
    &::HU::_NavigationFocusResponse_default_instance_._instance,
    &::HU::_VoiceSessionRequest_default_instance_._instance,
    &::HU::_AudioFocusRequest_default_instance_._instance,
    &::HU::_AudioFocusResponse_default_instance_._instance,
    &::HU::_AuthCompleteResponse_default_instance_._instance,
    &::HU::_PhoneStatus_Call_default_instance_._instance,
    &::HU::_PhoneStatus_default_instance_._instance,
    &::HU::_PhoneStatusInput_default_instance_._instance,
    &::HU::_GenericNotificationRequest_default_instance_._instance,
    &::HU::_GenericNotificationResponse_default_instance_._instance,
    &::HU::_StartGenericNotifications_default_instance_._instance,
    &::HU::_StopGenericNotifications_default_instance_._instance,
    &::HU::_BluetoothPairingRequest_default_instance_._instance,
    &::HU::_BluetoothPairingResponse_default_instance_._instance,
    &::HU::_BluetoothAuthData_default_instance_._instance,
    &::HU::_NAVMessagesStatus_default_instance_._instance,
    &::HU::_NAVTurnMessage_default_instance_._instance,
    &::HU::_NAVDistanceMessage_default_instance_._instance,
};
const char descriptor_table_protodef_AndroidAuto_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\021AndroidAuto.proto\022\002HU\"U\n\nButtonInfo\022\021\n"
    "\tscan_code\030\001 \002(\r\022\022\n\nis_pressed\030\002 \002(\010\022\014\n\004"
    "meta\030\003 \002(\r\022\022\n\nlong_press\030\004 \002(\010\"3\n\021Button"
    "InfoWrapper\022\036\n\006button\030\001 \003(\0132\016.HU.ButtonI"
    "nfo\"\206\002\n\tTouchInfo\022(\n\010location\030\001 \003(\0132\026.HU"
    ".TouchInfo.Location\022\024\n\014action_index\030\002 \001("
    "\r\022*\n\006action\030\003 \002(\0162\032.HU.TouchInfo.TOUCH_A"
    "CTION\0324\n\010Location\022\t\n\001x\030\001 \002(\r\022\t\n\001y\030\002 \002(\r\022"
    "\022\n\npointer_id\030\003 \002(\r\"W\n\014TOUCH_ACTION\022\026\n\022T"
    "OUCH_ACTION_PRESS\020\000\022\030\n\024TOUCH_ACTION_RELE"
    "ASE\020\001\022\025\n\021TOUCH_ACTION_DRAG\020\002\"6\n\022Relative"
    "InputEvent\022\021\n\tscan_code\030\001 \001(\r\022\r\n\005delta\030\002"
    " \001(\005\"6\n\022AbsoluteInputEvent\022\021\n\tscan_code\030"
    "\001 \001(\r\022\r\n\005value\030\002 \001(\005\"B\n\031AbsoluteInputEve"
    "ntWrapper\022%\n\005event\030\001 \002(\0132\026.HU.AbsoluteIn"
    "putEvent\"B\n\031RelativeInputEventWrapper\022%\n"
    "\005event\030\001 \002(\0132\026.HU.RelativeInputEvent\"\336\001\n"
    "\nInputEvent\022\021\n\ttimestamp\030\001 \002(\004\022\024\n\014disp_c"
    "hannel\030\002 \001(\005\022\034\n\005touch\030\003 \001(\0132\r.HU.TouchIn"
    "fo\022%\n\006button\030\004 \001(\0132\025.HU.ButtonInfoWrappe"
    "r\0220\n\tabs_event\030\005 \001(\0132\035.HU.AbsoluteInputE"
    "ventWrapper\0220\n\trel_event\030\006 \001(\0132\035.HU.Rela"
    "tiveInputEventWrapper\"$\n\016BindingRequest\022"
    "\022\n\nscan_codes\030\001 \003(\005\"-\n\017BindingResponse\022\032"
    "\n\006status\030\001 \002(\0162\n.HU.STATUS\"\200\027\n\013SensorEve"
    "nt\0223\n\rlocation_data\030\001 \003(\0132\034.HU.SensorEve"
    "nt.LocationData\0221\n\014compass_data\030\002 \003(\0132\033."
    "HU.SensorEvent.CompassData\022-\n\nspeed_data"
    "\030\003 \003(\0132\031.HU.SensorEvent.SpeedData\022 \n\003rpm"
    "\030\004 \003(\0132\023.HU.SensorEvent.RPM\0223\n\rodometer_"
    "data\030\005 \003(\0132\034.HU.SensorEvent.OdometerData"
    "\022,\n\tfuel_data\030\006 \003(\0132\031.HU.SensorEvent.Fue"
    "lLevel\0227\n\021parkingbrake_data\030\007 \003(\0132\034.HU.S"
    "ensorEvent.ParkingBreak\022+\n\tgear_data\030\010 \003"
    "(\0132\030.HU.SensorEvent.GearData\0225\n\020diagnost"
    "ics_data\030\t \003(\0132\033.HU.SensorEvent.Diagnost"
    "ics\022-\n\nnight_mode\030\n \003(\0132\031.HU.SensorEvent"
    ".NightMode\0224\n\017enviorment_data\030\013 \003(\0132\033.HU"
    ".SensorEvent.Environment\022\'\n\thvac_data\030\014 "
    "\003(\0132\024.HU.SensorEvent.HVAC\0225\n\016driving_sta"
    "tus\030\r \003(\0132\035.HU.SensorEvent.DrivingStatus"
    "\0225\n\016dead_reckoning\030\016 \003(\0132\035.HU.SensorEven"
    "t.DeadReckoning\0221\n\016passenger_data\030\017 \003(\0132"
    "\031.HU.SensorEvent.Passenger\022\'\n\tdoor_data\030"
    "\020 \003(\0132\024.HU.SensorEvent.Door\022)\n\nlight_dat"
    "a\030\021 \003(\0132\025.HU.SensorEvent.Light\022)\n\naccel_"
    "data\030\023 \003(\0132\025.HU.SensorEvent.Accel\022\'\n\tgyr"
    "o_data\030\024 \003(\0132\024.HU.SensorEvent.Gyro\032\212\001\n\014L"
    "ocationData\022\021\n\ttimestamp\030\001 \001(\004\022\020\n\010latitu"
    "de\030\002 \001(\005\022\021\n\tlongitude\030\003 \001(\005\022\020\n\010accuracy\030"
    "\004 \001(\r\022\020\n\010altitude\030\005 \001(\005\022\r\n\005speed\030\006 \001(\005\022\017"
    "\n\007bearing\030\007 \001(\005\032\035\n\tNightMode\022\020\n\010is_night"
    "\030\001 \002(\010\032\022\n\003RPM\022\013\n\003rpm\030\001 \002(\005\032@\n\tFuelLevel\022"
    "\022\n\nfuel_level\030\001 \002(\005\022\r\n\005range\030\002 \001(\005\022\020\n\010lo"
    "w_fuel\030\003 \001(\010\032\214\002\n\rDrivingStatus\022\016\n\006status"
    "\030\001 \002(\005\"\352\001\n\006STATUS\022!\n\035DRIVE_STATUS_FULLY_"
    "RESTRICTED\020\037\022\"\n\036DRIVE_STATUS_LIMIT_MESSA"
    "GE_LEN\020\020\022\032\n\026DRIVE_STATUS_NO_CONFIG\020\010\022\"\n\036"
    "DRIVE_STATUS_NO_KEYBOARD_INPUT\020\002\022\031\n\025DRIV"
    "E_STATUS_NO_VIDEO\020\001\022\037\n\033DRIVE_STATUS_NO_V"
    "OICE_INPUT\020\004\022\035\n\031DRIVE_STATUS_UNRESTRICTE"
    "D\020\000\032<\n\rDeadReckoning\022\026\n\016steering_angel\030\001"
    " \001(\005\022\023\n\013wheel_speed\030\002 \001(\005\032D\n\013CompassData"
    "\022\022\n\nbearing_e6\030\001 \001(\005\022\020\n\010pitch_e6\030\002 \001(\005\022\017"
    "\n\007roll_e6\030\003 \001(\005\032O\n\tSpeedData\022\020\n\010speed_e6"
    "\030\001 \001(\005\022\026\n\016cruise_engaged\030\002 \001(\010\022\030\n\020cruise"
    "_set_speed\030\003 \001(\010\0323\n\014OdometerData\022\016\n\006kms_"
    "el\030\001 \001(\005\022\023\n\013trip_kms_el\030\002 \001(\005\032&\n\014Parking"
    "Break\022\026\n\016parking_breake\030\001 \001(\010\032&\n\tPasseng"
    "er\022\031\n\021passenger_present\030\001 \001(\010\032\'\n\013Diagnos"
    "tics\022\030\n\020diagnostics_byte\030\001 \001(\014\032H\n\013Enviro"
    "nment\022\026\n\016temperature_e3\030\001 \001(\005\022\023\n\013pressur"
    "e_e3\030\002 \001(\005\022\014\n\004rain\030\003 \001(\005\032E\n\004HVAC\022\035\n\025targ"
    "et_temperature_e3\030\001 \001(\005\022\036\n\026current_tempe"
    "rature_e3\030\002 \001(\005\032X\n\005Accel\022\031\n\021acceleration"
    "_x_e3\030\001 \001(\005\022\031\n\021acceleration_y_e3\030\002 \001(\005\022\031"
    "\n\021acceleration_z_e3\030\003 \001(\005\032]\n\004Gyro\022\033\n\023rot"
    "ation_speed_x_e3\030\001 \001(\005\022\033\n\023rotation_speed"
    "_y_e3\030\002 \001(\005\022\033\n\023rotation_speed_z_e3\030\003 \001(\005"
    "\032\?\n\004Door\022\021\n\thood_open\030\001 \001(\010\022\021\n\tboot_open"
    "\030\002 \001(\010\022\021\n\tdoor_open\030\003 \003(\010\032\226\003\n\005Light\0228\n\th"
    "eadlight\030\001 \001(\0162%.HU.SensorEvent.Light.HE"
    "ADLIGHT_STATE\022B\n\016turn_indicator\030\002 \001(\0162*."
    "HU.SensorEvent.Light.TURN_INDICATOR_STAT"
    "E\022\027\n\017hazard_light_on\030\003 \001(\010\"m\n\017HEADLIGHT_"
    "STATE\022\025\n\021HEADLIGHT_STATE_0\020\000\022\025\n\021HEADLIGH"
    "T_STATE_1\020\001\022\025\n\021HEADLIGHT_STATE_2\020\002\022\025\n\021HE"
    "ADLIGHT_STATE_3\020\003\"\206\001\n\024TURN_INDICATOR_STA"
    "TE\022\032\n\026TURN_INDICATOR_STATE_0\020\000\022\032\n\026TURN_I"
    "NDICATOR_STATE_1\020\001\022\032\n\026TURN_INDICATOR_STA"
    "TE_2\020\002\022\032\n\026TURN_INDICATOR_STATE_3\020\003\032\250\002\n\010G"
    "earData\022+\n\004gear\030\001 \002(\0162\035.HU.SensorEvent.G"
    "earData.GEAR\"\356\001\n\004GEAR\022\016\n\nGEAR_DRIVE\020d\022\017\n"
    "\013GEAR_EIGHTH\020\010\022\016\n\nGEAR_FIFTH\020\005\022\016\n\nGEAR_F"
    "IRST\020\001\022\017\n\013GEAR_FOURTH\020\004\022\020\n\014GEAR_NEUTRAL\020"
    "\000\022\016\n\nGEAR_NINTH\020\t\022\r\n\tGEAR_PARK\020e\022\020\n\014GEAR"
    "_REVERSE\020f\022\017\n\013GEAR_SECOND\020\002\022\020\n\014GEAR_SEVE"
    "NTH\020\007\022\016\n\nGEAR_SIXTH\020\006\022\016\n\nGEAR_TENTH\020\n\022\016\n"
    "\nGEAR_THIRD\020\003\"K\n\nAudioCofig\022\023\n\013sample_ra"
    "te\030\001 \002(\r\022\021\n\tbit_depth\030\002 \002(\r\022\025\n\rchannel_c"
    "ount\030\003 \002(\r\"\322\023\n\021ChannelDescriptor\022\022\n\nchan"
    "nel_id\030\001 \002(\r\022;\n\016sensor_channel\030\002 \001(\0132#.H"
    "U.ChannelDescriptor.SensorChannel\022H\n\025out"
    "put_stream_channel\030\003 \001(\0132).HU.ChannelDes"
    "criptor.OutputStreamChannel\022D\n\023input_eve"
    "nt_channel\030\004 \001(\0132\'.HU.ChannelDescriptor."
    "InputEventChannel\022F\n\024input_stream_channe"
    "l\030\005 \001(\0132(.HU.ChannelDescriptor.InputStre"
    "amChannel\022A\n\021bluetooth_service\030\006 \001(\0132&.H"
    "U.ChannelDescriptor.BluetoothService\022P\n\031"
    "navigation_status_service\030\010 \001(\0132-.HU.Cha"
    "nnelDescriptor.NavigationStatusService\022F"
    "\n\024phone_status_service\030\n \001(\0132(.HU.Channe"
    "lDescriptor.PhoneStatusService\022N\n\030vendor"
    "_extension_service\030\014 \001(\0132,.HU.ChannelDes"
    "criptor.VendorExtensionService\022V\n\034generi"
    "c_notification_service\030\r \001(\01320.HU.Channe"
    "lDescriptor.GenericNotificationService\032y"
    "\n\rSensorChannel\022\?\n\013sensor_list\030\001 \003(\0132*.H"
    "U.ChannelDescriptor.SensorChannel.Sensor"
    "\032\'\n\006Sensor\022\035\n\004type\030\001 \001(\0162\017.HU.SENSOR_TYP"
    "E\032\245\005\n\023OutputStreamChannel\022\035\n\004type\030\001 \002(\0162"
    "\017.HU.STREAM_TYPE\022\"\n\naudio_type\030\002 \001(\0162\016.H"
    "U.AUDIO_TYPE\022%\n\raudio_configs\030\003 \003(\0132\016.HU"
    ".AudioCofig\022L\n\rvideo_configs\030\004 \003(\01325.HU."
    "ChannelDescriptor.OutputStreamChannel.Vi"
    "deoConfig\022\037\n\027available_while_in_call\030\005 \001"
    "(\010\032\264\003\n\013VideoConfig\022Z\n\nresolution\030\001 \002(\0162F"
    ".HU.ChannelDescriptor.OutputStreamChanne"
    "l.VideoConfig.VIDEO_RESOLUTION\022S\n\nframe_"
    "rate\030\002 \002(\0162\?.HU.ChannelDescriptor.Output"
    "StreamChannel.VideoConfig.VIDEO_FPS\022\024\n\014m"
    "argin_width\030\003 \002(\r\022\025\n\rmargin_height\030\004 \002(\r"
    "\022\013\n\003dpi\030\005 \002(\r\022\030\n\020additional_depth\030\006 \001(\r\""
    "o\n\020VIDEO_RESOLUTION\022\034\n\030VIDEO_RESOLUTION_"
    "800x480\020\001\022\035\n\031VIDEO_RESOLUTION_1280x720\020\002"
    "\022\036\n\032VIDEO_RESOLUTION_1920x1080\020\003\"/\n\tVIDE"
    "O_FPS\022\020\n\014VIDEO_FPS_30\020\001\022\020\n\014VIDEO_FPS_60\020"
    "\002\032\220\002\n\021InputEventChannel\022\032\n\022keycodes_supp"
    "orted\030\001 \003(\r\022V\n\023touch_screen_config\030\002 \001(\013"
    "29.HU.ChannelDescriptor.InputEventChanne"
    "l.TouchScreenConfig\022S\n\020touch_pad_config\030"
    "\003 \001(\01329.HU.ChannelDescriptor.InputEventC"
    "hannel.TouchScreenConfig\0322\n\021TouchScreenC"
    "onfig\022\r\n\005width\030\001 \002(\r\022\016\n\006height\030\002 \002(\r\032z\n\022"
    "InputStreamChannel\022\035\n\004type\030\001 \002(\0162\017.HU.ST"
    "REAM_TYPE\022$\n\014audio_config\030\002 \002(\0132\016.HU.Aud"
    "ioCofig\022\037\n\027available_while_in_call\030\003 \001(\010"
    "\032f\n\020BluetoothService\022\023\n\013car_address\030\001 \002("
    "\t\022=\n\031supported_pairing_methods\030\002 \003(\0162\032.H"
    "U.BluetoothPairingMethod\032\340\002\n\027NavigationS"
    "tatusService\022\033\n\023minimum_interval_ms\030\001 \002("
    "\r\022H\n\004type\030\002 \002(\0162:.HU.ChannelDescriptor.N"
    "avigationStatusService.CLUSTER_TYPE\022Q\n\ri"
    "mage_options\030\003 \001(\0132:.HU.ChannelDescripto"
    "r.NavigationStatusService.ImageOptions\032H"
    "\n\014ImageOptions\022\r\n\005width\030\001 \002(\005\022\016\n\006height\030"
    "\002 \002(\005\022\031\n\021colour_depth_bits\030\003 \002(\005\"A\n\014CLUS"
    "TER_TYPE\022\033\n\027CUSTOM_IMAGES_SUPPORTED\020\001\022\024\n"
    "\020IMAGE_CODES_ONLY\020\002\032\024\n\022PhoneStatusServic"
    "e\032P\n\026VendorExtensionService\022\014\n\004name\030\001 \001("
    "\t\022\032\n\022package_white_list\030\002 \003(\t\022\014\n\004data\030\003 "
    "\001(\014\032*\n\032GenericNotificationService\022\014\n\004nam"
    "e\030\001 \001(\t\"-\n\027ServiceDiscoveryRequest\022\022\n\nph"
    "one_name\030\004 \001(\t\"\272\002\n\030ServiceDiscoveryRespo"
    "nse\022\'\n\010channels\030\001 \003(\0132\025.HU.ChannelDescri"
    "ptor\022\026\n\016head_unit_name\030\002 \002(\t\022\021\n\tcar_mode"
    "l\030\003 \002(\t\022\020\n\010car_year\030\004 \002(\t\022\022\n\ncar_serial\030"
    "\005 \002(\t\022\022\n\ndriver_pos\030\006 \002(\010\022\025\n\rheadunit_ma"
    "ke\030\007 \002(\t\022\026\n\016headunit_model\030\010 \002(\t\022\020\n\010sw_b"
    "uild\030\t \002(\t\022\022\n\nsw_version\030\n \002(\t\022\'\n\037can_pl"
    "ay_native_media_during_vr\030\013 \002(\010\022\022\n\nhide_"
    "clock\030\014 \002(\010\"2\n\022ChannelOpenRequest\022\020\n\010pri"
    "ority\030\001 \001(\005\022\n\n\002id\030\002 \001(\005\"1\n\023ChannelOpenRe"
    "sponse\022\032\n\006status\030\001 \002(\0162\n.HU.STATUS\" \n\013Pi"
    "ngRequest\022\021\n\ttimestamp\030\001 \002(\003\"!\n\014PingResp"
    "onse\022\021\n\ttimestamp\030\001 \002(\003\"X\n\017ShutdownReque"
    "st\022*\n\006reason\030\001 \001(\0162\032.HU.ShutdownRequest."
    "REASON\"\031\n\006REASON\022\017\n\013REASON_QUIT\020\001\"\022\n\020Shu"
    "tdownResponse\"!\n\021MediaSetupRequest\022\014\n\004ty"
    "pe\030\001 \001(\r\"\255\001\n\022MediaSetupResponse\0229\n\014media"
    "_status\030\001 \002(\0162#.HU.MediaSetupResponse.ME"
    "DIA_STATUS\022\023\n\013max_unacked\030\002 \002(\r\022\017\n\007confi"
    "gs\030\003 \003(\r\"6\n\014MEDIA_STATUS\022\022\n\016MEDIA_STATUS"
    "_1\020\001\022\022\n\016MEDIA_STATUS_2\020\002\"\022\n\020MediaStopReq"
    "uest\"4\n\021MediaStartRequest\022\017\n\007session\030\001 \002"
    "(\005\022\016\n\006config\030\002 \001(\r\"*\n\010MediaAck\022\017\n\007sessio"
    "n\030\001 \002(\005\022\r\n\005value\030\002 \002(\r\"H\n\nMicRequest\022\014\n\004"
    "open\030\001 \002(\010\022\013\n\003anc\030\002 \001(\010\022\n\n\002ec\030\003 \001(\010\022\023\n\013m"
    "ax_unacked\030\004 \001(\005\"-\n\013MicResponse\022\017\n\007sessi"
    "on\030\001 \002(\005\022\r\n\005value\030\002 \002(\r\"s\n\021VideoFocusReq"
    "uest\022\022\n\ndisp_index\030\001 \001(\005\022\"\n\004mode\030\002 \001(\0162\024"
    ".HU.VIDEO_FOCUS_MODE\022&\n\006reason\030\003 \001(\0162\026.H"
    "U.VIDEO_FOCUS_REASON\"E\n\nVideoFocus\022\"\n\004mo"
    "de\030\001 \001(\0162\024.HU.VIDEO_FOCUS_MODE\022\023\n\013unrequ"
    "ested\030\002 \001(\010\"M\n\022SensorStartRequest\022\035\n\004typ"
    "e\030\001 \002(\0162\017.HU.SENSOR_TYPE\022\030\n\020refresh_inte"
    "rval\030\002 \001(\003\"1\n\023SensorStartResponse\022\032\n\006sta"
    "tus\030\001 \002(\0162\n.HU.STATUS\",\n\026NavigationFocus"
    "Request\022\022\n\nfocus_type\030\001 \001(\r\"-\n\027Navigatio"
    "nFocusResponse\022\022\n\nfocus_type\030\001 \001(\r\"\220\001\n\023V"
    "oiceSessionRequest\022:\n\014voice_status\030\001 \001(\016"
    "2$.HU.VoiceSessionRequest.VOICE_STATUS\"="
    "\n\014VOICE_STATUS\022\026\n\022VOICE_STATUS_START\020\001\022\025"
    "\n\021VOICE_STATUS_STOP\020\002\"\303\001\n\021AudioFocusRequ"
    "est\0225\n\nfocus_type\030\001 \002(\0162!.HU.AudioFocusR"
    "equest.AUDIO_FOCUS\"w\n\013AUDIO_FOCUS\022\024\n\020AUD"
    "IO_FOCUS_GAIN\020\001\022\036\n\032AUDIO_FOCUS_GAIN_TRAN"
    "SIENT\020\002\022\031\n\025AUDIO_FOCUS_GAIN_NAVI\020\003\022\027\n\023AU"
    "DIO_FOCUS_RELEASE\020\004\"\366\002\n\022AudioFocusRespon"
    "se\022<\n\nfocus_type\030\001 \002(\0162(.HU.AudioFocusRe"
    "sponse.AUDIO_FOCUS_STATE\"\241\002\n\021AUDIO_FOCUS"
    "_STATE\022\032\n\026AUDIO_FOCUS_STATE_GAIN\020\001\022$\n AU"
    "DIO_FOCUS_STATE_GAIN_TRANSIENT\020\002\022\032\n\026AUDI"
    "O_FOCUS_STATE_LOSS\020\003\022-\n)AUDIO_FOCUS_STAT"
    "E_LOSS_TRANSIENT_CAN_DUCK\020\004\022$\n AUDIO_FOC"
    "US_STATE_LOSS_TRANSIENT\020\005\022%\n!AUDIO_FOCUS"
    "_STATE_GAIN_MEDIA_ONLY\020\006\0222\n.AUDIO_FOCUS_"
    "STATE_GAIN_TRANSIENT_GUIDANCE_ONLY\020\007\"2\n\024"
    "AuthCompleteResponse\022\032\n\006status\030\001 \002(\0162\n.H"
    "U.STATUS\"\227\003\n\013PhoneStatus\022#\n\005calls\030\001 \003(\0132"
    "\024.HU.PhoneStatus.Call\022\027\n\017signal_strength"
    "\030\002 \001(\r\032\234\001\n\004Call\022*\n\005state\030\001 \001(\0162\033.HU.Phon"
    "eStatus.PHONE_STATE\022\021\n\tcall_time\030\002 \001(\r\022\024"
    "\n\014phone_number\030\003 \001(\t\022\021\n\tcaller_id\030\004 \001(\t\022"
    "\031\n\021phone_number_type\030\005 \001(\t\022\021\n\tthumbnail\030"
    "\006 \001(\014\"\252\001\n\013PHONE_STATE\022\027\n\023PHONE_STATE_IN_"
    "CALL\020\001\022\027\n\023PHONE_STATE_ON_HOLD\020\002\022\031\n\025PHONE"
    "_STATE_HANGINGUP\020\003\022\030\n\024PHONE_STATE_INCOMI"
    "NG\020\004\022\031\n\025PHONE_STATE_UNKNOWN_5\020\005\022\031\n\025PHONE"
    "_STATE_UNKNOWN_6\020\006\"<\n\020PhoneStatusInput\022\025"
    "\n\rcaller_number\030\001 \001(\t\022\021\n\tcaller_id\030\002 \001(\t"
    "\"D\n\032GenericNotificationRequest\022\n\n\002id\030\001 \002"
    "(\t\022\014\n\004text\030\002 \001(\t\022\014\n\004icon\030\003 \001(\t\":\n\033Generi"
    "cNotificationResponse\022\n\n\002id\030\001 \002(\t\022\017\n\007han"
    "dled\030\002 \002(\010\"\033\n\031StartGenericNotifications\""
    "\032\n\030StopGenericNotifications\"d\n\027Bluetooth"
    "PairingRequest\022\025\n\rphone_address\030\001 \002(\t\0222\n"
    "\016pairing_method\030\002 \001(\0162\032.HU.BluetoothPair"
    "ingMethod\"\255\001\n\030BluetoothPairingResponse\022\026"
    "\n\016already_paired\030\001 \001(\010\022;\n\006status\030\002 \001(\0162+"
    ".HU.BluetoothPairingResponse.PAIRING_STA"
    "TUS\"<\n\016PAIRING_STATUS\022\024\n\020PAIRING_STATUS_"
    "1\020\001\022\024\n\020PAIRING_STATUS_2\020\002\"!\n\021BluetoothAu"
    "thData\022\014\n\004data\030\001 \001(\t\"`\n\021NAVMessagesStatu"
    "s\022,\n\006status\030\001 \001(\0162\034.HU.NAVMessagesStatus"
    ".STATUS\"\035\n\006STATUS\022\t\n\005START\020\001\022\010\n\004STOP\020\002\"\206"
    "\005\n\016NAVTurnMessage\022\022\n\nevent_name\030\001 \001(\t\022/\n"
    "\tturn_side\030\002 \001(\0162\034.HU.NAVTurnMessage.TUR"
    "N_SIDE\0221\n\nturn_event\030\003 \001(\0162\035.HU.NAVTurnM"
    "essage.TURN_EVENT\022\r\n\005image\030\004 \001(\014\022\023\n\013turn"
    "_number\030\005 \001(\005\022\022\n\nturn_angle\030\006 \001(\005\"@\n\tTUR"
    "N_SIDE\022\r\n\tTURN_LEFT\020\001\022\016\n\nTURN_RIGHT\020\002\022\024\n"
    "\020TURN_UNSPECIFIED\020\003\"\201\003\n\nTURN_EVENT\022\020\n\014TU"
    "RN_UNKNOWN\020\000\022\017\n\013TURN_DEPART\020\001\022\024\n\020TURN_NA"
    "ME_CHANGE\020\002\022\024\n\020TURN_SLIGHT_TURN\020\003\022\r\n\tTUR"
    "N_TURN\020\004\022\023\n\017TURN_SHARP_TURN\020\005\022\017\n\013TURN_U_"
    "TURN\020\006\022\020\n\014TURN_ON_RAMP\020\007\022\021\n\rTURN_OFF_RAM"
    "P\020\010\022\r\n\tTURN_FORK\020\t\022\016\n\nTURN_MERGE\020\n\022\031\n\025TU"
    "RN_ROUNDABOUT_ENTER\020\013\022\030\n\024TURN_ROUNDABOUT"
    "_EXIT\020\014\022\"\n\036TURN_ROUNDABOUT_ENTER_AND_EXI"
    "T\020\r\022\021\n\rTURN_STRAIGHT\020\016\022\023\n\017TURN_FERRY_BOA"
    "T\020\020\022\024\n\020TURN_FERRY_TRAIN\020\021\022\024\n\020TURN_DESTIN"
    "ATION\020\023\"\212\002\n\022NAVDistanceMessage\022\020\n\010distan"
    "ce\030\001 \001(\005\022\022\n\ntime_until\030\002 \001(\005\022\030\n\020display_"
    "distance\030\003 \001(\004\022K\n\025display_distance_unit\030"
    "\004 \001(\0162,.HU.NAVDistanceMessage.DISPLAY_DI"
    "STANCE_UNIT\"g\n\025DISPLAY_DISTANCE_UNIT\022\n\n\006"
    "METERS\020\001\022\020\n\014KILOMETERS10\020\002\022\016\n\nKILOMETERS"
    "\020\003\022\013\n\007MILES10\020\004\022\t\n\005MILES\020\005\022\010\n\004FEET\020\006*\027\n\006"
    "STATUS\022\r\n\tSTATUS_OK\020\000*\246\004\n\013SENSOR_TYPE\022\030\n"
    "\024SENSOR_TYPE_LOCATION\020\001\022\027\n\023SENSOR_TYPE_C"
    "OMPASS\020\002\022\031\n\025SENSOR_TYPE_CAR_SPEED\020\003\022\023\n\017S"
    "ENSOR_TYPE_RPM\020\004\022\030\n\024SENSOR_TYPE_ODOMETER"
    "\020\005\022\032\n\026SENSOR_TYPE_FUEL_LEVEL\020\006\022\035\n\031SENSOR"
    "_TYPE_PARKING_BRAKE\020\007\022\024\n\020SENSOR_TYPE_GEA"
    "R\020\010\022\033\n\027SENSOR_TYPE_DIAGNOSTICS\020\t\022\032\n\026SENS"
    "OR_TYPE_NIGHT_DATA\020\n\022\033\n\027SENSOR_TYPE_ENVI"
    "RONMENT\020\013\022\024\n\020SENSOR_TYPE_HVAC\020\014\022\036\n\032SENSO"
    "R_TYPE_DRIVING_STATUS\020\r\022\035\n\031SENSOR_TYPE_D"
    "EAD_RECONING\020\016\022\031\n\025SENSOR_TYPE_PASSENGER\020"
    "\017\022\024\n\020SENSOR_TYPE_DOOR\020\020\022\025\n\021SENSOR_TYPE_L"
    "IGHT\020\021\022\024\n\020SENSOR_TYPE_TIRE\020\022\022\025\n\021SENSOR_T"
    "YPE_ACCEL\020\023\022\024\n\020SENSOR_TYPE_GYRO\020\024\022\023\n\017SEN"
    "SOR_TYPE_GPS\020\025*f\n\nAUDIO_TYPE\022\025\n\021AUDIO_TY"
    "PE_SPEECH\020\001\022\025\n\021AUDIO_TYPE_SYSTEM\020\002\022\024\n\020AU"
    "DIO_TYPE_MEDIA\020\003\022\024\n\020AUDIO_TYPE_ALARM\020\004*;"
    "\n\013STREAM_TYPE\022\025\n\021STREAM_TYPE_AUDIO\020\001\022\025\n\021"
    "STREAM_TYPE_VIDEO\020\003*\231\001\n\026BluetoothPairing"
    "Method\022\035\n\031BLUETOOTH_PARING_METHOD_1\020\001\022 \n"
    "\034BLUETOOTH_PARING_METHOD_A2DP\020\002\022\035\n\031BLUET"
    "OOTH_PARING_METHOD_3\020\003\022\037\n\033BLUETOOTH_PARI"
    "NG_METHOD_HFP\020\004*P\n\020VIDEO_FOCUS_MODE\022\034\n\030V"
    "IDEO_FOCUS_MODE_FOCUSED\020\001\022\036\n\032VIDEO_FOCUS"
    "_MODE_UNFOCUSED\020\002*H\n\022VIDEO_FOCUS_REASON\022"
    "\030\n\024VIDEO_FOCUS_REASON_1\020\001\022\030\n\024VIDEO_FOCUS"
    "_REASON_2\020\002B\003\200\001\000"
};
static ::absl::once_flag descriptor_table_AndroidAuto_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_AndroidAuto_2eproto = {
    false,
    false,
    11856,
    descriptor_table_protodef_AndroidAuto_2eproto,
    "AndroidAuto.proto",
    &descriptor_table_AndroidAuto_2eproto_once,
    nullptr,
    0,
    84,
    schemas,
    file_default_instances,
    TableStruct_AndroidAuto_2eproto::offsets,
    file_level_metadata_AndroidAuto_2eproto,
    file_level_enum_descriptors_AndroidAuto_2eproto,
    file_level_service_descriptors_AndroidAuto_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_AndroidAuto_2eproto_getter() {
  return &descriptor_table_AndroidAuto_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_AndroidAuto_2eproto(&descriptor_table_AndroidAuto_2eproto);
namespace HU {
const ::google::protobuf::EnumDescriptor* TouchInfo_TOUCH_ACTION_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t TouchInfo_TOUCH_ACTION_internal_data_[] = {
    196608u, 0u, };
bool TouchInfo_TOUCH_ACTION_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr TouchInfo_TOUCH_ACTION TouchInfo::TOUCH_ACTION_PRESS;
constexpr TouchInfo_TOUCH_ACTION TouchInfo::TOUCH_ACTION_RELEASE;
constexpr TouchInfo_TOUCH_ACTION TouchInfo::TOUCH_ACTION_DRAG;
constexpr TouchInfo_TOUCH_ACTION TouchInfo::TOUCH_ACTION_MIN;
constexpr TouchInfo_TOUCH_ACTION TouchInfo::TOUCH_ACTION_MAX;
constexpr int TouchInfo::TOUCH_ACTION_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* SensorEvent_DrivingStatus_STATUS_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t SensorEvent_DrivingStatus_STATUS_internal_data_[] = {
    196608u, 32u, 268443682u, };
bool SensorEvent_DrivingStatus_STATUS_IsValid(int value) {
  return 0 <= value && value <= 31 && ((2147549463u >> value) & 1) != 0;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SensorEvent_DrivingStatus_STATUS SensorEvent_DrivingStatus::DRIVE_STATUS_FULLY_RESTRICTED;
constexpr SensorEvent_DrivingStatus_STATUS SensorEvent_DrivingStatus::DRIVE_STATUS_LIMIT_MESSAGE_LEN;
constexpr SensorEvent_DrivingStatus_STATUS SensorEvent_DrivingStatus::DRIVE_STATUS_NO_CONFIG;
constexpr SensorEvent_DrivingStatus_STATUS SensorEvent_DrivingStatus::DRIVE_STATUS_NO_KEYBOARD_INPUT;
constexpr SensorEvent_DrivingStatus_STATUS SensorEvent_DrivingStatus::DRIVE_STATUS_NO_VIDEO;
constexpr SensorEvent_DrivingStatus_STATUS SensorEvent_DrivingStatus::DRIVE_STATUS_NO_VOICE_INPUT;
constexpr SensorEvent_DrivingStatus_STATUS SensorEvent_DrivingStatus::DRIVE_STATUS_UNRESTRICTED;
constexpr SensorEvent_DrivingStatus_STATUS SensorEvent_DrivingStatus::STATUS_MIN;
constexpr SensorEvent_DrivingStatus_STATUS SensorEvent_DrivingStatus::STATUS_MAX;
constexpr int SensorEvent_DrivingStatus::STATUS_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* SensorEvent_Light_HEADLIGHT_STATE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t SensorEvent_Light_HEADLIGHT_STATE_internal_data_[] = {
    262144u, 0u, };
bool SensorEvent_Light_HEADLIGHT_STATE_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SensorEvent_Light_HEADLIGHT_STATE SensorEvent_Light::HEADLIGHT_STATE_0;
constexpr SensorEvent_Light_HEADLIGHT_STATE SensorEvent_Light::HEADLIGHT_STATE_1;
constexpr SensorEvent_Light_HEADLIGHT_STATE SensorEvent_Light::HEADLIGHT_STATE_2;
constexpr SensorEvent_Light_HEADLIGHT_STATE SensorEvent_Light::HEADLIGHT_STATE_3;
constexpr SensorEvent_Light_HEADLIGHT_STATE SensorEvent_Light::HEADLIGHT_STATE_MIN;
constexpr SensorEvent_Light_HEADLIGHT_STATE SensorEvent_Light::HEADLIGHT_STATE_MAX;
constexpr int SensorEvent_Light::HEADLIGHT_STATE_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* SensorEvent_Light_TURN_INDICATOR_STATE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t SensorEvent_Light_TURN_INDICATOR_STATE_internal_data_[] = {
    262144u, 0u, };
bool SensorEvent_Light_TURN_INDICATOR_STATE_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SensorEvent_Light_TURN_INDICATOR_STATE SensorEvent_Light::TURN_INDICATOR_STATE_0;
constexpr SensorEvent_Light_TURN_INDICATOR_STATE SensorEvent_Light::TURN_INDICATOR_STATE_1;
constexpr SensorEvent_Light_TURN_INDICATOR_STATE SensorEvent_Light::TURN_INDICATOR_STATE_2;
constexpr SensorEvent_Light_TURN_INDICATOR_STATE SensorEvent_Light::TURN_INDICATOR_STATE_3;
constexpr SensorEvent_Light_TURN_INDICATOR_STATE SensorEvent_Light::TURN_INDICATOR_STATE_MIN;
constexpr SensorEvent_Light_TURN_INDICATOR_STATE SensorEvent_Light::TURN_INDICATOR_STATE_MAX;
constexpr int SensorEvent_Light::TURN_INDICATOR_STATE_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* SensorEvent_GearData_GEAR_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t SensorEvent_GearData_GEAR_internal_data_[] = {
    720896u, 96u, 0u, 0u, 234881024u, };
bool SensorEvent_GearData_GEAR_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, SensorEvent_GearData_GEAR_internal_data_);
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SensorEvent_GearData_GEAR SensorEvent_GearData::GEAR_DRIVE;
constexpr SensorEvent_GearData_GEAR SensorEvent_GearData::GEAR_EIGHTH;
constexpr SensorEvent_GearData_GEAR SensorEvent_GearData::GEAR_FIFTH;
constexpr SensorEvent_GearData_GEAR SensorEvent_GearData::GEAR_FIRST;
constexpr SensorEvent_GearData_GEAR SensorEvent_GearData::GEAR_FOURTH;
constexpr SensorEvent_GearData_GEAR SensorEvent_GearData::GEAR_NEUTRAL;
constexpr SensorEvent_GearData_GEAR SensorEvent_GearData::GEAR_NINTH;
constexpr SensorEvent_GearData_GEAR SensorEvent_GearData::GEAR_PARK;
constexpr SensorEvent_GearData_GEAR SensorEvent_GearData::GEAR_REVERSE;
constexpr SensorEvent_GearData_GEAR SensorEvent_GearData::GEAR_SECOND;
constexpr SensorEvent_GearData_GEAR SensorEvent_GearData::GEAR_SEVENTH;
constexpr SensorEvent_GearData_GEAR SensorEvent_GearData::GEAR_SIXTH;
constexpr SensorEvent_GearData_GEAR SensorEvent_GearData::GEAR_TENTH;
constexpr SensorEvent_GearData_GEAR SensorEvent_GearData::GEAR_THIRD;
constexpr SensorEvent_GearData_GEAR SensorEvent_GearData::GEAR_MIN;
constexpr SensorEvent_GearData_GEAR SensorEvent_GearData::GEAR_MAX;
constexpr int SensorEvent_GearData::GEAR_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_RESOLUTION_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_RESOLUTION_internal_data_[] = {
    196609u, 0u, };
bool ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_RESOLUTION_IsValid(int value) {
  return 1 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_RESOLUTION ChannelDescriptor_OutputStreamChannel_VideoConfig::VIDEO_RESOLUTION_800x480;
constexpr ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_RESOLUTION ChannelDescriptor_OutputStreamChannel_VideoConfig::VIDEO_RESOLUTION_1280x720;
constexpr ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_RESOLUTION ChannelDescriptor_OutputStreamChannel_VideoConfig::VIDEO_RESOLUTION_1920x1080;
constexpr ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_RESOLUTION ChannelDescriptor_OutputStreamChannel_VideoConfig::VIDEO_RESOLUTION_MIN;
constexpr ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_RESOLUTION ChannelDescriptor_OutputStreamChannel_VideoConfig::VIDEO_RESOLUTION_MAX;
constexpr int ChannelDescriptor_OutputStreamChannel_VideoConfig::VIDEO_RESOLUTION_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_FPS_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_FPS_internal_data_[] = {
    131073u, 0u, };
bool ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_FPS_IsValid(int value) {
  return 1 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_FPS ChannelDescriptor_OutputStreamChannel_VideoConfig::VIDEO_FPS_30;
constexpr ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_FPS ChannelDescriptor_OutputStreamChannel_VideoConfig::VIDEO_FPS_60;
constexpr ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_FPS ChannelDescriptor_OutputStreamChannel_VideoConfig::VIDEO_FPS_MIN;
constexpr ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_FPS ChannelDescriptor_OutputStreamChannel_VideoConfig::VIDEO_FPS_MAX;
constexpr int ChannelDescriptor_OutputStreamChannel_VideoConfig::VIDEO_FPS_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ChannelDescriptor_NavigationStatusService_CLUSTER_TYPE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t ChannelDescriptor_NavigationStatusService_CLUSTER_TYPE_internal_data_[] = {
    131073u, 0u, };
bool ChannelDescriptor_NavigationStatusService_CLUSTER_TYPE_IsValid(int value) {
  return 1 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ChannelDescriptor_NavigationStatusService_CLUSTER_TYPE ChannelDescriptor_NavigationStatusService::CUSTOM_IMAGES_SUPPORTED;
constexpr ChannelDescriptor_NavigationStatusService_CLUSTER_TYPE ChannelDescriptor_NavigationStatusService::IMAGE_CODES_ONLY;
constexpr ChannelDescriptor_NavigationStatusService_CLUSTER_TYPE ChannelDescriptor_NavigationStatusService::CLUSTER_TYPE_MIN;
constexpr ChannelDescriptor_NavigationStatusService_CLUSTER_TYPE ChannelDescriptor_NavigationStatusService::CLUSTER_TYPE_MAX;
constexpr int ChannelDescriptor_NavigationStatusService::CLUSTER_TYPE_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ShutdownRequest_REASON_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[8];
}
PROTOBUF_CONSTINIT const uint32_t ShutdownRequest_REASON_internal_data_[] = {
    65537u, 0u, };
bool ShutdownRequest_REASON_IsValid(int value) {
  return 1 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ShutdownRequest_REASON ShutdownRequest::REASON_QUIT;
constexpr ShutdownRequest_REASON ShutdownRequest::REASON_MIN;
constexpr ShutdownRequest_REASON ShutdownRequest::REASON_MAX;
constexpr int ShutdownRequest::REASON_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* MediaSetupResponse_MEDIA_STATUS_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[9];
}
PROTOBUF_CONSTINIT const uint32_t MediaSetupResponse_MEDIA_STATUS_internal_data_[] = {
    131073u, 0u, };
bool MediaSetupResponse_MEDIA_STATUS_IsValid(int value) {
  return 1 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr MediaSetupResponse_MEDIA_STATUS MediaSetupResponse::MEDIA_STATUS_1;
constexpr MediaSetupResponse_MEDIA_STATUS MediaSetupResponse::MEDIA_STATUS_2;
constexpr MediaSetupResponse_MEDIA_STATUS MediaSetupResponse::MEDIA_STATUS_MIN;
constexpr MediaSetupResponse_MEDIA_STATUS MediaSetupResponse::MEDIA_STATUS_MAX;
constexpr int MediaSetupResponse::MEDIA_STATUS_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* VoiceSessionRequest_VOICE_STATUS_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[10];
}
PROTOBUF_CONSTINIT const uint32_t VoiceSessionRequest_VOICE_STATUS_internal_data_[] = {
    131073u, 0u, };
bool VoiceSessionRequest_VOICE_STATUS_IsValid(int value) {
  return 1 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr VoiceSessionRequest_VOICE_STATUS VoiceSessionRequest::VOICE_STATUS_START;
constexpr VoiceSessionRequest_VOICE_STATUS VoiceSessionRequest::VOICE_STATUS_STOP;
constexpr VoiceSessionRequest_VOICE_STATUS VoiceSessionRequest::VOICE_STATUS_MIN;
constexpr VoiceSessionRequest_VOICE_STATUS VoiceSessionRequest::VOICE_STATUS_MAX;
constexpr int VoiceSessionRequest::VOICE_STATUS_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* AudioFocusRequest_AUDIO_FOCUS_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[11];
}
PROTOBUF_CONSTINIT const uint32_t AudioFocusRequest_AUDIO_FOCUS_internal_data_[] = {
    262145u, 0u, };
bool AudioFocusRequest_AUDIO_FOCUS_IsValid(int value) {
  return 1 <= value && value <= 4;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr AudioFocusRequest_AUDIO_FOCUS AudioFocusRequest::AUDIO_FOCUS_GAIN;
constexpr AudioFocusRequest_AUDIO_FOCUS AudioFocusRequest::AUDIO_FOCUS_GAIN_TRANSIENT;
constexpr AudioFocusRequest_AUDIO_FOCUS AudioFocusRequest::AUDIO_FOCUS_GAIN_NAVI;
constexpr AudioFocusRequest_AUDIO_FOCUS AudioFocusRequest::AUDIO_FOCUS_RELEASE;
constexpr AudioFocusRequest_AUDIO_FOCUS AudioFocusRequest::AUDIO_FOCUS_MIN;
constexpr AudioFocusRequest_AUDIO_FOCUS AudioFocusRequest::AUDIO_FOCUS_MAX;
constexpr int AudioFocusRequest::AUDIO_FOCUS_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* AudioFocusResponse_AUDIO_FOCUS_STATE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[12];
}
PROTOBUF_CONSTINIT const uint32_t AudioFocusResponse_AUDIO_FOCUS_STATE_internal_data_[] = {
    458753u, 0u, };
bool AudioFocusResponse_AUDIO_FOCUS_STATE_IsValid(int value) {
  return 1 <= value && value <= 7;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr AudioFocusResponse_AUDIO_FOCUS_STATE AudioFocusResponse::AUDIO_FOCUS_STATE_GAIN;
constexpr AudioFocusResponse_AUDIO_FOCUS_STATE AudioFocusResponse::AUDIO_FOCUS_STATE_GAIN_TRANSIENT;
constexpr AudioFocusResponse_AUDIO_FOCUS_STATE AudioFocusResponse::AUDIO_FOCUS_STATE_LOSS;
constexpr AudioFocusResponse_AUDIO_FOCUS_STATE AudioFocusResponse::AUDIO_FOCUS_STATE_LOSS_TRANSIENT_CAN_DUCK;
constexpr AudioFocusResponse_AUDIO_FOCUS_STATE AudioFocusResponse::AUDIO_FOCUS_STATE_LOSS_TRANSIENT;
constexpr AudioFocusResponse_AUDIO_FOCUS_STATE AudioFocusResponse::AUDIO_FOCUS_STATE_GAIN_MEDIA_ONLY;
constexpr AudioFocusResponse_AUDIO_FOCUS_STATE AudioFocusResponse::AUDIO_FOCUS_STATE_GAIN_TRANSIENT_GUIDANCE_ONLY;
constexpr AudioFocusResponse_AUDIO_FOCUS_STATE AudioFocusResponse::AUDIO_FOCUS_STATE_MIN;
constexpr AudioFocusResponse_AUDIO_FOCUS_STATE AudioFocusResponse::AUDIO_FOCUS_STATE_MAX;
constexpr int AudioFocusResponse::AUDIO_FOCUS_STATE_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* PhoneStatus_PHONE_STATE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[13];
}
PROTOBUF_CONSTINIT const uint32_t PhoneStatus_PHONE_STATE_internal_data_[] = {
    393217u, 0u, };
bool PhoneStatus_PHONE_STATE_IsValid(int value) {
  return 1 <= value && value <= 6;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr PhoneStatus_PHONE_STATE PhoneStatus::PHONE_STATE_IN_CALL;
constexpr PhoneStatus_PHONE_STATE PhoneStatus::PHONE_STATE_ON_HOLD;
constexpr PhoneStatus_PHONE_STATE PhoneStatus::PHONE_STATE_HANGINGUP;
constexpr PhoneStatus_PHONE_STATE PhoneStatus::PHONE_STATE_INCOMING;
constexpr PhoneStatus_PHONE_STATE PhoneStatus::PHONE_STATE_UNKNOWN_5;
constexpr PhoneStatus_PHONE_STATE PhoneStatus::PHONE_STATE_UNKNOWN_6;
constexpr PhoneStatus_PHONE_STATE PhoneStatus::PHONE_STATE_MIN;
constexpr PhoneStatus_PHONE_STATE PhoneStatus::PHONE_STATE_MAX;
constexpr int PhoneStatus::PHONE_STATE_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* BluetoothPairingResponse_PAIRING_STATUS_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[14];
}
PROTOBUF_CONSTINIT const uint32_t BluetoothPairingResponse_PAIRING_STATUS_internal_data_[] = {
    131073u, 0u, };
bool BluetoothPairingResponse_PAIRING_STATUS_IsValid(int value) {
  return 1 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr BluetoothPairingResponse_PAIRING_STATUS BluetoothPairingResponse::PAIRING_STATUS_1;
constexpr BluetoothPairingResponse_PAIRING_STATUS BluetoothPairingResponse::PAIRING_STATUS_2;
constexpr BluetoothPairingResponse_PAIRING_STATUS BluetoothPairingResponse::PAIRING_STATUS_MIN;
constexpr BluetoothPairingResponse_PAIRING_STATUS BluetoothPairingResponse::PAIRING_STATUS_MAX;
constexpr int BluetoothPairingResponse::PAIRING_STATUS_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* NAVMessagesStatus_STATUS_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[15];
}
PROTOBUF_CONSTINIT const uint32_t NAVMessagesStatus_STATUS_internal_data_[] = {
    131073u, 0u, };
bool NAVMessagesStatus_STATUS_IsValid(int value) {
  return 1 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr NAVMessagesStatus_STATUS NAVMessagesStatus::START;
constexpr NAVMessagesStatus_STATUS NAVMessagesStatus::STOP;
constexpr NAVMessagesStatus_STATUS NAVMessagesStatus::STATUS_MIN;
constexpr NAVMessagesStatus_STATUS NAVMessagesStatus::STATUS_MAX;
constexpr int NAVMessagesStatus::STATUS_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* NAVTurnMessage_TURN_SIDE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[16];
}
PROTOBUF_CONSTINIT const uint32_t NAVTurnMessage_TURN_SIDE_internal_data_[] = {
    196609u, 0u, };
bool NAVTurnMessage_TURN_SIDE_IsValid(int value) {
  return 1 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr NAVTurnMessage_TURN_SIDE NAVTurnMessage::TURN_LEFT;
constexpr NAVTurnMessage_TURN_SIDE NAVTurnMessage::TURN_RIGHT;
constexpr NAVTurnMessage_TURN_SIDE NAVTurnMessage::TURN_UNSPECIFIED;
constexpr NAVTurnMessage_TURN_SIDE NAVTurnMessage::TURN_SIDE_MIN;
constexpr NAVTurnMessage_TURN_SIDE NAVTurnMessage::TURN_SIDE_MAX;
constexpr int NAVTurnMessage::TURN_SIDE_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* NAVTurnMessage_TURN_EVENT_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[17];
}
PROTOBUF_CONSTINIT const uint32_t NAVTurnMessage_TURN_EVENT_internal_data_[] = {
    983040u, 32u, 22u, };
bool NAVTurnMessage_TURN_EVENT_IsValid(int value) {
  return 0 <= value && value <= 19 && ((753663u >> value) & 1) != 0;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_UNKNOWN;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_DEPART;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_NAME_CHANGE;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_SLIGHT_TURN;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_TURN;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_SHARP_TURN;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_U_TURN;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_ON_RAMP;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_OFF_RAMP;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_FORK;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_MERGE;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_ROUNDABOUT_ENTER;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_ROUNDABOUT_EXIT;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_ROUNDABOUT_ENTER_AND_EXIT;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_STRAIGHT;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_FERRY_BOAT;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_FERRY_TRAIN;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_DESTINATION;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_EVENT_MIN;
constexpr NAVTurnMessage_TURN_EVENT NAVTurnMessage::TURN_EVENT_MAX;
constexpr int NAVTurnMessage::TURN_EVENT_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* NAVDistanceMessage_DISPLAY_DISTANCE_UNIT_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[18];
}
PROTOBUF_CONSTINIT const uint32_t NAVDistanceMessage_DISPLAY_DISTANCE_UNIT_internal_data_[] = {
    393217u, 0u, };
bool NAVDistanceMessage_DISPLAY_DISTANCE_UNIT_IsValid(int value) {
  return 1 <= value && value <= 6;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr NAVDistanceMessage_DISPLAY_DISTANCE_UNIT NAVDistanceMessage::METERS;
constexpr NAVDistanceMessage_DISPLAY_DISTANCE_UNIT NAVDistanceMessage::KILOMETERS10;
constexpr NAVDistanceMessage_DISPLAY_DISTANCE_UNIT NAVDistanceMessage::KILOMETERS;
constexpr NAVDistanceMessage_DISPLAY_DISTANCE_UNIT NAVDistanceMessage::MILES10;
constexpr NAVDistanceMessage_DISPLAY_DISTANCE_UNIT NAVDistanceMessage::MILES;
constexpr NAVDistanceMessage_DISPLAY_DISTANCE_UNIT NAVDistanceMessage::FEET;
constexpr NAVDistanceMessage_DISPLAY_DISTANCE_UNIT NAVDistanceMessage::DISPLAY_DISTANCE_UNIT_MIN;
constexpr NAVDistanceMessage_DISPLAY_DISTANCE_UNIT NAVDistanceMessage::DISPLAY_DISTANCE_UNIT_MAX;
constexpr int NAVDistanceMessage::DISPLAY_DISTANCE_UNIT_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* STATUS_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[19];
}
PROTOBUF_CONSTINIT const uint32_t STATUS_internal_data_[] = {
    65536u, 0u, };
bool STATUS_IsValid(int value) {
  return 0 <= value && value <= 0;
}
const ::google::protobuf::EnumDescriptor* SENSOR_TYPE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[20];
}
PROTOBUF_CONSTINIT const uint32_t SENSOR_TYPE_internal_data_[] = {
    1376257u, 0u, };
bool SENSOR_TYPE_IsValid(int value) {
  return 1 <= value && value <= 21;
}
const ::google::protobuf::EnumDescriptor* AUDIO_TYPE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[21];
}
PROTOBUF_CONSTINIT const uint32_t AUDIO_TYPE_internal_data_[] = {
    262145u, 0u, };
bool AUDIO_TYPE_IsValid(int value) {
  return 1 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* STREAM_TYPE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[22];
}
PROTOBUF_CONSTINIT const uint32_t STREAM_TYPE_internal_data_[] = {
    65537u, 32u, 2u, };
bool STREAM_TYPE_IsValid(int value) {
  return 0 <= value && value <= 3 && ((10u >> value) & 1) != 0;
}
const ::google::protobuf::EnumDescriptor* BluetoothPairingMethod_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[23];
}
PROTOBUF_CONSTINIT const uint32_t BluetoothPairingMethod_internal_data_[] = {
    262145u, 0u, };
bool BluetoothPairingMethod_IsValid(int value) {
  return 1 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* VIDEO_FOCUS_MODE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[24];
}
PROTOBUF_CONSTINIT const uint32_t VIDEO_FOCUS_MODE_internal_data_[] = {
    131073u, 0u, };
bool VIDEO_FOCUS_MODE_IsValid(int value) {
  return 1 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* VIDEO_FOCUS_REASON_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AndroidAuto_2eproto);
  return file_level_enum_descriptors_AndroidAuto_2eproto[25];
}
PROTOBUF_CONSTINIT const uint32_t VIDEO_FOCUS_REASON_internal_data_[] = {
    131073u, 0u, };
bool VIDEO_FOCUS_REASON_IsValid(int value) {
  return 1 <= value && value <= 2;
}
// ===================================================================

class ButtonInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<ButtonInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ButtonInfo, _impl_._has_bits_);
  static void set_has_scan_code(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_pressed(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_meta(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_long_press(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000f) ^ 0x0000000f) != 0;
  }
};

ButtonInfo::ButtonInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ButtonInfo)
}
ButtonInfo::ButtonInfo(
    ::google::protobuf::Arena* arena, const ButtonInfo& from)
    : ButtonInfo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ButtonInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ButtonInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, scan_code_),
           0,
           offsetof(Impl_, long_press_) -
               offsetof(Impl_, scan_code_) +
               sizeof(Impl_::long_press_));
}
ButtonInfo::~ButtonInfo() {
  // @@protoc_insertion_point(destructor:HU.ButtonInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ButtonInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ButtonInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ButtonInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.scan_code_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.long_press_) -
        reinterpret_cast<char*>(&_impl_.scan_code_)) + sizeof(_impl_.long_press_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ButtonInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> ButtonInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ButtonInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ButtonInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required bool long_press = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ButtonInfo, _impl_.long_press_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ButtonInfo, _impl_.long_press_)}},
    // required uint32 scan_code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ButtonInfo, _impl_.scan_code_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ButtonInfo, _impl_.scan_code_)}},
    // required bool is_pressed = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ButtonInfo, _impl_.is_pressed_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(ButtonInfo, _impl_.is_pressed_)}},
    // required uint32 meta = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ButtonInfo, _impl_.meta_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(ButtonInfo, _impl_.meta_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required uint32 scan_code = 1;
    {PROTOBUF_FIELD_OFFSET(ButtonInfo, _impl_.scan_code_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required bool is_pressed = 2;
    {PROTOBUF_FIELD_OFFSET(ButtonInfo, _impl_.is_pressed_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required uint32 meta = 3;
    {PROTOBUF_FIELD_OFFSET(ButtonInfo, _impl_.meta_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required bool long_press = 4;
    {PROTOBUF_FIELD_OFFSET(ButtonInfo, _impl_.long_press_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ButtonInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ButtonInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required uint32 scan_code = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_scan_code(), target);
  }

  // required bool is_pressed = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_is_pressed(), target);
  }

  // required uint32 meta = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_meta(), target);
  }

  // required bool long_press = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_long_press(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ButtonInfo)
  return target;
}

::size_t ButtonInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ButtonInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // required uint32 scan_code = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_scan_code());
    }

    // required uint32 meta = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_meta());
    }

    // required bool is_pressed = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

    // required bool long_press = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ButtonInfo::_class_data_ = {
    ButtonInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ButtonInfo::GetClassData() const {
  return &_class_data_;
}

void ButtonInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ButtonInfo*>(&to_msg);
  auto& from = static_cast<const ButtonInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ButtonInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.scan_code_ = from._impl_.scan_code_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.meta_ = from._impl_.meta_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.is_pressed_ = from._impl_.is_pressed_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.long_press_ = from._impl_.long_press_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ButtonInfo::CopyFrom(const ButtonInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ButtonInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ButtonInfo::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* ButtonInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ButtonInfo::InternalSwap(ButtonInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ButtonInfo, _impl_.long_press_)
      + sizeof(ButtonInfo::_impl_.long_press_)
      - PROTOBUF_FIELD_OFFSET(ButtonInfo, _impl_.scan_code_)>(
          reinterpret_cast<char*>(&_impl_.scan_code_),
          reinterpret_cast<char*>(&other->_impl_.scan_code_));
}

::google::protobuf::Metadata ButtonInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[0]);
}
// ===================================================================

class ButtonInfoWrapper::_Internal {
 public:
};

ButtonInfoWrapper::ButtonInfoWrapper(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ButtonInfoWrapper)
}
inline PROTOBUF_NDEBUG_INLINE ButtonInfoWrapper::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : button_{visibility, arena, from.button_},
        _cached_size_{0} {}

ButtonInfoWrapper::ButtonInfoWrapper(
    ::google::protobuf::Arena* arena,
    const ButtonInfoWrapper& from)
    : ::google::protobuf::Message(arena) {
  ButtonInfoWrapper* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:HU.ButtonInfoWrapper)
}
inline PROTOBUF_NDEBUG_INLINE ButtonInfoWrapper::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : button_{visibility, arena},
        _cached_size_{0} {}

inline void ButtonInfoWrapper::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ButtonInfoWrapper::~ButtonInfoWrapper() {
  // @@protoc_insertion_point(destructor:HU.ButtonInfoWrapper)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ButtonInfoWrapper::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ButtonInfoWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ButtonInfoWrapper)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.button_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ButtonInfoWrapper::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ButtonInfoWrapper::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ButtonInfoWrapper_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .HU.ButtonInfo button = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ButtonInfoWrapper, _impl_.button_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .HU.ButtonInfo button = 1;
    {PROTOBUF_FIELD_OFFSET(ButtonInfoWrapper, _impl_.button_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::HU::ButtonInfo>()},
  }}, {{
  }},
};

::uint8_t* ButtonInfoWrapper::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ButtonInfoWrapper)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .HU.ButtonInfo button = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_button_size()); i < n; i++) {
    const auto& repfield = this->_internal_button().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ButtonInfoWrapper)
  return target;
}

::size_t ButtonInfoWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ButtonInfoWrapper)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HU.ButtonInfo button = 1;
  total_size += 1UL * this->_internal_button_size();
  for (const auto& msg : this->_internal_button()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ButtonInfoWrapper::_class_data_ = {
    ButtonInfoWrapper::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ButtonInfoWrapper::GetClassData() const {
  return &_class_data_;
}

void ButtonInfoWrapper::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ButtonInfoWrapper*>(&to_msg);
  auto& from = static_cast<const ButtonInfoWrapper&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ButtonInfoWrapper)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_button()->MergeFrom(
      from._internal_button());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ButtonInfoWrapper::CopyFrom(const ButtonInfoWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ButtonInfoWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ButtonInfoWrapper::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_button()))
    return false;
  return true;
}

::_pbi::CachedSize* ButtonInfoWrapper::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ButtonInfoWrapper::InternalSwap(ButtonInfoWrapper* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.button_.InternalSwap(&other->_impl_.button_);
}

::google::protobuf::Metadata ButtonInfoWrapper::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[1]);
}
// ===================================================================

class TouchInfo_Location::_Internal {
 public:
  using HasBits = decltype(std::declval<TouchInfo_Location>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TouchInfo_Location, _impl_._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_pointer_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

TouchInfo_Location::TouchInfo_Location(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.TouchInfo.Location)
}
TouchInfo_Location::TouchInfo_Location(
    ::google::protobuf::Arena* arena, const TouchInfo_Location& from)
    : TouchInfo_Location(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE TouchInfo_Location::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TouchInfo_Location::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, pointer_id_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::pointer_id_));
}
TouchInfo_Location::~TouchInfo_Location() {
  // @@protoc_insertion_point(destructor:HU.TouchInfo.Location)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TouchInfo_Location::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TouchInfo_Location::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.TouchInfo.Location)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.pointer_id_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.pointer_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TouchInfo_Location::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> TouchInfo_Location::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TouchInfo_Location, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TouchInfo_Location_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required uint32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TouchInfo_Location, _impl_.x_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TouchInfo_Location, _impl_.x_)}},
    // required uint32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TouchInfo_Location, _impl_.y_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TouchInfo_Location, _impl_.y_)}},
    // required uint32 pointer_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TouchInfo_Location, _impl_.pointer_id_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TouchInfo_Location, _impl_.pointer_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required uint32 x = 1;
    {PROTOBUF_FIELD_OFFSET(TouchInfo_Location, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint32 y = 2;
    {PROTOBUF_FIELD_OFFSET(TouchInfo_Location, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint32 pointer_id = 3;
    {PROTOBUF_FIELD_OFFSET(TouchInfo_Location, _impl_.pointer_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TouchInfo_Location::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.TouchInfo.Location)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required uint32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_x(), target);
  }

  // required uint32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_y(), target);
  }

  // required uint32 pointer_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_pointer_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.TouchInfo.Location)
  return target;
}

::size_t TouchInfo_Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.TouchInfo.Location)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required uint32 x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_x());
    }

    // required uint32 y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_y());
    }

    // required uint32 pointer_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_pointer_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TouchInfo_Location::_class_data_ = {
    TouchInfo_Location::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TouchInfo_Location::GetClassData() const {
  return &_class_data_;
}

void TouchInfo_Location::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TouchInfo_Location*>(&to_msg);
  auto& from = static_cast<const TouchInfo_Location&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.TouchInfo.Location)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.pointer_id_ = from._impl_.pointer_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TouchInfo_Location::CopyFrom(const TouchInfo_Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.TouchInfo.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TouchInfo_Location::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* TouchInfo_Location::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TouchInfo_Location::InternalSwap(TouchInfo_Location* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TouchInfo_Location, _impl_.pointer_id_)
      + sizeof(TouchInfo_Location::_impl_.pointer_id_)
      - PROTOBUF_FIELD_OFFSET(TouchInfo_Location, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata TouchInfo_Location::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[2]);
}
// ===================================================================

class TouchInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<TouchInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TouchInfo, _impl_._has_bits_);
  static void set_has_action_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_action(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

TouchInfo::TouchInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.TouchInfo)
}
inline PROTOBUF_NDEBUG_INLINE TouchInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        location_{visibility, arena, from.location_} {}

TouchInfo::TouchInfo(
    ::google::protobuf::Arena* arena,
    const TouchInfo& from)
    : ::google::protobuf::Message(arena) {
  TouchInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, action_index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, action_index_),
           offsetof(Impl_, action_) -
               offsetof(Impl_, action_index_) +
               sizeof(Impl_::action_));

  // @@protoc_insertion_point(copy_constructor:HU.TouchInfo)
}
inline PROTOBUF_NDEBUG_INLINE TouchInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        location_{visibility, arena} {}

inline void TouchInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, action_index_),
           0,
           offsetof(Impl_, action_) -
               offsetof(Impl_, action_index_) +
               sizeof(Impl_::action_));
}
TouchInfo::~TouchInfo() {
  // @@protoc_insertion_point(destructor:HU.TouchInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TouchInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TouchInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.TouchInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.location_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.action_index_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.action_) -
        reinterpret_cast<char*>(&_impl_.action_index_)) + sizeof(_impl_.action_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TouchInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> TouchInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TouchInfo, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TouchInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .HU.TouchInfo.Location location = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TouchInfo, _impl_.location_)}},
    // optional uint32 action_index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TouchInfo, _impl_.action_index_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(TouchInfo, _impl_.action_index_)}},
    // required .HU.TouchInfo.TOUCH_ACTION action = 3;
    {::_pbi::TcParser::FastEr0S1,
     {24, 1, 2, PROTOBUF_FIELD_OFFSET(TouchInfo, _impl_.action_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .HU.TouchInfo.Location location = 1;
    {PROTOBUF_FIELD_OFFSET(TouchInfo, _impl_.location_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 action_index = 2;
    {PROTOBUF_FIELD_OFFSET(TouchInfo, _impl_.action_index_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required .HU.TouchInfo.TOUCH_ACTION action = 3;
    {PROTOBUF_FIELD_OFFSET(TouchInfo, _impl_.action_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {::_pbi::TcParser::GetTable<::HU::TouchInfo_Location>()},
    {0, 3},
  }}, {{
  }},
};

::uint8_t* TouchInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.TouchInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .HU.TouchInfo.Location location = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_location_size()); i < n; i++) {
    const auto& repfield = this->_internal_location().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 action_index = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_action_index(), target);
  }

  // required .HU.TouchInfo.TOUCH_ACTION action = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.TouchInfo)
  return target;
}

::size_t TouchInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.TouchInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HU.TouchInfo.Location location = 1;
  total_size += 1UL * this->_internal_location_size();
  for (const auto& msg : this->_internal_location()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional uint32 action_index = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_action_index());
  }

  // required .HU.TouchInfo.TOUCH_ACTION action = 3;
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TouchInfo::_class_data_ = {
    TouchInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TouchInfo::GetClassData() const {
  return &_class_data_;
}

void TouchInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TouchInfo*>(&to_msg);
  auto& from = static_cast<const TouchInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.TouchInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_location()->MergeFrom(
      from._internal_location());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.action_index_ = from._impl_.action_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.action_ = from._impl_.action_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TouchInfo::CopyFrom(const TouchInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.TouchInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TouchInfo::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_location()))
    return false;
  return true;
}

::_pbi::CachedSize* TouchInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TouchInfo::InternalSwap(TouchInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.location_.InternalSwap(&other->_impl_.location_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TouchInfo, _impl_.action_)
      + sizeof(TouchInfo::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(TouchInfo, _impl_.action_index_)>(
          reinterpret_cast<char*>(&_impl_.action_index_),
          reinterpret_cast<char*>(&other->_impl_.action_index_));
}

::google::protobuf::Metadata TouchInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[3]);
}
// ===================================================================

class RelativeInputEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<RelativeInputEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RelativeInputEvent, _impl_._has_bits_);
  static void set_has_scan_code(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_delta(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

RelativeInputEvent::RelativeInputEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.RelativeInputEvent)
}
RelativeInputEvent::RelativeInputEvent(
    ::google::protobuf::Arena* arena, const RelativeInputEvent& from)
    : RelativeInputEvent(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RelativeInputEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RelativeInputEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, scan_code_),
           0,
           offsetof(Impl_, delta_) -
               offsetof(Impl_, scan_code_) +
               sizeof(Impl_::delta_));
}
RelativeInputEvent::~RelativeInputEvent() {
  // @@protoc_insertion_point(destructor:HU.RelativeInputEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RelativeInputEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RelativeInputEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.RelativeInputEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.scan_code_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.delta_) -
        reinterpret_cast<char*>(&_impl_.scan_code_)) + sizeof(_impl_.delta_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RelativeInputEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> RelativeInputEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RelativeInputEvent, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RelativeInputEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 delta = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RelativeInputEvent, _impl_.delta_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(RelativeInputEvent, _impl_.delta_)}},
    // optional uint32 scan_code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RelativeInputEvent, _impl_.scan_code_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(RelativeInputEvent, _impl_.scan_code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 scan_code = 1;
    {PROTOBUF_FIELD_OFFSET(RelativeInputEvent, _impl_.scan_code_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 delta = 2;
    {PROTOBUF_FIELD_OFFSET(RelativeInputEvent, _impl_.delta_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RelativeInputEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.RelativeInputEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 scan_code = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_scan_code(), target);
  }

  // optional int32 delta = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_delta(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.RelativeInputEvent)
  return target;
}

::size_t RelativeInputEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.RelativeInputEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 scan_code = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_scan_code());
    }

    // optional int32 delta = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_delta());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RelativeInputEvent::_class_data_ = {
    RelativeInputEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RelativeInputEvent::GetClassData() const {
  return &_class_data_;
}

void RelativeInputEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RelativeInputEvent*>(&to_msg);
  auto& from = static_cast<const RelativeInputEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.RelativeInputEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.scan_code_ = from._impl_.scan_code_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.delta_ = from._impl_.delta_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RelativeInputEvent::CopyFrom(const RelativeInputEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.RelativeInputEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RelativeInputEvent::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RelativeInputEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RelativeInputEvent::InternalSwap(RelativeInputEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RelativeInputEvent, _impl_.delta_)
      + sizeof(RelativeInputEvent::_impl_.delta_)
      - PROTOBUF_FIELD_OFFSET(RelativeInputEvent, _impl_.scan_code_)>(
          reinterpret_cast<char*>(&_impl_.scan_code_),
          reinterpret_cast<char*>(&other->_impl_.scan_code_));
}

::google::protobuf::Metadata RelativeInputEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[4]);
}
// ===================================================================

class AbsoluteInputEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<AbsoluteInputEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AbsoluteInputEvent, _impl_._has_bits_);
  static void set_has_scan_code(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

AbsoluteInputEvent::AbsoluteInputEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.AbsoluteInputEvent)
}
AbsoluteInputEvent::AbsoluteInputEvent(
    ::google::protobuf::Arena* arena, const AbsoluteInputEvent& from)
    : AbsoluteInputEvent(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AbsoluteInputEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AbsoluteInputEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, scan_code_),
           0,
           offsetof(Impl_, value_) -
               offsetof(Impl_, scan_code_) +
               sizeof(Impl_::value_));
}
AbsoluteInputEvent::~AbsoluteInputEvent() {
  // @@protoc_insertion_point(destructor:HU.AbsoluteInputEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AbsoluteInputEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AbsoluteInputEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.AbsoluteInputEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.scan_code_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.value_) -
        reinterpret_cast<char*>(&_impl_.scan_code_)) + sizeof(_impl_.value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AbsoluteInputEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> AbsoluteInputEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AbsoluteInputEvent, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AbsoluteInputEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AbsoluteInputEvent, _impl_.value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AbsoluteInputEvent, _impl_.value_)}},
    // optional uint32 scan_code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AbsoluteInputEvent, _impl_.scan_code_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AbsoluteInputEvent, _impl_.scan_code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 scan_code = 1;
    {PROTOBUF_FIELD_OFFSET(AbsoluteInputEvent, _impl_.scan_code_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 value = 2;
    {PROTOBUF_FIELD_OFFSET(AbsoluteInputEvent, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AbsoluteInputEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.AbsoluteInputEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 scan_code = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_scan_code(), target);
  }

  // optional int32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.AbsoluteInputEvent)
  return target;
}

::size_t AbsoluteInputEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.AbsoluteInputEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 scan_code = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_scan_code());
    }

    // optional int32 value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AbsoluteInputEvent::_class_data_ = {
    AbsoluteInputEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AbsoluteInputEvent::GetClassData() const {
  return &_class_data_;
}

void AbsoluteInputEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AbsoluteInputEvent*>(&to_msg);
  auto& from = static_cast<const AbsoluteInputEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.AbsoluteInputEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.scan_code_ = from._impl_.scan_code_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.value_ = from._impl_.value_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AbsoluteInputEvent::CopyFrom(const AbsoluteInputEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.AbsoluteInputEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AbsoluteInputEvent::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AbsoluteInputEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AbsoluteInputEvent::InternalSwap(AbsoluteInputEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AbsoluteInputEvent, _impl_.value_)
      + sizeof(AbsoluteInputEvent::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(AbsoluteInputEvent, _impl_.scan_code_)>(
          reinterpret_cast<char*>(&_impl_.scan_code_),
          reinterpret_cast<char*>(&other->_impl_.scan_code_));
}

::google::protobuf::Metadata AbsoluteInputEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[5]);
}
// ===================================================================

class AbsoluteInputEventWrapper::_Internal {
 public:
  using HasBits = decltype(std::declval<AbsoluteInputEventWrapper>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AbsoluteInputEventWrapper, _impl_._has_bits_);
  static const ::HU::AbsoluteInputEvent& event(const AbsoluteInputEventWrapper* msg);
  static void set_has_event(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HU::AbsoluteInputEvent& AbsoluteInputEventWrapper::_Internal::event(const AbsoluteInputEventWrapper* msg) {
  return *msg->_impl_.event_;
}
AbsoluteInputEventWrapper::AbsoluteInputEventWrapper(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.AbsoluteInputEventWrapper)
}
inline PROTOBUF_NDEBUG_INLINE AbsoluteInputEventWrapper::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AbsoluteInputEventWrapper::AbsoluteInputEventWrapper(
    ::google::protobuf::Arena* arena,
    const AbsoluteInputEventWrapper& from)
    : ::google::protobuf::Message(arena) {
  AbsoluteInputEventWrapper* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.event_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::HU::AbsoluteInputEvent>(arena, *from._impl_.event_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:HU.AbsoluteInputEventWrapper)
}
inline PROTOBUF_NDEBUG_INLINE AbsoluteInputEventWrapper::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AbsoluteInputEventWrapper::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.event_ = {};
}
AbsoluteInputEventWrapper::~AbsoluteInputEventWrapper() {
  // @@protoc_insertion_point(destructor:HU.AbsoluteInputEventWrapper)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AbsoluteInputEventWrapper::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.event_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AbsoluteInputEventWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.AbsoluteInputEventWrapper)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.event_ != nullptr);
    _impl_.event_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AbsoluteInputEventWrapper::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AbsoluteInputEventWrapper::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AbsoluteInputEventWrapper, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AbsoluteInputEventWrapper_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required .HU.AbsoluteInputEvent event = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AbsoluteInputEventWrapper, _impl_.event_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .HU.AbsoluteInputEvent event = 1;
    {PROTOBUF_FIELD_OFFSET(AbsoluteInputEventWrapper, _impl_.event_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::HU::AbsoluteInputEvent>()},
  }}, {{
  }},
};

::uint8_t* AbsoluteInputEventWrapper::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.AbsoluteInputEventWrapper)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HU.AbsoluteInputEvent event = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::event(this),
        _Internal::event(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.AbsoluteInputEventWrapper)
  return target;
}

::size_t AbsoluteInputEventWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.AbsoluteInputEventWrapper)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required .HU.AbsoluteInputEvent event = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.event_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AbsoluteInputEventWrapper::_class_data_ = {
    AbsoluteInputEventWrapper::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AbsoluteInputEventWrapper::GetClassData() const {
  return &_class_data_;
}

void AbsoluteInputEventWrapper::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AbsoluteInputEventWrapper*>(&to_msg);
  auto& from = static_cast<const AbsoluteInputEventWrapper&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.AbsoluteInputEventWrapper)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_event()->::HU::AbsoluteInputEvent::MergeFrom(
        from._internal_event());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AbsoluteInputEventWrapper::CopyFrom(const AbsoluteInputEventWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.AbsoluteInputEventWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AbsoluteInputEventWrapper::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* AbsoluteInputEventWrapper::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AbsoluteInputEventWrapper::InternalSwap(AbsoluteInputEventWrapper* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.event_, other->_impl_.event_);
}

::google::protobuf::Metadata AbsoluteInputEventWrapper::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[6]);
}
// ===================================================================

class RelativeInputEventWrapper::_Internal {
 public:
  using HasBits = decltype(std::declval<RelativeInputEventWrapper>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RelativeInputEventWrapper, _impl_._has_bits_);
  static const ::HU::RelativeInputEvent& event(const RelativeInputEventWrapper* msg);
  static void set_has_event(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HU::RelativeInputEvent& RelativeInputEventWrapper::_Internal::event(const RelativeInputEventWrapper* msg) {
  return *msg->_impl_.event_;
}
RelativeInputEventWrapper::RelativeInputEventWrapper(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.RelativeInputEventWrapper)
}
inline PROTOBUF_NDEBUG_INLINE RelativeInputEventWrapper::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RelativeInputEventWrapper::RelativeInputEventWrapper(
    ::google::protobuf::Arena* arena,
    const RelativeInputEventWrapper& from)
    : ::google::protobuf::Message(arena) {
  RelativeInputEventWrapper* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.event_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::HU::RelativeInputEvent>(arena, *from._impl_.event_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:HU.RelativeInputEventWrapper)
}
inline PROTOBUF_NDEBUG_INLINE RelativeInputEventWrapper::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RelativeInputEventWrapper::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.event_ = {};
}
RelativeInputEventWrapper::~RelativeInputEventWrapper() {
  // @@protoc_insertion_point(destructor:HU.RelativeInputEventWrapper)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RelativeInputEventWrapper::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.event_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RelativeInputEventWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.RelativeInputEventWrapper)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.event_ != nullptr);
    _impl_.event_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RelativeInputEventWrapper::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RelativeInputEventWrapper::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RelativeInputEventWrapper, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RelativeInputEventWrapper_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required .HU.RelativeInputEvent event = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RelativeInputEventWrapper, _impl_.event_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .HU.RelativeInputEvent event = 1;
    {PROTOBUF_FIELD_OFFSET(RelativeInputEventWrapper, _impl_.event_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::HU::RelativeInputEvent>()},
  }}, {{
  }},
};

::uint8_t* RelativeInputEventWrapper::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.RelativeInputEventWrapper)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HU.RelativeInputEvent event = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::event(this),
        _Internal::event(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.RelativeInputEventWrapper)
  return target;
}

::size_t RelativeInputEventWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.RelativeInputEventWrapper)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required .HU.RelativeInputEvent event = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.event_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RelativeInputEventWrapper::_class_data_ = {
    RelativeInputEventWrapper::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RelativeInputEventWrapper::GetClassData() const {
  return &_class_data_;
}

void RelativeInputEventWrapper::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RelativeInputEventWrapper*>(&to_msg);
  auto& from = static_cast<const RelativeInputEventWrapper&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.RelativeInputEventWrapper)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_event()->::HU::RelativeInputEvent::MergeFrom(
        from._internal_event());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RelativeInputEventWrapper::CopyFrom(const RelativeInputEventWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.RelativeInputEventWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RelativeInputEventWrapper::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* RelativeInputEventWrapper::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RelativeInputEventWrapper::InternalSwap(RelativeInputEventWrapper* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.event_, other->_impl_.event_);
}

::google::protobuf::Metadata RelativeInputEventWrapper::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[7]);
}
// ===================================================================

class InputEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<InputEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(InputEvent, _impl_._has_bits_);
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_disp_channel(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::HU::TouchInfo& touch(const InputEvent* msg);
  static void set_has_touch(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HU::ButtonInfoWrapper& button(const InputEvent* msg);
  static void set_has_button(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::HU::AbsoluteInputEventWrapper& abs_event(const InputEvent* msg);
  static void set_has_abs_event(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::HU::RelativeInputEventWrapper& rel_event(const InputEvent* msg);
  static void set_has_rel_event(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000010) ^ 0x00000010) != 0;
  }
};

const ::HU::TouchInfo& InputEvent::_Internal::touch(const InputEvent* msg) {
  return *msg->_impl_.touch_;
}
const ::HU::ButtonInfoWrapper& InputEvent::_Internal::button(const InputEvent* msg) {
  return *msg->_impl_.button_;
}
const ::HU::AbsoluteInputEventWrapper& InputEvent::_Internal::abs_event(const InputEvent* msg) {
  return *msg->_impl_.abs_event_;
}
const ::HU::RelativeInputEventWrapper& InputEvent::_Internal::rel_event(const InputEvent* msg) {
  return *msg->_impl_.rel_event_;
}
InputEvent::InputEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.InputEvent)
}
inline PROTOBUF_NDEBUG_INLINE InputEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

InputEvent::InputEvent(
    ::google::protobuf::Arena* arena,
    const InputEvent& from)
    : ::google::protobuf::Message(arena) {
  InputEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.touch_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::HU::TouchInfo>(arena, *from._impl_.touch_)
                : nullptr;
  _impl_.button_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::HU::ButtonInfoWrapper>(arena, *from._impl_.button_)
                : nullptr;
  _impl_.abs_event_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::HU::AbsoluteInputEventWrapper>(arena, *from._impl_.abs_event_)
                : nullptr;
  _impl_.rel_event_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::HU::RelativeInputEventWrapper>(arena, *from._impl_.rel_event_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, disp_channel_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::disp_channel_));

  // @@protoc_insertion_point(copy_constructor:HU.InputEvent)
}
inline PROTOBUF_NDEBUG_INLINE InputEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void InputEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, touch_),
           0,
           offsetof(Impl_, disp_channel_) -
               offsetof(Impl_, touch_) +
               sizeof(Impl_::disp_channel_));
}
InputEvent::~InputEvent() {
  // @@protoc_insertion_point(destructor:HU.InputEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InputEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.touch_;
  delete _impl_.button_;
  delete _impl_.abs_event_;
  delete _impl_.rel_event_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void InputEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.InputEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.touch_ != nullptr);
      _impl_.touch_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.button_ != nullptr);
      _impl_.button_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.abs_event_ != nullptr);
      _impl_.abs_event_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.rel_event_ != nullptr);
      _impl_.rel_event_->Clear();
    }
  }
  if (cached_has_bits & 0x00000030u) {
    ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.disp_channel_) -
        reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.disp_channel_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InputEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 0, 2> InputEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InputEvent, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InputEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InputEvent, _impl_.timestamp_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(InputEvent, _impl_.timestamp_)}},
    // optional int32 disp_channel = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InputEvent, _impl_.disp_channel_), 5>(),
     {16, 5, 0, PROTOBUF_FIELD_OFFSET(InputEvent, _impl_.disp_channel_)}},
    // optional .HU.TouchInfo touch = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(InputEvent, _impl_.touch_)}},
    // optional .HU.ButtonInfoWrapper button = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(InputEvent, _impl_.button_)}},
    // optional .HU.AbsoluteInputEventWrapper abs_event = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(InputEvent, _impl_.abs_event_)}},
    // optional .HU.RelativeInputEventWrapper rel_event = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 3, PROTOBUF_FIELD_OFFSET(InputEvent, _impl_.rel_event_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(InputEvent, _impl_.timestamp_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 disp_channel = 2;
    {PROTOBUF_FIELD_OFFSET(InputEvent, _impl_.disp_channel_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .HU.TouchInfo touch = 3;
    {PROTOBUF_FIELD_OFFSET(InputEvent, _impl_.touch_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .HU.ButtonInfoWrapper button = 4;
    {PROTOBUF_FIELD_OFFSET(InputEvent, _impl_.button_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .HU.AbsoluteInputEventWrapper abs_event = 5;
    {PROTOBUF_FIELD_OFFSET(InputEvent, _impl_.abs_event_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .HU.RelativeInputEventWrapper rel_event = 6;
    {PROTOBUF_FIELD_OFFSET(InputEvent, _impl_.rel_event_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::HU::TouchInfo>()},
    {::_pbi::TcParser::GetTable<::HU::ButtonInfoWrapper>()},
    {::_pbi::TcParser::GetTable<::HU::AbsoluteInputEventWrapper>()},
    {::_pbi::TcParser::GetTable<::HU::RelativeInputEventWrapper>()},
  }}, {{
  }},
};

::uint8_t* InputEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.InputEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required uint64 timestamp = 1;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_timestamp(), target);
  }

  // optional int32 disp_channel = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_disp_channel(), target);
  }

  // optional .HU.TouchInfo touch = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::touch(this),
        _Internal::touch(this).GetCachedSize(), target, stream);
  }

  // optional .HU.ButtonInfoWrapper button = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::button(this),
        _Internal::button(this).GetCachedSize(), target, stream);
  }

  // optional .HU.AbsoluteInputEventWrapper abs_event = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::abs_event(this),
        _Internal::abs_event(this).GetCachedSize(), target, stream);
  }

  // optional .HU.RelativeInputEventWrapper rel_event = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::rel_event(this),
        _Internal::rel_event(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.InputEvent)
  return target;
}

::size_t InputEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.InputEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .HU.TouchInfo touch = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.touch_);
    }

    // optional .HU.ButtonInfoWrapper button = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.button_);
    }

    // optional .HU.AbsoluteInputEventWrapper abs_event = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.abs_event_);
    }

    // optional .HU.RelativeInputEventWrapper rel_event = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rel_event_);
    }

  }
  // required uint64 timestamp = 1;
  if (cached_has_bits & 0x00000010u) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_timestamp());
  }

  // optional int32 disp_channel = 2;
  if (cached_has_bits & 0x00000020u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_disp_channel());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InputEvent::_class_data_ = {
    InputEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* InputEvent::GetClassData() const {
  return &_class_data_;
}

void InputEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InputEvent*>(&to_msg);
  auto& from = static_cast<const InputEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.InputEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_touch()->::HU::TouchInfo::MergeFrom(
          from._internal_touch());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_button()->::HU::ButtonInfoWrapper::MergeFrom(
          from._internal_button());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_abs_event()->::HU::AbsoluteInputEventWrapper::MergeFrom(
          from._internal_abs_event());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_rel_event()->::HU::RelativeInputEventWrapper::MergeFrom(
          from._internal_rel_event());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.timestamp_ = from._impl_.timestamp_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.disp_channel_ = from._impl_.disp_channel_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InputEvent::CopyFrom(const InputEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.InputEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InputEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.touch_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.button_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!_impl_.abs_event_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!_impl_.rel_event_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* InputEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void InputEvent::InternalSwap(InputEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InputEvent, _impl_.disp_channel_)
      + sizeof(InputEvent::_impl_.disp_channel_)
      - PROTOBUF_FIELD_OFFSET(InputEvent, _impl_.touch_)>(
          reinterpret_cast<char*>(&_impl_.touch_),
          reinterpret_cast<char*>(&other->_impl_.touch_));
}

::google::protobuf::Metadata InputEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[8]);
}
// ===================================================================

class BindingRequest::_Internal {
 public:
};

BindingRequest::BindingRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.BindingRequest)
}
inline PROTOBUF_NDEBUG_INLINE BindingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : scan_codes_{visibility, arena, from.scan_codes_},
        _cached_size_{0} {}

BindingRequest::BindingRequest(
    ::google::protobuf::Arena* arena,
    const BindingRequest& from)
    : ::google::protobuf::Message(arena) {
  BindingRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:HU.BindingRequest)
}
inline PROTOBUF_NDEBUG_INLINE BindingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : scan_codes_{visibility, arena},
        _cached_size_{0} {}

inline void BindingRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BindingRequest::~BindingRequest() {
  // @@protoc_insertion_point(destructor:HU.BindingRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BindingRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BindingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.BindingRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.scan_codes_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BindingRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> BindingRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BindingRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated int32 scan_codes = 1;
    {::_pbi::TcParser::FastV32R1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BindingRequest, _impl_.scan_codes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 scan_codes = 1;
    {PROTOBUF_FIELD_OFFSET(BindingRequest, _impl_.scan_codes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* BindingRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.BindingRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 scan_codes = 1;
  for (int i = 0, n = this->_internal_scan_codes_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        1, this->_internal_scan_codes().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.BindingRequest)
  return target;
}

::size_t BindingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.BindingRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 scan_codes = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_scan_codes())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_scan_codes_size());
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BindingRequest::_class_data_ = {
    BindingRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BindingRequest::GetClassData() const {
  return &_class_data_;
}

void BindingRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BindingRequest*>(&to_msg);
  auto& from = static_cast<const BindingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.BindingRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_scan_codes()->MergeFrom(from._internal_scan_codes());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BindingRequest::CopyFrom(const BindingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.BindingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BindingRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BindingRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BindingRequest::InternalSwap(BindingRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.scan_codes_.InternalSwap(&other->_impl_.scan_codes_);
}

::google::protobuf::Metadata BindingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[9]);
}
// ===================================================================

class BindingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<BindingResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BindingResponse, _impl_._has_bits_);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

BindingResponse::BindingResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.BindingResponse)
}
BindingResponse::BindingResponse(
    ::google::protobuf::Arena* arena, const BindingResponse& from)
    : BindingResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BindingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BindingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
BindingResponse::~BindingResponse() {
  // @@protoc_insertion_point(destructor:HU.BindingResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BindingResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BindingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.BindingResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BindingResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> BindingResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BindingResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BindingResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required .HU.STATUS status = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(BindingResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .HU.STATUS status = 1;
    {PROTOBUF_FIELD_OFFSET(BindingResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {0, 1},
  }}, {{
  }},
};

::uint8_t* BindingResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.BindingResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HU.STATUS status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.BindingResponse)
  return target;
}

::size_t BindingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.BindingResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required .HU.STATUS status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BindingResponse::_class_data_ = {
    BindingResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BindingResponse::GetClassData() const {
  return &_class_data_;
}

void BindingResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BindingResponse*>(&to_msg);
  auto& from = static_cast<const BindingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.BindingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BindingResponse::CopyFrom(const BindingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.BindingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BindingResponse::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* BindingResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BindingResponse::InternalSwap(BindingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata BindingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[10]);
}
// ===================================================================

class SensorEvent_LocationData::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_LocationData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_._has_bits_);
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_latitude(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_longitude(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_accuracy(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_altitude(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_speed(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_bearing(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

SensorEvent_LocationData::SensorEvent_LocationData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.LocationData)
}
SensorEvent_LocationData::SensorEvent_LocationData(
    ::google::protobuf::Arena* arena, const SensorEvent_LocationData& from)
    : SensorEvent_LocationData(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_LocationData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorEvent_LocationData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, bearing_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::bearing_));
}
SensorEvent_LocationData::~SensorEvent_LocationData() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.LocationData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_LocationData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_LocationData::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.LocationData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.bearing_) -
        reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.bearing_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_LocationData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> SensorEvent_LocationData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorEvent_LocationData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SensorEvent_LocationData, _impl_.timestamp_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_.timestamp_)}},
    // optional int32 latitude = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_LocationData, _impl_.latitude_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_.latitude_)}},
    // optional int32 longitude = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_LocationData, _impl_.longitude_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_.longitude_)}},
    // optional uint32 accuracy = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_LocationData, _impl_.accuracy_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_.accuracy_)}},
    // optional int32 altitude = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_LocationData, _impl_.altitude_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_.altitude_)}},
    // optional int32 speed = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_LocationData, _impl_.speed_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_.speed_)}},
    // optional int32 bearing = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_LocationData, _impl_.bearing_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_.bearing_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 latitude = 2;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_.latitude_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 longitude = 3;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_.longitude_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 accuracy = 4;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_.accuracy_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 altitude = 5;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_.altitude_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 speed = 6;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_.speed_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 bearing = 7;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_.bearing_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorEvent_LocationData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.LocationData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 timestamp = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_timestamp(), target);
  }

  // optional int32 latitude = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_latitude(), target);
  }

  // optional int32 longitude = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_longitude(), target);
  }

  // optional uint32 accuracy = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_accuracy(), target);
  }

  // optional int32 altitude = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_altitude(), target);
  }

  // optional int32 speed = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_speed(), target);
  }

  // optional int32 bearing = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_bearing(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.LocationData)
  return target;
}

::size_t SensorEvent_LocationData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.LocationData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional uint64 timestamp = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_timestamp());
    }

    // optional int32 latitude = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_latitude());
    }

    // optional int32 longitude = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_longitude());
    }

    // optional uint32 accuracy = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_accuracy());
    }

    // optional int32 altitude = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_altitude());
    }

    // optional int32 speed = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_speed());
    }

    // optional int32 bearing = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_bearing());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_LocationData::_class_data_ = {
    SensorEvent_LocationData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_LocationData::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_LocationData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_LocationData*>(&to_msg);
  auto& from = static_cast<const SensorEvent_LocationData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.LocationData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.timestamp_ = from._impl_.timestamp_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.latitude_ = from._impl_.latitude_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.longitude_ = from._impl_.longitude_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.accuracy_ = from._impl_.accuracy_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.altitude_ = from._impl_.altitude_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.speed_ = from._impl_.speed_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.bearing_ = from._impl_.bearing_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_LocationData::CopyFrom(const SensorEvent_LocationData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.LocationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_LocationData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SensorEvent_LocationData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_LocationData::InternalSwap(SensorEvent_LocationData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_.bearing_)
      + sizeof(SensorEvent_LocationData::_impl_.bearing_)
      - PROTOBUF_FIELD_OFFSET(SensorEvent_LocationData, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata SensorEvent_LocationData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[11]);
}
// ===================================================================

class SensorEvent_NightMode::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_NightMode>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_NightMode, _impl_._has_bits_);
  static void set_has_is_night(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SensorEvent_NightMode::SensorEvent_NightMode(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.NightMode)
}
SensorEvent_NightMode::SensorEvent_NightMode(
    ::google::protobuf::Arena* arena, const SensorEvent_NightMode& from)
    : SensorEvent_NightMode(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_NightMode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorEvent_NightMode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_night_ = {};
}
SensorEvent_NightMode::~SensorEvent_NightMode() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.NightMode)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_NightMode::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_NightMode::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.NightMode)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.is_night_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_NightMode::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SensorEvent_NightMode::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_NightMode, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorEvent_NightMode_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required bool is_night = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SensorEvent_NightMode, _impl_.is_night_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_NightMode, _impl_.is_night_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required bool is_night = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_NightMode, _impl_.is_night_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorEvent_NightMode::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.NightMode)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required bool is_night = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_is_night(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.NightMode)
  return target;
}

::size_t SensorEvent_NightMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.NightMode)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required bool is_night = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_NightMode::_class_data_ = {
    SensorEvent_NightMode::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_NightMode::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_NightMode::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_NightMode*>(&to_msg);
  auto& from = static_cast<const SensorEvent_NightMode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.NightMode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_is_night(from._internal_is_night());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_NightMode::CopyFrom(const SensorEvent_NightMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.NightMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_NightMode::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* SensorEvent_NightMode::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_NightMode::InternalSwap(SensorEvent_NightMode* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.is_night_, other->_impl_.is_night_);
}

::google::protobuf::Metadata SensorEvent_NightMode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[12]);
}
// ===================================================================

class SensorEvent_RPM::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_RPM>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_RPM, _impl_._has_bits_);
  static void set_has_rpm(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SensorEvent_RPM::SensorEvent_RPM(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.RPM)
}
SensorEvent_RPM::SensorEvent_RPM(
    ::google::protobuf::Arena* arena, const SensorEvent_RPM& from)
    : SensorEvent_RPM(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_RPM::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorEvent_RPM::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rpm_ = {};
}
SensorEvent_RPM::~SensorEvent_RPM() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.RPM)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_RPM::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_RPM::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.RPM)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rpm_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_RPM::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SensorEvent_RPM::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_RPM, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorEvent_RPM_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required int32 rpm = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_RPM, _impl_.rpm_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_RPM, _impl_.rpm_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 rpm = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_RPM, _impl_.rpm_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorEvent_RPM::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.RPM)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 rpm = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_rpm(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.RPM)
  return target;
}

::size_t SensorEvent_RPM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.RPM)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required int32 rpm = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_rpm());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_RPM::_class_data_ = {
    SensorEvent_RPM::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_RPM::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_RPM::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_RPM*>(&to_msg);
  auto& from = static_cast<const SensorEvent_RPM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.RPM)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_rpm(from._internal_rpm());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_RPM::CopyFrom(const SensorEvent_RPM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.RPM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_RPM::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* SensorEvent_RPM::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_RPM::InternalSwap(SensorEvent_RPM* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.rpm_, other->_impl_.rpm_);
}

::google::protobuf::Metadata SensorEvent_RPM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[13]);
}
// ===================================================================

class SensorEvent_FuelLevel::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_FuelLevel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_FuelLevel, _impl_._has_bits_);
  static void set_has_fuel_level(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_range(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_low_fuel(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SensorEvent_FuelLevel::SensorEvent_FuelLevel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.FuelLevel)
}
SensorEvent_FuelLevel::SensorEvent_FuelLevel(
    ::google::protobuf::Arena* arena, const SensorEvent_FuelLevel& from)
    : SensorEvent_FuelLevel(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_FuelLevel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorEvent_FuelLevel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fuel_level_),
           0,
           offsetof(Impl_, low_fuel_) -
               offsetof(Impl_, fuel_level_) +
               sizeof(Impl_::low_fuel_));
}
SensorEvent_FuelLevel::~SensorEvent_FuelLevel() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.FuelLevel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_FuelLevel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_FuelLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.FuelLevel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.fuel_level_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.low_fuel_) -
        reinterpret_cast<char*>(&_impl_.fuel_level_)) + sizeof(_impl_.low_fuel_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_FuelLevel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SensorEvent_FuelLevel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_FuelLevel, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorEvent_FuelLevel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required int32 fuel_level = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_FuelLevel, _impl_.fuel_level_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_FuelLevel, _impl_.fuel_level_)}},
    // optional int32 range = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_FuelLevel, _impl_.range_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_FuelLevel, _impl_.range_)}},
    // optional bool low_fuel = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SensorEvent_FuelLevel, _impl_.low_fuel_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_FuelLevel, _impl_.low_fuel_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 fuel_level = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_FuelLevel, _impl_.fuel_level_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 range = 2;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_FuelLevel, _impl_.range_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool low_fuel = 3;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_FuelLevel, _impl_.low_fuel_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorEvent_FuelLevel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.FuelLevel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 fuel_level = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_fuel_level(), target);
  }

  // optional int32 range = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_range(), target);
  }

  // optional bool low_fuel = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_low_fuel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.FuelLevel)
  return target;
}

::size_t SensorEvent_FuelLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.FuelLevel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required int32 fuel_level = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_fuel_level());
  }

  if (cached_has_bits & 0x00000006u) {
    // optional int32 range = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_range());
    }

    // optional bool low_fuel = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_FuelLevel::_class_data_ = {
    SensorEvent_FuelLevel::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_FuelLevel::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_FuelLevel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_FuelLevel*>(&to_msg);
  auto& from = static_cast<const SensorEvent_FuelLevel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.FuelLevel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.fuel_level_ = from._impl_.fuel_level_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.range_ = from._impl_.range_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.low_fuel_ = from._impl_.low_fuel_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_FuelLevel::CopyFrom(const SensorEvent_FuelLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.FuelLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_FuelLevel::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* SensorEvent_FuelLevel::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_FuelLevel::InternalSwap(SensorEvent_FuelLevel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorEvent_FuelLevel, _impl_.low_fuel_)
      + sizeof(SensorEvent_FuelLevel::_impl_.low_fuel_)
      - PROTOBUF_FIELD_OFFSET(SensorEvent_FuelLevel, _impl_.fuel_level_)>(
          reinterpret_cast<char*>(&_impl_.fuel_level_),
          reinterpret_cast<char*>(&other->_impl_.fuel_level_));
}

::google::protobuf::Metadata SensorEvent_FuelLevel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[14]);
}
// ===================================================================

class SensorEvent_DrivingStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_DrivingStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_DrivingStatus, _impl_._has_bits_);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SensorEvent_DrivingStatus::SensorEvent_DrivingStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.DrivingStatus)
}
SensorEvent_DrivingStatus::SensorEvent_DrivingStatus(
    ::google::protobuf::Arena* arena, const SensorEvent_DrivingStatus& from)
    : SensorEvent_DrivingStatus(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_DrivingStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorEvent_DrivingStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
SensorEvent_DrivingStatus::~SensorEvent_DrivingStatus() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.DrivingStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_DrivingStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_DrivingStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.DrivingStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_DrivingStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SensorEvent_DrivingStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_DrivingStatus, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorEvent_DrivingStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required int32 status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_DrivingStatus, _impl_.status_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_DrivingStatus, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 status = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_DrivingStatus, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorEvent_DrivingStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.DrivingStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.DrivingStatus)
  return target;
}

::size_t SensorEvent_DrivingStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.DrivingStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required int32 status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_DrivingStatus::_class_data_ = {
    SensorEvent_DrivingStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_DrivingStatus::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_DrivingStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_DrivingStatus*>(&to_msg);
  auto& from = static_cast<const SensorEvent_DrivingStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.DrivingStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_DrivingStatus::CopyFrom(const SensorEvent_DrivingStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.DrivingStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_DrivingStatus::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* SensorEvent_DrivingStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_DrivingStatus::InternalSwap(SensorEvent_DrivingStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata SensorEvent_DrivingStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[15]);
}
// ===================================================================

class SensorEvent_DeadReckoning::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_DeadReckoning>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_DeadReckoning, _impl_._has_bits_);
  static void set_has_steering_angel(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_wheel_speed(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

SensorEvent_DeadReckoning::SensorEvent_DeadReckoning(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.DeadReckoning)
}
SensorEvent_DeadReckoning::SensorEvent_DeadReckoning(
    ::google::protobuf::Arena* arena, const SensorEvent_DeadReckoning& from)
    : SensorEvent_DeadReckoning(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_DeadReckoning::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorEvent_DeadReckoning::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, steering_angel_),
           0,
           offsetof(Impl_, wheel_speed_) -
               offsetof(Impl_, steering_angel_) +
               sizeof(Impl_::wheel_speed_));
}
SensorEvent_DeadReckoning::~SensorEvent_DeadReckoning() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.DeadReckoning)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_DeadReckoning::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_DeadReckoning::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.DeadReckoning)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.steering_angel_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.wheel_speed_) -
        reinterpret_cast<char*>(&_impl_.steering_angel_)) + sizeof(_impl_.wheel_speed_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_DeadReckoning::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SensorEvent_DeadReckoning::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_DeadReckoning, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorEvent_DeadReckoning_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 wheel_speed = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_DeadReckoning, _impl_.wheel_speed_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_DeadReckoning, _impl_.wheel_speed_)}},
    // optional int32 steering_angel = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_DeadReckoning, _impl_.steering_angel_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_DeadReckoning, _impl_.steering_angel_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 steering_angel = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_DeadReckoning, _impl_.steering_angel_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 wheel_speed = 2;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_DeadReckoning, _impl_.wheel_speed_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorEvent_DeadReckoning::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.DeadReckoning)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 steering_angel = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_steering_angel(), target);
  }

  // optional int32 wheel_speed = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_wheel_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.DeadReckoning)
  return target;
}

::size_t SensorEvent_DeadReckoning::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.DeadReckoning)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 steering_angel = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_steering_angel());
    }

    // optional int32 wheel_speed = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_wheel_speed());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_DeadReckoning::_class_data_ = {
    SensorEvent_DeadReckoning::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_DeadReckoning::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_DeadReckoning::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_DeadReckoning*>(&to_msg);
  auto& from = static_cast<const SensorEvent_DeadReckoning&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.DeadReckoning)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.steering_angel_ = from._impl_.steering_angel_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.wheel_speed_ = from._impl_.wheel_speed_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_DeadReckoning::CopyFrom(const SensorEvent_DeadReckoning& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.DeadReckoning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_DeadReckoning::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SensorEvent_DeadReckoning::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_DeadReckoning::InternalSwap(SensorEvent_DeadReckoning* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorEvent_DeadReckoning, _impl_.wheel_speed_)
      + sizeof(SensorEvent_DeadReckoning::_impl_.wheel_speed_)
      - PROTOBUF_FIELD_OFFSET(SensorEvent_DeadReckoning, _impl_.steering_angel_)>(
          reinterpret_cast<char*>(&_impl_.steering_angel_),
          reinterpret_cast<char*>(&other->_impl_.steering_angel_));
}

::google::protobuf::Metadata SensorEvent_DeadReckoning::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[16]);
}
// ===================================================================

class SensorEvent_CompassData::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_CompassData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_CompassData, _impl_._has_bits_);
  static void set_has_bearing_e6(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pitch_e6(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_roll_e6(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

SensorEvent_CompassData::SensorEvent_CompassData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.CompassData)
}
SensorEvent_CompassData::SensorEvent_CompassData(
    ::google::protobuf::Arena* arena, const SensorEvent_CompassData& from)
    : SensorEvent_CompassData(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_CompassData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorEvent_CompassData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bearing_e6_),
           0,
           offsetof(Impl_, roll_e6_) -
               offsetof(Impl_, bearing_e6_) +
               sizeof(Impl_::roll_e6_));
}
SensorEvent_CompassData::~SensorEvent_CompassData() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.CompassData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_CompassData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_CompassData::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.CompassData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.bearing_e6_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.roll_e6_) -
        reinterpret_cast<char*>(&_impl_.bearing_e6_)) + sizeof(_impl_.roll_e6_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_CompassData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SensorEvent_CompassData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_CompassData, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorEvent_CompassData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 bearing_e6 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_CompassData, _impl_.bearing_e6_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_CompassData, _impl_.bearing_e6_)}},
    // optional int32 pitch_e6 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_CompassData, _impl_.pitch_e6_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_CompassData, _impl_.pitch_e6_)}},
    // optional int32 roll_e6 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_CompassData, _impl_.roll_e6_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_CompassData, _impl_.roll_e6_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 bearing_e6 = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_CompassData, _impl_.bearing_e6_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 pitch_e6 = 2;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_CompassData, _impl_.pitch_e6_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 roll_e6 = 3;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_CompassData, _impl_.roll_e6_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorEvent_CompassData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.CompassData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 bearing_e6 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_bearing_e6(), target);
  }

  // optional int32 pitch_e6 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_pitch_e6(), target);
  }

  // optional int32 roll_e6 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_roll_e6(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.CompassData)
  return target;
}

::size_t SensorEvent_CompassData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.CompassData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int32 bearing_e6 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_bearing_e6());
    }

    // optional int32 pitch_e6 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_pitch_e6());
    }

    // optional int32 roll_e6 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_roll_e6());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_CompassData::_class_data_ = {
    SensorEvent_CompassData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_CompassData::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_CompassData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_CompassData*>(&to_msg);
  auto& from = static_cast<const SensorEvent_CompassData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.CompassData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.bearing_e6_ = from._impl_.bearing_e6_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.pitch_e6_ = from._impl_.pitch_e6_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.roll_e6_ = from._impl_.roll_e6_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_CompassData::CopyFrom(const SensorEvent_CompassData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.CompassData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_CompassData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SensorEvent_CompassData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_CompassData::InternalSwap(SensorEvent_CompassData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorEvent_CompassData, _impl_.roll_e6_)
      + sizeof(SensorEvent_CompassData::_impl_.roll_e6_)
      - PROTOBUF_FIELD_OFFSET(SensorEvent_CompassData, _impl_.bearing_e6_)>(
          reinterpret_cast<char*>(&_impl_.bearing_e6_),
          reinterpret_cast<char*>(&other->_impl_.bearing_e6_));
}

::google::protobuf::Metadata SensorEvent_CompassData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[17]);
}
// ===================================================================

class SensorEvent_SpeedData::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_SpeedData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_SpeedData, _impl_._has_bits_);
  static void set_has_speed_e6(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_cruise_engaged(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_cruise_set_speed(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

SensorEvent_SpeedData::SensorEvent_SpeedData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.SpeedData)
}
SensorEvent_SpeedData::SensorEvent_SpeedData(
    ::google::protobuf::Arena* arena, const SensorEvent_SpeedData& from)
    : SensorEvent_SpeedData(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_SpeedData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorEvent_SpeedData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, speed_e6_),
           0,
           offsetof(Impl_, cruise_set_speed_) -
               offsetof(Impl_, speed_e6_) +
               sizeof(Impl_::cruise_set_speed_));
}
SensorEvent_SpeedData::~SensorEvent_SpeedData() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.SpeedData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_SpeedData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_SpeedData::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.SpeedData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.speed_e6_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.cruise_set_speed_) -
        reinterpret_cast<char*>(&_impl_.speed_e6_)) + sizeof(_impl_.cruise_set_speed_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_SpeedData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SensorEvent_SpeedData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_SpeedData, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorEvent_SpeedData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 speed_e6 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_SpeedData, _impl_.speed_e6_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_SpeedData, _impl_.speed_e6_)}},
    // optional bool cruise_engaged = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SensorEvent_SpeedData, _impl_.cruise_engaged_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_SpeedData, _impl_.cruise_engaged_)}},
    // optional bool cruise_set_speed = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SensorEvent_SpeedData, _impl_.cruise_set_speed_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_SpeedData, _impl_.cruise_set_speed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 speed_e6 = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_SpeedData, _impl_.speed_e6_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool cruise_engaged = 2;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_SpeedData, _impl_.cruise_engaged_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool cruise_set_speed = 3;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_SpeedData, _impl_.cruise_set_speed_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorEvent_SpeedData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.SpeedData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 speed_e6 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_speed_e6(), target);
  }

  // optional bool cruise_engaged = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_cruise_engaged(), target);
  }

  // optional bool cruise_set_speed = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_cruise_set_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.SpeedData)
  return target;
}

::size_t SensorEvent_SpeedData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.SpeedData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int32 speed_e6 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_speed_e6());
    }

    // optional bool cruise_engaged = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

    // optional bool cruise_set_speed = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_SpeedData::_class_data_ = {
    SensorEvent_SpeedData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_SpeedData::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_SpeedData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_SpeedData*>(&to_msg);
  auto& from = static_cast<const SensorEvent_SpeedData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.SpeedData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.speed_e6_ = from._impl_.speed_e6_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.cruise_engaged_ = from._impl_.cruise_engaged_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.cruise_set_speed_ = from._impl_.cruise_set_speed_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_SpeedData::CopyFrom(const SensorEvent_SpeedData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.SpeedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_SpeedData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SensorEvent_SpeedData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_SpeedData::InternalSwap(SensorEvent_SpeedData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorEvent_SpeedData, _impl_.cruise_set_speed_)
      + sizeof(SensorEvent_SpeedData::_impl_.cruise_set_speed_)
      - PROTOBUF_FIELD_OFFSET(SensorEvent_SpeedData, _impl_.speed_e6_)>(
          reinterpret_cast<char*>(&_impl_.speed_e6_),
          reinterpret_cast<char*>(&other->_impl_.speed_e6_));
}

::google::protobuf::Metadata SensorEvent_SpeedData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[18]);
}
// ===================================================================

class SensorEvent_OdometerData::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_OdometerData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_OdometerData, _impl_._has_bits_);
  static void set_has_kms_el(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_trip_kms_el(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

SensorEvent_OdometerData::SensorEvent_OdometerData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.OdometerData)
}
SensorEvent_OdometerData::SensorEvent_OdometerData(
    ::google::protobuf::Arena* arena, const SensorEvent_OdometerData& from)
    : SensorEvent_OdometerData(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_OdometerData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorEvent_OdometerData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, kms_el_),
           0,
           offsetof(Impl_, trip_kms_el_) -
               offsetof(Impl_, kms_el_) +
               sizeof(Impl_::trip_kms_el_));
}
SensorEvent_OdometerData::~SensorEvent_OdometerData() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.OdometerData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_OdometerData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_OdometerData::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.OdometerData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.kms_el_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.trip_kms_el_) -
        reinterpret_cast<char*>(&_impl_.kms_el_)) + sizeof(_impl_.trip_kms_el_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_OdometerData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SensorEvent_OdometerData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_OdometerData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorEvent_OdometerData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 trip_kms_el = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_OdometerData, _impl_.trip_kms_el_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_OdometerData, _impl_.trip_kms_el_)}},
    // optional int32 kms_el = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_OdometerData, _impl_.kms_el_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_OdometerData, _impl_.kms_el_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 kms_el = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_OdometerData, _impl_.kms_el_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 trip_kms_el = 2;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_OdometerData, _impl_.trip_kms_el_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorEvent_OdometerData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.OdometerData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 kms_el = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_kms_el(), target);
  }

  // optional int32 trip_kms_el = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_trip_kms_el(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.OdometerData)
  return target;
}

::size_t SensorEvent_OdometerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.OdometerData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 kms_el = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_kms_el());
    }

    // optional int32 trip_kms_el = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_trip_kms_el());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_OdometerData::_class_data_ = {
    SensorEvent_OdometerData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_OdometerData::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_OdometerData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_OdometerData*>(&to_msg);
  auto& from = static_cast<const SensorEvent_OdometerData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.OdometerData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.kms_el_ = from._impl_.kms_el_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.trip_kms_el_ = from._impl_.trip_kms_el_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_OdometerData::CopyFrom(const SensorEvent_OdometerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.OdometerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_OdometerData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SensorEvent_OdometerData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_OdometerData::InternalSwap(SensorEvent_OdometerData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorEvent_OdometerData, _impl_.trip_kms_el_)
      + sizeof(SensorEvent_OdometerData::_impl_.trip_kms_el_)
      - PROTOBUF_FIELD_OFFSET(SensorEvent_OdometerData, _impl_.kms_el_)>(
          reinterpret_cast<char*>(&_impl_.kms_el_),
          reinterpret_cast<char*>(&other->_impl_.kms_el_));
}

::google::protobuf::Metadata SensorEvent_OdometerData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[19]);
}
// ===================================================================

class SensorEvent_ParkingBreak::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_ParkingBreak>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_ParkingBreak, _impl_._has_bits_);
  static void set_has_parking_breake(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SensorEvent_ParkingBreak::SensorEvent_ParkingBreak(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.ParkingBreak)
}
SensorEvent_ParkingBreak::SensorEvent_ParkingBreak(
    ::google::protobuf::Arena* arena, const SensorEvent_ParkingBreak& from)
    : SensorEvent_ParkingBreak(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_ParkingBreak::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorEvent_ParkingBreak::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.parking_breake_ = {};
}
SensorEvent_ParkingBreak::~SensorEvent_ParkingBreak() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.ParkingBreak)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_ParkingBreak::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_ParkingBreak::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.ParkingBreak)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parking_breake_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_ParkingBreak::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SensorEvent_ParkingBreak::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_ParkingBreak, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorEvent_ParkingBreak_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool parking_breake = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SensorEvent_ParkingBreak, _impl_.parking_breake_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_ParkingBreak, _impl_.parking_breake_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool parking_breake = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_ParkingBreak, _impl_.parking_breake_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorEvent_ParkingBreak::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.ParkingBreak)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool parking_breake = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_parking_breake(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.ParkingBreak)
  return target;
}

::size_t SensorEvent_ParkingBreak::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.ParkingBreak)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool parking_breake = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_ParkingBreak::_class_data_ = {
    SensorEvent_ParkingBreak::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_ParkingBreak::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_ParkingBreak::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_ParkingBreak*>(&to_msg);
  auto& from = static_cast<const SensorEvent_ParkingBreak&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.ParkingBreak)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_parking_breake(from._internal_parking_breake());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_ParkingBreak::CopyFrom(const SensorEvent_ParkingBreak& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.ParkingBreak)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_ParkingBreak::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SensorEvent_ParkingBreak::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_ParkingBreak::InternalSwap(SensorEvent_ParkingBreak* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.parking_breake_, other->_impl_.parking_breake_);
}

::google::protobuf::Metadata SensorEvent_ParkingBreak::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[20]);
}
// ===================================================================

class SensorEvent_Passenger::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_Passenger>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_Passenger, _impl_._has_bits_);
  static void set_has_passenger_present(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SensorEvent_Passenger::SensorEvent_Passenger(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.Passenger)
}
SensorEvent_Passenger::SensorEvent_Passenger(
    ::google::protobuf::Arena* arena, const SensorEvent_Passenger& from)
    : SensorEvent_Passenger(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_Passenger::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorEvent_Passenger::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.passenger_present_ = {};
}
SensorEvent_Passenger::~SensorEvent_Passenger() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.Passenger)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_Passenger::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_Passenger::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.Passenger)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.passenger_present_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_Passenger::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SensorEvent_Passenger::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_Passenger, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorEvent_Passenger_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool passenger_present = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SensorEvent_Passenger, _impl_.passenger_present_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_Passenger, _impl_.passenger_present_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool passenger_present = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_Passenger, _impl_.passenger_present_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorEvent_Passenger::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.Passenger)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool passenger_present = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_passenger_present(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.Passenger)
  return target;
}

::size_t SensorEvent_Passenger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.Passenger)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool passenger_present = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_Passenger::_class_data_ = {
    SensorEvent_Passenger::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_Passenger::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_Passenger::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_Passenger*>(&to_msg);
  auto& from = static_cast<const SensorEvent_Passenger&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.Passenger)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_passenger_present(from._internal_passenger_present());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_Passenger::CopyFrom(const SensorEvent_Passenger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.Passenger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_Passenger::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SensorEvent_Passenger::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_Passenger::InternalSwap(SensorEvent_Passenger* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.passenger_present_, other->_impl_.passenger_present_);
}

::google::protobuf::Metadata SensorEvent_Passenger::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[21]);
}
// ===================================================================

class SensorEvent_Diagnostics::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_Diagnostics>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_Diagnostics, _impl_._has_bits_);
  static void set_has_diagnostics_byte(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SensorEvent_Diagnostics::SensorEvent_Diagnostics(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.Diagnostics)
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_Diagnostics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        diagnostics_byte_(arena, from.diagnostics_byte_) {}

SensorEvent_Diagnostics::SensorEvent_Diagnostics(
    ::google::protobuf::Arena* arena,
    const SensorEvent_Diagnostics& from)
    : ::google::protobuf::Message(arena) {
  SensorEvent_Diagnostics* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:HU.SensorEvent.Diagnostics)
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_Diagnostics::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        diagnostics_byte_(arena) {}

inline void SensorEvent_Diagnostics::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SensorEvent_Diagnostics::~SensorEvent_Diagnostics() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.Diagnostics)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_Diagnostics::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.diagnostics_byte_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_Diagnostics::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.Diagnostics)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.diagnostics_byte_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_Diagnostics::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SensorEvent_Diagnostics::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_Diagnostics, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorEvent_Diagnostics_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bytes diagnostics_byte = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_Diagnostics, _impl_.diagnostics_byte_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes diagnostics_byte = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_Diagnostics, _impl_.diagnostics_byte_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorEvent_Diagnostics::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.Diagnostics)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes diagnostics_byte = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_diagnostics_byte();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.Diagnostics)
  return target;
}

::size_t SensorEvent_Diagnostics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.Diagnostics)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes diagnostics_byte = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_diagnostics_byte());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_Diagnostics::_class_data_ = {
    SensorEvent_Diagnostics::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_Diagnostics::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_Diagnostics::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_Diagnostics*>(&to_msg);
  auto& from = static_cast<const SensorEvent_Diagnostics&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.Diagnostics)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_diagnostics_byte(from._internal_diagnostics_byte());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_Diagnostics::CopyFrom(const SensorEvent_Diagnostics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.Diagnostics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_Diagnostics::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SensorEvent_Diagnostics::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_Diagnostics::InternalSwap(SensorEvent_Diagnostics* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.diagnostics_byte_, &other->_impl_.diagnostics_byte_, arena);
}

::google::protobuf::Metadata SensorEvent_Diagnostics::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[22]);
}
// ===================================================================

class SensorEvent_Environment::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_Environment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_Environment, _impl_._has_bits_);
  static void set_has_temperature_e3(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pressure_e3(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_rain(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

SensorEvent_Environment::SensorEvent_Environment(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.Environment)
}
SensorEvent_Environment::SensorEvent_Environment(
    ::google::protobuf::Arena* arena, const SensorEvent_Environment& from)
    : SensorEvent_Environment(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_Environment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorEvent_Environment::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, temperature_e3_),
           0,
           offsetof(Impl_, rain_) -
               offsetof(Impl_, temperature_e3_) +
               sizeof(Impl_::rain_));
}
SensorEvent_Environment::~SensorEvent_Environment() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.Environment)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_Environment::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_Environment::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.Environment)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.temperature_e3_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rain_) -
        reinterpret_cast<char*>(&_impl_.temperature_e3_)) + sizeof(_impl_.rain_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_Environment::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SensorEvent_Environment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_Environment, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorEvent_Environment_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 temperature_e3 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_Environment, _impl_.temperature_e3_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_Environment, _impl_.temperature_e3_)}},
    // optional int32 pressure_e3 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_Environment, _impl_.pressure_e3_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_Environment, _impl_.pressure_e3_)}},
    // optional int32 rain = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_Environment, _impl_.rain_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_Environment, _impl_.rain_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 temperature_e3 = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_Environment, _impl_.temperature_e3_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 pressure_e3 = 2;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_Environment, _impl_.pressure_e3_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 rain = 3;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_Environment, _impl_.rain_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorEvent_Environment::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.Environment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 temperature_e3 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_temperature_e3(), target);
  }

  // optional int32 pressure_e3 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_pressure_e3(), target);
  }

  // optional int32 rain = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_rain(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.Environment)
  return target;
}

::size_t SensorEvent_Environment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.Environment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int32 temperature_e3 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_temperature_e3());
    }

    // optional int32 pressure_e3 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_pressure_e3());
    }

    // optional int32 rain = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_rain());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_Environment::_class_data_ = {
    SensorEvent_Environment::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_Environment::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_Environment::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_Environment*>(&to_msg);
  auto& from = static_cast<const SensorEvent_Environment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.Environment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.temperature_e3_ = from._impl_.temperature_e3_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.pressure_e3_ = from._impl_.pressure_e3_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.rain_ = from._impl_.rain_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_Environment::CopyFrom(const SensorEvent_Environment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.Environment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_Environment::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SensorEvent_Environment::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_Environment::InternalSwap(SensorEvent_Environment* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorEvent_Environment, _impl_.rain_)
      + sizeof(SensorEvent_Environment::_impl_.rain_)
      - PROTOBUF_FIELD_OFFSET(SensorEvent_Environment, _impl_.temperature_e3_)>(
          reinterpret_cast<char*>(&_impl_.temperature_e3_),
          reinterpret_cast<char*>(&other->_impl_.temperature_e3_));
}

::google::protobuf::Metadata SensorEvent_Environment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[23]);
}
// ===================================================================

class SensorEvent_HVAC::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_HVAC>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_HVAC, _impl_._has_bits_);
  static void set_has_target_temperature_e3(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_current_temperature_e3(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

SensorEvent_HVAC::SensorEvent_HVAC(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.HVAC)
}
SensorEvent_HVAC::SensorEvent_HVAC(
    ::google::protobuf::Arena* arena, const SensorEvent_HVAC& from)
    : SensorEvent_HVAC(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_HVAC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorEvent_HVAC::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, target_temperature_e3_),
           0,
           offsetof(Impl_, current_temperature_e3_) -
               offsetof(Impl_, target_temperature_e3_) +
               sizeof(Impl_::current_temperature_e3_));
}
SensorEvent_HVAC::~SensorEvent_HVAC() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.HVAC)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_HVAC::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_HVAC::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.HVAC)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.target_temperature_e3_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.current_temperature_e3_) -
        reinterpret_cast<char*>(&_impl_.target_temperature_e3_)) + sizeof(_impl_.current_temperature_e3_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_HVAC::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SensorEvent_HVAC::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_HVAC, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorEvent_HVAC_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 current_temperature_e3 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_HVAC, _impl_.current_temperature_e3_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_HVAC, _impl_.current_temperature_e3_)}},
    // optional int32 target_temperature_e3 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_HVAC, _impl_.target_temperature_e3_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_HVAC, _impl_.target_temperature_e3_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 target_temperature_e3 = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_HVAC, _impl_.target_temperature_e3_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 current_temperature_e3 = 2;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_HVAC, _impl_.current_temperature_e3_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorEvent_HVAC::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.HVAC)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 target_temperature_e3 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_target_temperature_e3(), target);
  }

  // optional int32 current_temperature_e3 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_current_temperature_e3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.HVAC)
  return target;
}

::size_t SensorEvent_HVAC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.HVAC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 target_temperature_e3 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_target_temperature_e3());
    }

    // optional int32 current_temperature_e3 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_current_temperature_e3());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_HVAC::_class_data_ = {
    SensorEvent_HVAC::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_HVAC::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_HVAC::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_HVAC*>(&to_msg);
  auto& from = static_cast<const SensorEvent_HVAC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.HVAC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.target_temperature_e3_ = from._impl_.target_temperature_e3_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.current_temperature_e3_ = from._impl_.current_temperature_e3_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_HVAC::CopyFrom(const SensorEvent_HVAC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.HVAC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_HVAC::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SensorEvent_HVAC::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_HVAC::InternalSwap(SensorEvent_HVAC* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorEvent_HVAC, _impl_.current_temperature_e3_)
      + sizeof(SensorEvent_HVAC::_impl_.current_temperature_e3_)
      - PROTOBUF_FIELD_OFFSET(SensorEvent_HVAC, _impl_.target_temperature_e3_)>(
          reinterpret_cast<char*>(&_impl_.target_temperature_e3_),
          reinterpret_cast<char*>(&other->_impl_.target_temperature_e3_));
}

::google::protobuf::Metadata SensorEvent_HVAC::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[24]);
}
// ===================================================================

class SensorEvent_Accel::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_Accel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_Accel, _impl_._has_bits_);
  static void set_has_acceleration_x_e3(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_acceleration_y_e3(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_acceleration_z_e3(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

SensorEvent_Accel::SensorEvent_Accel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.Accel)
}
SensorEvent_Accel::SensorEvent_Accel(
    ::google::protobuf::Arena* arena, const SensorEvent_Accel& from)
    : SensorEvent_Accel(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_Accel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorEvent_Accel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, acceleration_x_e3_),
           0,
           offsetof(Impl_, acceleration_z_e3_) -
               offsetof(Impl_, acceleration_x_e3_) +
               sizeof(Impl_::acceleration_z_e3_));
}
SensorEvent_Accel::~SensorEvent_Accel() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.Accel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_Accel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_Accel::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.Accel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.acceleration_x_e3_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.acceleration_z_e3_) -
        reinterpret_cast<char*>(&_impl_.acceleration_x_e3_)) + sizeof(_impl_.acceleration_z_e3_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_Accel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SensorEvent_Accel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_Accel, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorEvent_Accel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 acceleration_x_e3 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_Accel, _impl_.acceleration_x_e3_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_Accel, _impl_.acceleration_x_e3_)}},
    // optional int32 acceleration_y_e3 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_Accel, _impl_.acceleration_y_e3_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_Accel, _impl_.acceleration_y_e3_)}},
    // optional int32 acceleration_z_e3 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_Accel, _impl_.acceleration_z_e3_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_Accel, _impl_.acceleration_z_e3_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 acceleration_x_e3 = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_Accel, _impl_.acceleration_x_e3_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 acceleration_y_e3 = 2;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_Accel, _impl_.acceleration_y_e3_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 acceleration_z_e3 = 3;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_Accel, _impl_.acceleration_z_e3_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorEvent_Accel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.Accel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 acceleration_x_e3 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_acceleration_x_e3(), target);
  }

  // optional int32 acceleration_y_e3 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_acceleration_y_e3(), target);
  }

  // optional int32 acceleration_z_e3 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_acceleration_z_e3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.Accel)
  return target;
}

::size_t SensorEvent_Accel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.Accel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int32 acceleration_x_e3 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_acceleration_x_e3());
    }

    // optional int32 acceleration_y_e3 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_acceleration_y_e3());
    }

    // optional int32 acceleration_z_e3 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_acceleration_z_e3());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_Accel::_class_data_ = {
    SensorEvent_Accel::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_Accel::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_Accel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_Accel*>(&to_msg);
  auto& from = static_cast<const SensorEvent_Accel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.Accel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.acceleration_x_e3_ = from._impl_.acceleration_x_e3_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.acceleration_y_e3_ = from._impl_.acceleration_y_e3_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.acceleration_z_e3_ = from._impl_.acceleration_z_e3_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_Accel::CopyFrom(const SensorEvent_Accel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.Accel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_Accel::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SensorEvent_Accel::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_Accel::InternalSwap(SensorEvent_Accel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorEvent_Accel, _impl_.acceleration_z_e3_)
      + sizeof(SensorEvent_Accel::_impl_.acceleration_z_e3_)
      - PROTOBUF_FIELD_OFFSET(SensorEvent_Accel, _impl_.acceleration_x_e3_)>(
          reinterpret_cast<char*>(&_impl_.acceleration_x_e3_),
          reinterpret_cast<char*>(&other->_impl_.acceleration_x_e3_));
}

::google::protobuf::Metadata SensorEvent_Accel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[25]);
}
// ===================================================================

class SensorEvent_Gyro::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_Gyro>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_Gyro, _impl_._has_bits_);
  static void set_has_rotation_speed_x_e3(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_rotation_speed_y_e3(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_rotation_speed_z_e3(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

SensorEvent_Gyro::SensorEvent_Gyro(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.Gyro)
}
SensorEvent_Gyro::SensorEvent_Gyro(
    ::google::protobuf::Arena* arena, const SensorEvent_Gyro& from)
    : SensorEvent_Gyro(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_Gyro::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorEvent_Gyro::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, rotation_speed_x_e3_),
           0,
           offsetof(Impl_, rotation_speed_z_e3_) -
               offsetof(Impl_, rotation_speed_x_e3_) +
               sizeof(Impl_::rotation_speed_z_e3_));
}
SensorEvent_Gyro::~SensorEvent_Gyro() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.Gyro)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_Gyro::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_Gyro::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.Gyro)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.rotation_speed_x_e3_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rotation_speed_z_e3_) -
        reinterpret_cast<char*>(&_impl_.rotation_speed_x_e3_)) + sizeof(_impl_.rotation_speed_z_e3_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_Gyro::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SensorEvent_Gyro::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_Gyro, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorEvent_Gyro_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 rotation_speed_x_e3 = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_Gyro, _impl_.rotation_speed_x_e3_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_Gyro, _impl_.rotation_speed_x_e3_)}},
    // optional int32 rotation_speed_y_e3 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_Gyro, _impl_.rotation_speed_y_e3_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_Gyro, _impl_.rotation_speed_y_e3_)}},
    // optional int32 rotation_speed_z_e3 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorEvent_Gyro, _impl_.rotation_speed_z_e3_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_Gyro, _impl_.rotation_speed_z_e3_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 rotation_speed_x_e3 = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_Gyro, _impl_.rotation_speed_x_e3_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 rotation_speed_y_e3 = 2;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_Gyro, _impl_.rotation_speed_y_e3_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 rotation_speed_z_e3 = 3;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_Gyro, _impl_.rotation_speed_z_e3_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorEvent_Gyro::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.Gyro)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 rotation_speed_x_e3 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_rotation_speed_x_e3(), target);
  }

  // optional int32 rotation_speed_y_e3 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_rotation_speed_y_e3(), target);
  }

  // optional int32 rotation_speed_z_e3 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_rotation_speed_z_e3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.Gyro)
  return target;
}

::size_t SensorEvent_Gyro::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.Gyro)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int32 rotation_speed_x_e3 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_rotation_speed_x_e3());
    }

    // optional int32 rotation_speed_y_e3 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_rotation_speed_y_e3());
    }

    // optional int32 rotation_speed_z_e3 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_rotation_speed_z_e3());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_Gyro::_class_data_ = {
    SensorEvent_Gyro::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_Gyro::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_Gyro::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_Gyro*>(&to_msg);
  auto& from = static_cast<const SensorEvent_Gyro&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.Gyro)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.rotation_speed_x_e3_ = from._impl_.rotation_speed_x_e3_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.rotation_speed_y_e3_ = from._impl_.rotation_speed_y_e3_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.rotation_speed_z_e3_ = from._impl_.rotation_speed_z_e3_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_Gyro::CopyFrom(const SensorEvent_Gyro& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.Gyro)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_Gyro::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SensorEvent_Gyro::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_Gyro::InternalSwap(SensorEvent_Gyro* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorEvent_Gyro, _impl_.rotation_speed_z_e3_)
      + sizeof(SensorEvent_Gyro::_impl_.rotation_speed_z_e3_)
      - PROTOBUF_FIELD_OFFSET(SensorEvent_Gyro, _impl_.rotation_speed_x_e3_)>(
          reinterpret_cast<char*>(&_impl_.rotation_speed_x_e3_),
          reinterpret_cast<char*>(&other->_impl_.rotation_speed_x_e3_));
}

::google::protobuf::Metadata SensorEvent_Gyro::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[26]);
}
// ===================================================================

class SensorEvent_Door::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_Door>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_Door, _impl_._has_bits_);
  static void set_has_hood_open(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_boot_open(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

SensorEvent_Door::SensorEvent_Door(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.Door)
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_Door::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        door_open_{visibility, arena, from.door_open_} {}

SensorEvent_Door::SensorEvent_Door(
    ::google::protobuf::Arena* arena,
    const SensorEvent_Door& from)
    : ::google::protobuf::Message(arena) {
  SensorEvent_Door* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hood_open_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, hood_open_),
           offsetof(Impl_, boot_open_) -
               offsetof(Impl_, hood_open_) +
               sizeof(Impl_::boot_open_));

  // @@protoc_insertion_point(copy_constructor:HU.SensorEvent.Door)
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_Door::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        door_open_{visibility, arena} {}

inline void SensorEvent_Door::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hood_open_),
           0,
           offsetof(Impl_, boot_open_) -
               offsetof(Impl_, hood_open_) +
               sizeof(Impl_::boot_open_));
}
SensorEvent_Door::~SensorEvent_Door() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.Door)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_Door::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_Door::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.Door)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.door_open_.Clear();
  ::memset(&_impl_.hood_open_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.boot_open_) -
      reinterpret_cast<char*>(&_impl_.hood_open_)) + sizeof(_impl_.boot_open_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_Door::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SensorEvent_Door::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_Door, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorEvent_Door_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool hood_open = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SensorEvent_Door, _impl_.hood_open_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_Door, _impl_.hood_open_)}},
    // optional bool boot_open = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SensorEvent_Door, _impl_.boot_open_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_Door, _impl_.boot_open_)}},
    // repeated bool door_open = 3;
    {::_pbi::TcParser::FastV8R1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_Door, _impl_.door_open_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool hood_open = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_Door, _impl_.hood_open_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool boot_open = 2;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_Door, _impl_.boot_open_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated bool door_open = 3;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_Door, _impl_.door_open_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorEvent_Door::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.Door)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool hood_open = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_hood_open(), target);
  }

  // optional bool boot_open = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_boot_open(), target);
  }

  // repeated bool door_open = 3;
  for (int i = 0, n = this->_internal_door_open_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_door_open().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.Door)
  return target;
}

::size_t SensorEvent_Door::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.Door)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bool door_open = 3;
  {
    std::size_t data_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_door_open_size())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_door_open_size());
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool hood_open = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }

    // optional bool boot_open = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_Door::_class_data_ = {
    SensorEvent_Door::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_Door::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_Door::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_Door*>(&to_msg);
  auto& from = static_cast<const SensorEvent_Door&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.Door)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_door_open()->MergeFrom(from._internal_door_open());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.hood_open_ = from._impl_.hood_open_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.boot_open_ = from._impl_.boot_open_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_Door::CopyFrom(const SensorEvent_Door& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.Door)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_Door::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SensorEvent_Door::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_Door::InternalSwap(SensorEvent_Door* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.door_open_.InternalSwap(&other->_impl_.door_open_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorEvent_Door, _impl_.boot_open_)
      + sizeof(SensorEvent_Door::_impl_.boot_open_)
      - PROTOBUF_FIELD_OFFSET(SensorEvent_Door, _impl_.hood_open_)>(
          reinterpret_cast<char*>(&_impl_.hood_open_),
          reinterpret_cast<char*>(&other->_impl_.hood_open_));
}

::google::protobuf::Metadata SensorEvent_Door::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[27]);
}
// ===================================================================

class SensorEvent_Light::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_Light>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_Light, _impl_._has_bits_);
  static void set_has_headlight(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_turn_indicator(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_hazard_light_on(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

SensorEvent_Light::SensorEvent_Light(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.Light)
}
SensorEvent_Light::SensorEvent_Light(
    ::google::protobuf::Arena* arena, const SensorEvent_Light& from)
    : SensorEvent_Light(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_Light::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorEvent_Light::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, headlight_),
           0,
           offsetof(Impl_, hazard_light_on_) -
               offsetof(Impl_, headlight_) +
               sizeof(Impl_::hazard_light_on_));
}
SensorEvent_Light::~SensorEvent_Light() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.Light)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_Light::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_Light::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.Light)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.headlight_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.hazard_light_on_) -
        reinterpret_cast<char*>(&_impl_.headlight_)) + sizeof(_impl_.hazard_light_on_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_Light::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> SensorEvent_Light::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_Light, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SensorEvent_Light_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .HU.SensorEvent.Light.HEADLIGHT_STATE headlight = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 3, PROTOBUF_FIELD_OFFSET(SensorEvent_Light, _impl_.headlight_)}},
    // optional .HU.SensorEvent.Light.TURN_INDICATOR_STATE turn_indicator = 2;
    {::_pbi::TcParser::FastEr0S1,
     {16, 1, 3, PROTOBUF_FIELD_OFFSET(SensorEvent_Light, _impl_.turn_indicator_)}},
    // optional bool hazard_light_on = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SensorEvent_Light, _impl_.hazard_light_on_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_Light, _impl_.hazard_light_on_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .HU.SensorEvent.Light.HEADLIGHT_STATE headlight = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_Light, _impl_.headlight_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .HU.SensorEvent.Light.TURN_INDICATOR_STATE turn_indicator = 2;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_Light, _impl_.turn_indicator_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional bool hazard_light_on = 3;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_Light, _impl_.hazard_light_on_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {0, 4},
    {0, 4},
  }}, {{
  }},
};

::uint8_t* SensorEvent_Light::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.Light)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .HU.SensorEvent.Light.HEADLIGHT_STATE headlight = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_headlight(), target);
  }

  // optional .HU.SensorEvent.Light.TURN_INDICATOR_STATE turn_indicator = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_turn_indicator(), target);
  }

  // optional bool hazard_light_on = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_hazard_light_on(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.Light)
  return target;
}

::size_t SensorEvent_Light::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.Light)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .HU.SensorEvent.Light.HEADLIGHT_STATE headlight = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_headlight());
    }

    // optional .HU.SensorEvent.Light.TURN_INDICATOR_STATE turn_indicator = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_turn_indicator());
    }

    // optional bool hazard_light_on = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_Light::_class_data_ = {
    SensorEvent_Light::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_Light::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_Light::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_Light*>(&to_msg);
  auto& from = static_cast<const SensorEvent_Light&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.Light)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.headlight_ = from._impl_.headlight_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.turn_indicator_ = from._impl_.turn_indicator_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.hazard_light_on_ = from._impl_.hazard_light_on_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_Light::CopyFrom(const SensorEvent_Light& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.Light)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_Light::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SensorEvent_Light::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_Light::InternalSwap(SensorEvent_Light* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorEvent_Light, _impl_.hazard_light_on_)
      + sizeof(SensorEvent_Light::_impl_.hazard_light_on_)
      - PROTOBUF_FIELD_OFFSET(SensorEvent_Light, _impl_.headlight_)>(
          reinterpret_cast<char*>(&_impl_.headlight_),
          reinterpret_cast<char*>(&other->_impl_.headlight_));
}

::google::protobuf::Metadata SensorEvent_Light::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[28]);
}
// ===================================================================

class SensorEvent_GearData::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorEvent_GearData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorEvent_GearData, _impl_._has_bits_);
  static void set_has_gear(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SensorEvent_GearData::SensorEvent_GearData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent.GearData)
}
SensorEvent_GearData::SensorEvent_GearData(
    ::google::protobuf::Arena* arena, const SensorEvent_GearData& from)
    : SensorEvent_GearData(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent_GearData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        gear_{static_cast< ::HU::SensorEvent_GearData_GEAR >(100)} {}

inline void SensorEvent_GearData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SensorEvent_GearData::~SensorEvent_GearData() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent.GearData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent_GearData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent_GearData::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent.GearData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gear_ = 100;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent_GearData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SensorEvent_GearData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorEvent_GearData, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SensorEvent_GearData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required .HU.SensorEvent.GearData.GEAR gear = 1;
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorEvent_GearData, _impl_.gear_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .HU.SensorEvent.GearData.GEAR gear = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent_GearData, _impl_.gear_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::HU::SensorEvent_GearData_GEAR_internal_data_},
  }}, {{
  }},
};

::uint8_t* SensorEvent_GearData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent.GearData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HU.SensorEvent.GearData.GEAR gear = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_gear(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent.GearData)
  return target;
}

::size_t SensorEvent_GearData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent.GearData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required .HU.SensorEvent.GearData.GEAR gear = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_gear());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent_GearData::_class_data_ = {
    SensorEvent_GearData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent_GearData::GetClassData() const {
  return &_class_data_;
}

void SensorEvent_GearData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent_GearData*>(&to_msg);
  auto& from = static_cast<const SensorEvent_GearData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent.GearData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_gear(from._internal_gear());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent_GearData::CopyFrom(const SensorEvent_GearData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent.GearData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent_GearData::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* SensorEvent_GearData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent_GearData::InternalSwap(SensorEvent_GearData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.gear_, other->_impl_.gear_);
}

::google::protobuf::Metadata SensorEvent_GearData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[29]);
}
// ===================================================================

class SensorEvent::_Internal {
 public:
};

SensorEvent::SensorEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorEvent)
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : location_data_{visibility, arena, from.location_data_},
        compass_data_{visibility, arena, from.compass_data_},
        speed_data_{visibility, arena, from.speed_data_},
        rpm_{visibility, arena, from.rpm_},
        odometer_data_{visibility, arena, from.odometer_data_},
        fuel_data_{visibility, arena, from.fuel_data_},
        parkingbrake_data_{visibility, arena, from.parkingbrake_data_},
        gear_data_{visibility, arena, from.gear_data_},
        diagnostics_data_{visibility, arena, from.diagnostics_data_},
        night_mode_{visibility, arena, from.night_mode_},
        enviorment_data_{visibility, arena, from.enviorment_data_},
        hvac_data_{visibility, arena, from.hvac_data_},
        driving_status_{visibility, arena, from.driving_status_},
        dead_reckoning_{visibility, arena, from.dead_reckoning_},
        passenger_data_{visibility, arena, from.passenger_data_},
        door_data_{visibility, arena, from.door_data_},
        light_data_{visibility, arena, from.light_data_},
        accel_data_{visibility, arena, from.accel_data_},
        gyro_data_{visibility, arena, from.gyro_data_},
        _cached_size_{0} {}

SensorEvent::SensorEvent(
    ::google::protobuf::Arena* arena,
    const SensorEvent& from)
    : ::google::protobuf::Message(arena) {
  SensorEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:HU.SensorEvent)
}
inline PROTOBUF_NDEBUG_INLINE SensorEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : location_data_{visibility, arena},
        compass_data_{visibility, arena},
        speed_data_{visibility, arena},
        rpm_{visibility, arena},
        odometer_data_{visibility, arena},
        fuel_data_{visibility, arena},
        parkingbrake_data_{visibility, arena},
        gear_data_{visibility, arena},
        diagnostics_data_{visibility, arena},
        night_mode_{visibility, arena},
        enviorment_data_{visibility, arena},
        hvac_data_{visibility, arena},
        driving_status_{visibility, arena},
        dead_reckoning_{visibility, arena},
        passenger_data_{visibility, arena},
        door_data_{visibility, arena},
        light_data_{visibility, arena},
        accel_data_{visibility, arena},
        gyro_data_{visibility, arena},
        _cached_size_{0} {}

inline void SensorEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SensorEvent::~SensorEvent() {
  // @@protoc_insertion_point(destructor:HU.SensorEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorEvent)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.location_data_.Clear();
  _impl_.compass_data_.Clear();
  _impl_.speed_data_.Clear();
  _impl_.rpm_.Clear();
  _impl_.odometer_data_.Clear();
  _impl_.fuel_data_.Clear();
  _impl_.parkingbrake_data_.Clear();
  _impl_.gear_data_.Clear();
  _impl_.diagnostics_data_.Clear();
  _impl_.night_mode_.Clear();
  _impl_.enviorment_data_.Clear();
  _impl_.hvac_data_.Clear();
  _impl_.driving_status_.Clear();
  _impl_.dead_reckoning_.Clear();
  _impl_.passenger_data_.Clear();
  _impl_.door_data_.Clear();
  _impl_.light_data_.Clear();
  _impl_.accel_data_.Clear();
  _impl_.gyro_data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorEvent::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 19, 19, 0, 2> SensorEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    20, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294049792,  // skipmap
    offsetof(decltype(_table_), field_entries),
    19,  // num_field_entries
    19,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SensorEvent_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .HU.SensorEvent.LocationData location_data = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.location_data_)}},
    // repeated .HU.SensorEvent.CompassData compass_data = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.compass_data_)}},
    // repeated .HU.SensorEvent.SpeedData speed_data = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.speed_data_)}},
    // repeated .HU.SensorEvent.RPM rpm = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.rpm_)}},
    // repeated .HU.SensorEvent.OdometerData odometer_data = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 4, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.odometer_data_)}},
    // repeated .HU.SensorEvent.FuelLevel fuel_data = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 5, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.fuel_data_)}},
    // repeated .HU.SensorEvent.ParkingBreak parkingbrake_data = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 6, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.parkingbrake_data_)}},
    // repeated .HU.SensorEvent.GearData gear_data = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 7, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.gear_data_)}},
    // repeated .HU.SensorEvent.Diagnostics diagnostics_data = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 8, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.diagnostics_data_)}},
    // repeated .HU.SensorEvent.NightMode night_mode = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 9, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.night_mode_)}},
    // repeated .HU.SensorEvent.Environment enviorment_data = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 10, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.enviorment_data_)}},
    // repeated .HU.SensorEvent.HVAC hvac_data = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 11, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.hvac_data_)}},
    // repeated .HU.SensorEvent.DrivingStatus driving_status = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 12, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.driving_status_)}},
    // repeated .HU.SensorEvent.DeadReckoning dead_reckoning = 14;
    {::_pbi::TcParser::FastMtR1,
     {114, 63, 13, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.dead_reckoning_)}},
    // repeated .HU.SensorEvent.Passenger passenger_data = 15;
    {::_pbi::TcParser::FastMtR1,
     {122, 63, 14, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.passenger_data_)}},
    // repeated .HU.SensorEvent.Door door_data = 16;
    {::_pbi::TcParser::FastMtR2,
     {386, 63, 15, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.door_data_)}},
    // repeated .HU.SensorEvent.Light light_data = 17;
    {::_pbi::TcParser::FastMtR2,
     {394, 63, 16, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.light_data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .HU.SensorEvent.Accel accel_data = 19;
    {::_pbi::TcParser::FastMtR2,
     {410, 63, 17, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.accel_data_)}},
    // repeated .HU.SensorEvent.Gyro gyro_data = 20;
    {::_pbi::TcParser::FastMtR2,
     {418, 63, 18, PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.gyro_data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .HU.SensorEvent.LocationData location_data = 1;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.location_data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.CompassData compass_data = 2;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.compass_data_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.SpeedData speed_data = 3;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.speed_data_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.RPM rpm = 4;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.rpm_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.OdometerData odometer_data = 5;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.odometer_data_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.FuelLevel fuel_data = 6;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.fuel_data_), 0, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.ParkingBreak parkingbrake_data = 7;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.parkingbrake_data_), 0, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.GearData gear_data = 8;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.gear_data_), 0, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.Diagnostics diagnostics_data = 9;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.diagnostics_data_), 0, 8,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.NightMode night_mode = 10;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.night_mode_), 0, 9,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.Environment enviorment_data = 11;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.enviorment_data_), 0, 10,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.HVAC hvac_data = 12;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.hvac_data_), 0, 11,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.DrivingStatus driving_status = 13;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.driving_status_), 0, 12,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.DeadReckoning dead_reckoning = 14;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.dead_reckoning_), 0, 13,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.Passenger passenger_data = 15;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.passenger_data_), 0, 14,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.Door door_data = 16;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.door_data_), 0, 15,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.Light light_data = 17;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.light_data_), 0, 16,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.Accel accel_data = 19;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.accel_data_), 0, 17,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.SensorEvent.Gyro gyro_data = 20;
    {PROTOBUF_FIELD_OFFSET(SensorEvent, _impl_.gyro_data_), 0, 18,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_LocationData>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_CompassData>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_SpeedData>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_RPM>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_OdometerData>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_FuelLevel>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_ParkingBreak>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_GearData>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_Diagnostics>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_NightMode>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_Environment>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_HVAC>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_DrivingStatus>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_DeadReckoning>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_Passenger>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_Door>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_Light>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_Accel>()},
    {::_pbi::TcParser::GetTable<::HU::SensorEvent_Gyro>()},
  }}, {{
  }},
};

::uint8_t* SensorEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .HU.SensorEvent.LocationData location_data = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_location_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_location_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.CompassData compass_data = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_compass_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_compass_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.SpeedData speed_data = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_speed_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_speed_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.RPM rpm = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rpm_size()); i < n; i++) {
    const auto& repfield = this->_internal_rpm().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.OdometerData odometer_data = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_odometer_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_odometer_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.FuelLevel fuel_data = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fuel_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_fuel_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.ParkingBreak parkingbrake_data = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_parkingbrake_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_parkingbrake_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.GearData gear_data = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_gear_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_gear_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.Diagnostics diagnostics_data = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_diagnostics_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_diagnostics_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.NightMode night_mode = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_night_mode_size()); i < n; i++) {
    const auto& repfield = this->_internal_night_mode().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.Environment enviorment_data = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_enviorment_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_enviorment_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.HVAC hvac_data = 12;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_hvac_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_hvac_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(12, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.DrivingStatus driving_status = 13;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_driving_status_size()); i < n; i++) {
    const auto& repfield = this->_internal_driving_status().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(13, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.DeadReckoning dead_reckoning = 14;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_dead_reckoning_size()); i < n; i++) {
    const auto& repfield = this->_internal_dead_reckoning().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(14, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.Passenger passenger_data = 15;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_passenger_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_passenger_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(15, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.Door door_data = 16;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_door_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_door_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(16, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.Light light_data = 17;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_light_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_light_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(17, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.Accel accel_data = 19;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_accel_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_accel_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(19, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.SensorEvent.Gyro gyro_data = 20;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_gyro_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_gyro_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(20, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorEvent)
  return target;
}

::size_t SensorEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HU.SensorEvent.LocationData location_data = 1;
  total_size += 1UL * this->_internal_location_data_size();
  for (const auto& msg : this->_internal_location_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.CompassData compass_data = 2;
  total_size += 1UL * this->_internal_compass_data_size();
  for (const auto& msg : this->_internal_compass_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.SpeedData speed_data = 3;
  total_size += 1UL * this->_internal_speed_data_size();
  for (const auto& msg : this->_internal_speed_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.RPM rpm = 4;
  total_size += 1UL * this->_internal_rpm_size();
  for (const auto& msg : this->_internal_rpm()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.OdometerData odometer_data = 5;
  total_size += 1UL * this->_internal_odometer_data_size();
  for (const auto& msg : this->_internal_odometer_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.FuelLevel fuel_data = 6;
  total_size += 1UL * this->_internal_fuel_data_size();
  for (const auto& msg : this->_internal_fuel_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.ParkingBreak parkingbrake_data = 7;
  total_size += 1UL * this->_internal_parkingbrake_data_size();
  for (const auto& msg : this->_internal_parkingbrake_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.GearData gear_data = 8;
  total_size += 1UL * this->_internal_gear_data_size();
  for (const auto& msg : this->_internal_gear_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.Diagnostics diagnostics_data = 9;
  total_size += 1UL * this->_internal_diagnostics_data_size();
  for (const auto& msg : this->_internal_diagnostics_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.NightMode night_mode = 10;
  total_size += 1UL * this->_internal_night_mode_size();
  for (const auto& msg : this->_internal_night_mode()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.Environment enviorment_data = 11;
  total_size += 1UL * this->_internal_enviorment_data_size();
  for (const auto& msg : this->_internal_enviorment_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.HVAC hvac_data = 12;
  total_size += 1UL * this->_internal_hvac_data_size();
  for (const auto& msg : this->_internal_hvac_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.DrivingStatus driving_status = 13;
  total_size += 1UL * this->_internal_driving_status_size();
  for (const auto& msg : this->_internal_driving_status()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.DeadReckoning dead_reckoning = 14;
  total_size += 1UL * this->_internal_dead_reckoning_size();
  for (const auto& msg : this->_internal_dead_reckoning()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.Passenger passenger_data = 15;
  total_size += 1UL * this->_internal_passenger_data_size();
  for (const auto& msg : this->_internal_passenger_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.Door door_data = 16;
  total_size += 2UL * this->_internal_door_data_size();
  for (const auto& msg : this->_internal_door_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.Light light_data = 17;
  total_size += 2UL * this->_internal_light_data_size();
  for (const auto& msg : this->_internal_light_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.Accel accel_data = 19;
  total_size += 2UL * this->_internal_accel_data_size();
  for (const auto& msg : this->_internal_accel_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.SensorEvent.Gyro gyro_data = 20;
  total_size += 2UL * this->_internal_gyro_data_size();
  for (const auto& msg : this->_internal_gyro_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorEvent::_class_data_ = {
    SensorEvent::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorEvent::GetClassData() const {
  return &_class_data_;
}

void SensorEvent::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorEvent*>(&to_msg);
  auto& from = static_cast<const SensorEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_location_data()->MergeFrom(
      from._internal_location_data());
  _this->_internal_mutable_compass_data()->MergeFrom(
      from._internal_compass_data());
  _this->_internal_mutable_speed_data()->MergeFrom(
      from._internal_speed_data());
  _this->_internal_mutable_rpm()->MergeFrom(
      from._internal_rpm());
  _this->_internal_mutable_odometer_data()->MergeFrom(
      from._internal_odometer_data());
  _this->_internal_mutable_fuel_data()->MergeFrom(
      from._internal_fuel_data());
  _this->_internal_mutable_parkingbrake_data()->MergeFrom(
      from._internal_parkingbrake_data());
  _this->_internal_mutable_gear_data()->MergeFrom(
      from._internal_gear_data());
  _this->_internal_mutable_diagnostics_data()->MergeFrom(
      from._internal_diagnostics_data());
  _this->_internal_mutable_night_mode()->MergeFrom(
      from._internal_night_mode());
  _this->_internal_mutable_enviorment_data()->MergeFrom(
      from._internal_enviorment_data());
  _this->_internal_mutable_hvac_data()->MergeFrom(
      from._internal_hvac_data());
  _this->_internal_mutable_driving_status()->MergeFrom(
      from._internal_driving_status());
  _this->_internal_mutable_dead_reckoning()->MergeFrom(
      from._internal_dead_reckoning());
  _this->_internal_mutable_passenger_data()->MergeFrom(
      from._internal_passenger_data());
  _this->_internal_mutable_door_data()->MergeFrom(
      from._internal_door_data());
  _this->_internal_mutable_light_data()->MergeFrom(
      from._internal_light_data());
  _this->_internal_mutable_accel_data()->MergeFrom(
      from._internal_accel_data());
  _this->_internal_mutable_gyro_data()->MergeFrom(
      from._internal_gyro_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorEvent::CopyFrom(const SensorEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorEvent::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_rpm()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_fuel_data()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_gear_data()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_night_mode()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_driving_status()))
    return false;
  return true;
}

::_pbi::CachedSize* SensorEvent::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorEvent::InternalSwap(SensorEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.location_data_.InternalSwap(&other->_impl_.location_data_);
  _impl_.compass_data_.InternalSwap(&other->_impl_.compass_data_);
  _impl_.speed_data_.InternalSwap(&other->_impl_.speed_data_);
  _impl_.rpm_.InternalSwap(&other->_impl_.rpm_);
  _impl_.odometer_data_.InternalSwap(&other->_impl_.odometer_data_);
  _impl_.fuel_data_.InternalSwap(&other->_impl_.fuel_data_);
  _impl_.parkingbrake_data_.InternalSwap(&other->_impl_.parkingbrake_data_);
  _impl_.gear_data_.InternalSwap(&other->_impl_.gear_data_);
  _impl_.diagnostics_data_.InternalSwap(&other->_impl_.diagnostics_data_);
  _impl_.night_mode_.InternalSwap(&other->_impl_.night_mode_);
  _impl_.enviorment_data_.InternalSwap(&other->_impl_.enviorment_data_);
  _impl_.hvac_data_.InternalSwap(&other->_impl_.hvac_data_);
  _impl_.driving_status_.InternalSwap(&other->_impl_.driving_status_);
  _impl_.dead_reckoning_.InternalSwap(&other->_impl_.dead_reckoning_);
  _impl_.passenger_data_.InternalSwap(&other->_impl_.passenger_data_);
  _impl_.door_data_.InternalSwap(&other->_impl_.door_data_);
  _impl_.light_data_.InternalSwap(&other->_impl_.light_data_);
  _impl_.accel_data_.InternalSwap(&other->_impl_.accel_data_);
  _impl_.gyro_data_.InternalSwap(&other->_impl_.gyro_data_);
}

::google::protobuf::Metadata SensorEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[30]);
}
// ===================================================================

class AudioCofig::_Internal {
 public:
  using HasBits = decltype(std::declval<AudioCofig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AudioCofig, _impl_._has_bits_);
  static void set_has_sample_rate(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_bit_depth(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_channel_count(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

AudioCofig::AudioCofig(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.AudioCofig)
}
AudioCofig::AudioCofig(
    ::google::protobuf::Arena* arena, const AudioCofig& from)
    : AudioCofig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AudioCofig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AudioCofig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sample_rate_),
           0,
           offsetof(Impl_, channel_count_) -
               offsetof(Impl_, sample_rate_) +
               sizeof(Impl_::channel_count_));
}
AudioCofig::~AudioCofig() {
  // @@protoc_insertion_point(destructor:HU.AudioCofig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AudioCofig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AudioCofig::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.AudioCofig)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.sample_rate_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.channel_count_) -
        reinterpret_cast<char*>(&_impl_.sample_rate_)) + sizeof(_impl_.channel_count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AudioCofig::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> AudioCofig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AudioCofig, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AudioCofig_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required uint32 sample_rate = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AudioCofig, _impl_.sample_rate_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AudioCofig, _impl_.sample_rate_)}},
    // required uint32 bit_depth = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AudioCofig, _impl_.bit_depth_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AudioCofig, _impl_.bit_depth_)}},
    // required uint32 channel_count = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AudioCofig, _impl_.channel_count_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(AudioCofig, _impl_.channel_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required uint32 sample_rate = 1;
    {PROTOBUF_FIELD_OFFSET(AudioCofig, _impl_.sample_rate_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint32 bit_depth = 2;
    {PROTOBUF_FIELD_OFFSET(AudioCofig, _impl_.bit_depth_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint32 channel_count = 3;
    {PROTOBUF_FIELD_OFFSET(AudioCofig, _impl_.channel_count_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AudioCofig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.AudioCofig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required uint32 sample_rate = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_sample_rate(), target);
  }

  // required uint32 bit_depth = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_bit_depth(), target);
  }

  // required uint32 channel_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_channel_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.AudioCofig)
  return target;
}

::size_t AudioCofig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.AudioCofig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required uint32 sample_rate = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_sample_rate());
    }

    // required uint32 bit_depth = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_bit_depth());
    }

    // required uint32 channel_count = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_channel_count());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AudioCofig::_class_data_ = {
    AudioCofig::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AudioCofig::GetClassData() const {
  return &_class_data_;
}

void AudioCofig::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AudioCofig*>(&to_msg);
  auto& from = static_cast<const AudioCofig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.AudioCofig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.sample_rate_ = from._impl_.sample_rate_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.bit_depth_ = from._impl_.bit_depth_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.channel_count_ = from._impl_.channel_count_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AudioCofig::CopyFrom(const AudioCofig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.AudioCofig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AudioCofig::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* AudioCofig::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AudioCofig::InternalSwap(AudioCofig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AudioCofig, _impl_.channel_count_)
      + sizeof(AudioCofig::_impl_.channel_count_)
      - PROTOBUF_FIELD_OFFSET(AudioCofig, _impl_.sample_rate_)>(
          reinterpret_cast<char*>(&_impl_.sample_rate_),
          reinterpret_cast<char*>(&other->_impl_.sample_rate_));
}

::google::protobuf::Metadata AudioCofig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[31]);
}
// ===================================================================

class ChannelDescriptor_SensorChannel_Sensor::_Internal {
 public:
  using HasBits = decltype(std::declval<ChannelDescriptor_SensorChannel_Sensor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChannelDescriptor_SensorChannel_Sensor, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ChannelDescriptor_SensorChannel_Sensor::ChannelDescriptor_SensorChannel_Sensor(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ChannelDescriptor.SensorChannel.Sensor)
}
ChannelDescriptor_SensorChannel_Sensor::ChannelDescriptor_SensorChannel_Sensor(
    ::google::protobuf::Arena* arena, const ChannelDescriptor_SensorChannel_Sensor& from)
    : ChannelDescriptor_SensorChannel_Sensor(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_SensorChannel_Sensor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        type_{static_cast< ::HU::SENSOR_TYPE >(1)} {}

inline void ChannelDescriptor_SensorChannel_Sensor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ChannelDescriptor_SensorChannel_Sensor::~ChannelDescriptor_SensorChannel_Sensor() {
  // @@protoc_insertion_point(destructor:HU.ChannelDescriptor.SensorChannel.Sensor)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelDescriptor_SensorChannel_Sensor::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChannelDescriptor_SensorChannel_Sensor::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ChannelDescriptor.SensorChannel.Sensor)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 1;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelDescriptor_SensorChannel_Sensor::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ChannelDescriptor_SensorChannel_Sensor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelDescriptor_SensorChannel_Sensor, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ChannelDescriptor_SensorChannel_Sensor_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .HU.SENSOR_TYPE type = 1;
    {::_pbi::TcParser::FastEr1S1,
     {8, 0, 21, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_SensorChannel_Sensor, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .HU.SENSOR_TYPE type = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_SensorChannel_Sensor, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {1, 21},
  }}, {{
  }},
};

::uint8_t* ChannelDescriptor_SensorChannel_Sensor::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ChannelDescriptor.SensorChannel.Sensor)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .HU.SENSOR_TYPE type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ChannelDescriptor.SensorChannel.Sensor)
  return target;
}

::size_t ChannelDescriptor_SensorChannel_Sensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ChannelDescriptor.SensorChannel.Sensor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .HU.SENSOR_TYPE type = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelDescriptor_SensorChannel_Sensor::_class_data_ = {
    ChannelDescriptor_SensorChannel_Sensor::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChannelDescriptor_SensorChannel_Sensor::GetClassData() const {
  return &_class_data_;
}

void ChannelDescriptor_SensorChannel_Sensor::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelDescriptor_SensorChannel_Sensor*>(&to_msg);
  auto& from = static_cast<const ChannelDescriptor_SensorChannel_Sensor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ChannelDescriptor.SensorChannel.Sensor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelDescriptor_SensorChannel_Sensor::CopyFrom(const ChannelDescriptor_SensorChannel_Sensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ChannelDescriptor.SensorChannel.Sensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelDescriptor_SensorChannel_Sensor::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ChannelDescriptor_SensorChannel_Sensor::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChannelDescriptor_SensorChannel_Sensor::InternalSwap(ChannelDescriptor_SensorChannel_Sensor* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata ChannelDescriptor_SensorChannel_Sensor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[32]);
}
// ===================================================================

class ChannelDescriptor_SensorChannel::_Internal {
 public:
};

ChannelDescriptor_SensorChannel::ChannelDescriptor_SensorChannel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ChannelDescriptor.SensorChannel)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_SensorChannel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : sensor_list_{visibility, arena, from.sensor_list_},
        _cached_size_{0} {}

ChannelDescriptor_SensorChannel::ChannelDescriptor_SensorChannel(
    ::google::protobuf::Arena* arena,
    const ChannelDescriptor_SensorChannel& from)
    : ::google::protobuf::Message(arena) {
  ChannelDescriptor_SensorChannel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:HU.ChannelDescriptor.SensorChannel)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_SensorChannel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sensor_list_{visibility, arena},
        _cached_size_{0} {}

inline void ChannelDescriptor_SensorChannel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ChannelDescriptor_SensorChannel::~ChannelDescriptor_SensorChannel() {
  // @@protoc_insertion_point(destructor:HU.ChannelDescriptor.SensorChannel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelDescriptor_SensorChannel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChannelDescriptor_SensorChannel::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ChannelDescriptor.SensorChannel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sensor_list_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelDescriptor_SensorChannel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ChannelDescriptor_SensorChannel::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ChannelDescriptor_SensorChannel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .HU.ChannelDescriptor.SensorChannel.Sensor sensor_list = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_SensorChannel, _impl_.sensor_list_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .HU.ChannelDescriptor.SensorChannel.Sensor sensor_list = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_SensorChannel, _impl_.sensor_list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::HU::ChannelDescriptor_SensorChannel_Sensor>()},
  }}, {{
  }},
};

::uint8_t* ChannelDescriptor_SensorChannel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ChannelDescriptor.SensorChannel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .HU.ChannelDescriptor.SensorChannel.Sensor sensor_list = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sensor_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_sensor_list().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ChannelDescriptor.SensorChannel)
  return target;
}

::size_t ChannelDescriptor_SensorChannel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ChannelDescriptor.SensorChannel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HU.ChannelDescriptor.SensorChannel.Sensor sensor_list = 1;
  total_size += 1UL * this->_internal_sensor_list_size();
  for (const auto& msg : this->_internal_sensor_list()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelDescriptor_SensorChannel::_class_data_ = {
    ChannelDescriptor_SensorChannel::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChannelDescriptor_SensorChannel::GetClassData() const {
  return &_class_data_;
}

void ChannelDescriptor_SensorChannel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelDescriptor_SensorChannel*>(&to_msg);
  auto& from = static_cast<const ChannelDescriptor_SensorChannel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ChannelDescriptor.SensorChannel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sensor_list()->MergeFrom(
      from._internal_sensor_list());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelDescriptor_SensorChannel::CopyFrom(const ChannelDescriptor_SensorChannel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ChannelDescriptor.SensorChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelDescriptor_SensorChannel::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ChannelDescriptor_SensorChannel::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChannelDescriptor_SensorChannel::InternalSwap(ChannelDescriptor_SensorChannel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sensor_list_.InternalSwap(&other->_impl_.sensor_list_);
}

::google::protobuf::Metadata ChannelDescriptor_SensorChannel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[33]);
}
// ===================================================================

class ChannelDescriptor_OutputStreamChannel_VideoConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<ChannelDescriptor_OutputStreamChannel_VideoConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_._has_bits_);
  static void set_has_resolution(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_frame_rate(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_margin_width(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_margin_height(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_dpi(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_additional_depth(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000037) ^ 0x00000037) != 0;
  }
};

ChannelDescriptor_OutputStreamChannel_VideoConfig::ChannelDescriptor_OutputStreamChannel_VideoConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ChannelDescriptor.OutputStreamChannel.VideoConfig)
}
ChannelDescriptor_OutputStreamChannel_VideoConfig::ChannelDescriptor_OutputStreamChannel_VideoConfig(
    ::google::protobuf::Arena* arena, const ChannelDescriptor_OutputStreamChannel_VideoConfig& from)
    : ChannelDescriptor_OutputStreamChannel_VideoConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_OutputStreamChannel_VideoConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        resolution_{static_cast< ::HU::ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_RESOLUTION >(1)},
        frame_rate_{static_cast< ::HU::ChannelDescriptor_OutputStreamChannel_VideoConfig_VIDEO_FPS >(1)} {}

inline void ChannelDescriptor_OutputStreamChannel_VideoConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, margin_width_),
           0,
           offsetof(Impl_, additional_depth_) -
               offsetof(Impl_, margin_width_) +
               sizeof(Impl_::additional_depth_));
}
ChannelDescriptor_OutputStreamChannel_VideoConfig::~ChannelDescriptor_OutputStreamChannel_VideoConfig() {
  // @@protoc_insertion_point(destructor:HU.ChannelDescriptor.OutputStreamChannel.VideoConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelDescriptor_OutputStreamChannel_VideoConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChannelDescriptor_OutputStreamChannel_VideoConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ChannelDescriptor.OutputStreamChannel.VideoConfig)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.margin_width_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.additional_depth_) -
        reinterpret_cast<char*>(&_impl_.margin_width_)) + sizeof(_impl_.additional_depth_));
    _impl_.resolution_ = 1;
    _impl_.frame_rate_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelDescriptor_OutputStreamChannel_VideoConfig::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 0, 2> ChannelDescriptor_OutputStreamChannel_VideoConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ChannelDescriptor_OutputStreamChannel_VideoConfig_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required .HU.ChannelDescriptor.OutputStreamChannel.VideoConfig.VIDEO_RESOLUTION resolution = 1;
    {::_pbi::TcParser::FastEr1S1,
     {8, 4, 3, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.resolution_)}},
    // required .HU.ChannelDescriptor.OutputStreamChannel.VideoConfig.VIDEO_FPS frame_rate = 2;
    {::_pbi::TcParser::FastEr1S1,
     {16, 5, 2, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.frame_rate_)}},
    // required uint32 margin_width = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.margin_width_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.margin_width_)}},
    // required uint32 margin_height = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.margin_height_), 1>(),
     {32, 1, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.margin_height_)}},
    // required uint32 dpi = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.dpi_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.dpi_)}},
    // optional uint32 additional_depth = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.additional_depth_), 3>(),
     {48, 3, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.additional_depth_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required .HU.ChannelDescriptor.OutputStreamChannel.VideoConfig.VIDEO_RESOLUTION resolution = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.resolution_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // required .HU.ChannelDescriptor.OutputStreamChannel.VideoConfig.VIDEO_FPS frame_rate = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.frame_rate_), _Internal::kHasBitsOffset + 5, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // required uint32 margin_width = 3;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.margin_width_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint32 margin_height = 4;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.margin_height_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint32 dpi = 5;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.dpi_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 additional_depth = 6;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.additional_depth_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {1, 3},
    {1, 2},
  }}, {{
  }},
};

::uint8_t* ChannelDescriptor_OutputStreamChannel_VideoConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ChannelDescriptor.OutputStreamChannel.VideoConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HU.ChannelDescriptor.OutputStreamChannel.VideoConfig.VIDEO_RESOLUTION resolution = 1;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_resolution(), target);
  }

  // required .HU.ChannelDescriptor.OutputStreamChannel.VideoConfig.VIDEO_FPS frame_rate = 2;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_frame_rate(), target);
  }

  // required uint32 margin_width = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_margin_width(), target);
  }

  // required uint32 margin_height = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_margin_height(), target);
  }

  // required uint32 dpi = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_dpi(), target);
  }

  // optional uint32 additional_depth = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_additional_depth(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ChannelDescriptor.OutputStreamChannel.VideoConfig)
  return target;
}

::size_t ChannelDescriptor_OutputStreamChannel_VideoConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ChannelDescriptor.OutputStreamChannel.VideoConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required uint32 margin_width = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_margin_width());
    }

    // required uint32 margin_height = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_margin_height());
    }

    // required uint32 dpi = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_dpi());
    }

  }
  // optional uint32 additional_depth = 6;
  if (cached_has_bits & 0x00000008u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_additional_depth());
  }

  if (cached_has_bits & 0x00000030u) {
    // required .HU.ChannelDescriptor.OutputStreamChannel.VideoConfig.VIDEO_RESOLUTION resolution = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_resolution());
    }

    // required .HU.ChannelDescriptor.OutputStreamChannel.VideoConfig.VIDEO_FPS frame_rate = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_frame_rate());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelDescriptor_OutputStreamChannel_VideoConfig::_class_data_ = {
    ChannelDescriptor_OutputStreamChannel_VideoConfig::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChannelDescriptor_OutputStreamChannel_VideoConfig::GetClassData() const {
  return &_class_data_;
}

void ChannelDescriptor_OutputStreamChannel_VideoConfig::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelDescriptor_OutputStreamChannel_VideoConfig*>(&to_msg);
  auto& from = static_cast<const ChannelDescriptor_OutputStreamChannel_VideoConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ChannelDescriptor.OutputStreamChannel.VideoConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.margin_width_ = from._impl_.margin_width_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.margin_height_ = from._impl_.margin_height_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.dpi_ = from._impl_.dpi_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.additional_depth_ = from._impl_.additional_depth_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.resolution_ = from._impl_.resolution_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.frame_rate_ = from._impl_.frame_rate_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelDescriptor_OutputStreamChannel_VideoConfig::CopyFrom(const ChannelDescriptor_OutputStreamChannel_VideoConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ChannelDescriptor.OutputStreamChannel.VideoConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelDescriptor_OutputStreamChannel_VideoConfig::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* ChannelDescriptor_OutputStreamChannel_VideoConfig::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChannelDescriptor_OutputStreamChannel_VideoConfig::InternalSwap(ChannelDescriptor_OutputStreamChannel_VideoConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.frame_rate_)
      + sizeof(ChannelDescriptor_OutputStreamChannel_VideoConfig::_impl_.frame_rate_)
      - PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel_VideoConfig, _impl_.margin_width_)>(
          reinterpret_cast<char*>(&_impl_.margin_width_),
          reinterpret_cast<char*>(&other->_impl_.margin_width_));
}

::google::protobuf::Metadata ChannelDescriptor_OutputStreamChannel_VideoConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[34]);
}
// ===================================================================

class ChannelDescriptor_OutputStreamChannel::_Internal {
 public:
  using HasBits = decltype(std::declval<ChannelDescriptor_OutputStreamChannel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_audio_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_available_while_in_call(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

ChannelDescriptor_OutputStreamChannel::ChannelDescriptor_OutputStreamChannel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ChannelDescriptor.OutputStreamChannel)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_OutputStreamChannel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        audio_configs_{visibility, arena, from.audio_configs_},
        video_configs_{visibility, arena, from.video_configs_} {}

ChannelDescriptor_OutputStreamChannel::ChannelDescriptor_OutputStreamChannel(
    ::google::protobuf::Arena* arena,
    const ChannelDescriptor_OutputStreamChannel& from)
    : ::google::protobuf::Message(arena) {
  ChannelDescriptor_OutputStreamChannel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, available_while_in_call_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, available_while_in_call_),
           offsetof(Impl_, audio_type_) -
               offsetof(Impl_, available_while_in_call_) +
               sizeof(Impl_::audio_type_));

  // @@protoc_insertion_point(copy_constructor:HU.ChannelDescriptor.OutputStreamChannel)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_OutputStreamChannel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        audio_configs_{visibility, arena},
        video_configs_{visibility, arena},
        type_{static_cast< ::HU::STREAM_TYPE >(1)},
        audio_type_{static_cast< ::HU::AUDIO_TYPE >(1)} {}

inline void ChannelDescriptor_OutputStreamChannel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.available_while_in_call_ = {};
}
ChannelDescriptor_OutputStreamChannel::~ChannelDescriptor_OutputStreamChannel() {
  // @@protoc_insertion_point(destructor:HU.ChannelDescriptor.OutputStreamChannel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelDescriptor_OutputStreamChannel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChannelDescriptor_OutputStreamChannel::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ChannelDescriptor.OutputStreamChannel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.audio_configs_.Clear();
  _impl_.video_configs_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    _impl_.available_while_in_call_ = false;
    _impl_.type_ = 1;
    _impl_.audio_type_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelDescriptor_OutputStreamChannel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 4, 0, 2> ChannelDescriptor_OutputStreamChannel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ChannelDescriptor_OutputStreamChannel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required .HU.STREAM_TYPE type = 1;
    {::_pbi::TcParser::FastEvS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel, _impl_.type_)}},
    // optional .HU.AUDIO_TYPE audio_type = 2;
    {::_pbi::TcParser::FastEr1S1,
     {16, 2, 4, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel, _impl_.audio_type_)}},
    // repeated .HU.AudioCofig audio_configs = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel, _impl_.audio_configs_)}},
    // repeated .HU.ChannelDescriptor.OutputStreamChannel.VideoConfig video_configs = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel, _impl_.video_configs_)}},
    // optional bool available_while_in_call = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ChannelDescriptor_OutputStreamChannel, _impl_.available_while_in_call_), 0>(),
     {40, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel, _impl_.available_while_in_call_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required .HU.STREAM_TYPE type = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional .HU.AUDIO_TYPE audio_type = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel, _impl_.audio_type_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .HU.AudioCofig audio_configs = 3;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel, _impl_.audio_configs_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .HU.ChannelDescriptor.OutputStreamChannel.VideoConfig video_configs = 4;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel, _impl_.video_configs_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool available_while_in_call = 5;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel, _impl_.available_while_in_call_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::HU::STREAM_TYPE_internal_data_},
    {1, 4},
    {::_pbi::TcParser::GetTable<::HU::AudioCofig>()},
    {::_pbi::TcParser::GetTable<::HU::ChannelDescriptor_OutputStreamChannel_VideoConfig>()},
  }}, {{
  }},
};

::uint8_t* ChannelDescriptor_OutputStreamChannel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ChannelDescriptor.OutputStreamChannel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HU.STREAM_TYPE type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // optional .HU.AUDIO_TYPE audio_type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_audio_type(), target);
  }

  // repeated .HU.AudioCofig audio_configs = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_audio_configs_size()); i < n; i++) {
    const auto& repfield = this->_internal_audio_configs().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HU.ChannelDescriptor.OutputStreamChannel.VideoConfig video_configs = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_video_configs_size()); i < n; i++) {
    const auto& repfield = this->_internal_video_configs().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional bool available_while_in_call = 5;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_available_while_in_call(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ChannelDescriptor.OutputStreamChannel)
  return target;
}

::size_t ChannelDescriptor_OutputStreamChannel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ChannelDescriptor.OutputStreamChannel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HU.AudioCofig audio_configs = 3;
  total_size += 1UL * this->_internal_audio_configs_size();
  for (const auto& msg : this->_internal_audio_configs()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .HU.ChannelDescriptor.OutputStreamChannel.VideoConfig video_configs = 4;
  total_size += 1UL * this->_internal_video_configs_size();
  for (const auto& msg : this->_internal_video_configs()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional bool available_while_in_call = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  // required .HU.STREAM_TYPE type = 1;
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  // optional .HU.AUDIO_TYPE audio_type = 2;
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_audio_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelDescriptor_OutputStreamChannel::_class_data_ = {
    ChannelDescriptor_OutputStreamChannel::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChannelDescriptor_OutputStreamChannel::GetClassData() const {
  return &_class_data_;
}

void ChannelDescriptor_OutputStreamChannel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelDescriptor_OutputStreamChannel*>(&to_msg);
  auto& from = static_cast<const ChannelDescriptor_OutputStreamChannel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ChannelDescriptor.OutputStreamChannel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_audio_configs()->MergeFrom(
      from._internal_audio_configs());
  _this->_internal_mutable_video_configs()->MergeFrom(
      from._internal_video_configs());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.available_while_in_call_ = from._impl_.available_while_in_call_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.audio_type_ = from._impl_.audio_type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelDescriptor_OutputStreamChannel::CopyFrom(const ChannelDescriptor_OutputStreamChannel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ChannelDescriptor.OutputStreamChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelDescriptor_OutputStreamChannel::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_audio_configs()))
    return false;
  if (!::google::protobuf::internal::AllAreInitialized(_internal_video_configs()))
    return false;
  return true;
}

::_pbi::CachedSize* ChannelDescriptor_OutputStreamChannel::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChannelDescriptor_OutputStreamChannel::InternalSwap(ChannelDescriptor_OutputStreamChannel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.audio_configs_.InternalSwap(&other->_impl_.audio_configs_);
  _impl_.video_configs_.InternalSwap(&other->_impl_.video_configs_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel, _impl_.audio_type_)
      + sizeof(ChannelDescriptor_OutputStreamChannel::_impl_.audio_type_)
      - PROTOBUF_FIELD_OFFSET(ChannelDescriptor_OutputStreamChannel, _impl_.available_while_in_call_)>(
          reinterpret_cast<char*>(&_impl_.available_while_in_call_),
          reinterpret_cast<char*>(&other->_impl_.available_while_in_call_));
}

::google::protobuf::Metadata ChannelDescriptor_OutputStreamChannel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[35]);
}
// ===================================================================

class ChannelDescriptor_InputEventChannel_TouchScreenConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<ChannelDescriptor_InputEventChannel_TouchScreenConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel_TouchScreenConfig, _impl_._has_bits_);
  static void set_has_width(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_height(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

ChannelDescriptor_InputEventChannel_TouchScreenConfig::ChannelDescriptor_InputEventChannel_TouchScreenConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ChannelDescriptor.InputEventChannel.TouchScreenConfig)
}
ChannelDescriptor_InputEventChannel_TouchScreenConfig::ChannelDescriptor_InputEventChannel_TouchScreenConfig(
    ::google::protobuf::Arena* arena, const ChannelDescriptor_InputEventChannel_TouchScreenConfig& from)
    : ChannelDescriptor_InputEventChannel_TouchScreenConfig(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_InputEventChannel_TouchScreenConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ChannelDescriptor_InputEventChannel_TouchScreenConfig::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::height_));
}
ChannelDescriptor_InputEventChannel_TouchScreenConfig::~ChannelDescriptor_InputEventChannel_TouchScreenConfig() {
  // @@protoc_insertion_point(destructor:HU.ChannelDescriptor.InputEventChannel.TouchScreenConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelDescriptor_InputEventChannel_TouchScreenConfig::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChannelDescriptor_InputEventChannel_TouchScreenConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ChannelDescriptor.InputEventChannel.TouchScreenConfig)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.width_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.height_) -
        reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.height_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelDescriptor_InputEventChannel_TouchScreenConfig::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ChannelDescriptor_InputEventChannel_TouchScreenConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel_TouchScreenConfig, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ChannelDescriptor_InputEventChannel_TouchScreenConfig_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required uint32 height = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelDescriptor_InputEventChannel_TouchScreenConfig, _impl_.height_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel_TouchScreenConfig, _impl_.height_)}},
    // required uint32 width = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelDescriptor_InputEventChannel_TouchScreenConfig, _impl_.width_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel_TouchScreenConfig, _impl_.width_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required uint32 width = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel_TouchScreenConfig, _impl_.width_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required uint32 height = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel_TouchScreenConfig, _impl_.height_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ChannelDescriptor_InputEventChannel_TouchScreenConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ChannelDescriptor.InputEventChannel.TouchScreenConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required uint32 width = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_width(), target);
  }

  // required uint32 height = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ChannelDescriptor.InputEventChannel.TouchScreenConfig)
  return target;
}

::size_t ChannelDescriptor_InputEventChannel_TouchScreenConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ChannelDescriptor.InputEventChannel.TouchScreenConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required uint32 width = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_width());
    }

    // required uint32 height = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_height());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelDescriptor_InputEventChannel_TouchScreenConfig::_class_data_ = {
    ChannelDescriptor_InputEventChannel_TouchScreenConfig::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChannelDescriptor_InputEventChannel_TouchScreenConfig::GetClassData() const {
  return &_class_data_;
}

void ChannelDescriptor_InputEventChannel_TouchScreenConfig::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelDescriptor_InputEventChannel_TouchScreenConfig*>(&to_msg);
  auto& from = static_cast<const ChannelDescriptor_InputEventChannel_TouchScreenConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ChannelDescriptor.InputEventChannel.TouchScreenConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.width_ = from._impl_.width_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.height_ = from._impl_.height_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelDescriptor_InputEventChannel_TouchScreenConfig::CopyFrom(const ChannelDescriptor_InputEventChannel_TouchScreenConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ChannelDescriptor.InputEventChannel.TouchScreenConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelDescriptor_InputEventChannel_TouchScreenConfig::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* ChannelDescriptor_InputEventChannel_TouchScreenConfig::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChannelDescriptor_InputEventChannel_TouchScreenConfig::InternalSwap(ChannelDescriptor_InputEventChannel_TouchScreenConfig* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel_TouchScreenConfig, _impl_.height_)
      + sizeof(ChannelDescriptor_InputEventChannel_TouchScreenConfig::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel_TouchScreenConfig, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::google::protobuf::Metadata ChannelDescriptor_InputEventChannel_TouchScreenConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[36]);
}
// ===================================================================

class ChannelDescriptor_InputEventChannel::_Internal {
 public:
  using HasBits = decltype(std::declval<ChannelDescriptor_InputEventChannel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel, _impl_._has_bits_);
  static const ::HU::ChannelDescriptor_InputEventChannel_TouchScreenConfig& touch_screen_config(const ChannelDescriptor_InputEventChannel* msg);
  static void set_has_touch_screen_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HU::ChannelDescriptor_InputEventChannel_TouchScreenConfig& touch_pad_config(const ChannelDescriptor_InputEventChannel* msg);
  static void set_has_touch_pad_config(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::HU::ChannelDescriptor_InputEventChannel_TouchScreenConfig& ChannelDescriptor_InputEventChannel::_Internal::touch_screen_config(const ChannelDescriptor_InputEventChannel* msg) {
  return *msg->_impl_.touch_screen_config_;
}
const ::HU::ChannelDescriptor_InputEventChannel_TouchScreenConfig& ChannelDescriptor_InputEventChannel::_Internal::touch_pad_config(const ChannelDescriptor_InputEventChannel* msg) {
  return *msg->_impl_.touch_pad_config_;
}
ChannelDescriptor_InputEventChannel::ChannelDescriptor_InputEventChannel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ChannelDescriptor.InputEventChannel)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_InputEventChannel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        keycodes_supported_{visibility, arena, from.keycodes_supported_} {}

ChannelDescriptor_InputEventChannel::ChannelDescriptor_InputEventChannel(
    ::google::protobuf::Arena* arena,
    const ChannelDescriptor_InputEventChannel& from)
    : ::google::protobuf::Message(arena) {
  ChannelDescriptor_InputEventChannel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.touch_screen_config_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::HU::ChannelDescriptor_InputEventChannel_TouchScreenConfig>(arena, *from._impl_.touch_screen_config_)
                : nullptr;
  _impl_.touch_pad_config_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::HU::ChannelDescriptor_InputEventChannel_TouchScreenConfig>(arena, *from._impl_.touch_pad_config_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:HU.ChannelDescriptor.InputEventChannel)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_InputEventChannel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        keycodes_supported_{visibility, arena} {}

inline void ChannelDescriptor_InputEventChannel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, touch_screen_config_),
           0,
           offsetof(Impl_, touch_pad_config_) -
               offsetof(Impl_, touch_screen_config_) +
               sizeof(Impl_::touch_pad_config_));
}
ChannelDescriptor_InputEventChannel::~ChannelDescriptor_InputEventChannel() {
  // @@protoc_insertion_point(destructor:HU.ChannelDescriptor.InputEventChannel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelDescriptor_InputEventChannel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.touch_screen_config_;
  delete _impl_.touch_pad_config_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChannelDescriptor_InputEventChannel::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ChannelDescriptor.InputEventChannel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.keycodes_supported_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.touch_screen_config_ != nullptr);
      _impl_.touch_screen_config_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.touch_pad_config_ != nullptr);
      _impl_.touch_pad_config_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelDescriptor_InputEventChannel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> ChannelDescriptor_InputEventChannel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ChannelDescriptor_InputEventChannel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated uint32 keycodes_supported = 1;
    {::_pbi::TcParser::FastV32R1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel, _impl_.keycodes_supported_)}},
    // optional .HU.ChannelDescriptor.InputEventChannel.TouchScreenConfig touch_screen_config = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel, _impl_.touch_screen_config_)}},
    // optional .HU.ChannelDescriptor.InputEventChannel.TouchScreenConfig touch_pad_config = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel, _impl_.touch_pad_config_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated uint32 keycodes_supported = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel, _impl_.keycodes_supported_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // optional .HU.ChannelDescriptor.InputEventChannel.TouchScreenConfig touch_screen_config = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel, _impl_.touch_screen_config_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .HU.ChannelDescriptor.InputEventChannel.TouchScreenConfig touch_pad_config = 3;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel, _impl_.touch_pad_config_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::HU::ChannelDescriptor_InputEventChannel_TouchScreenConfig>()},
    {::_pbi::TcParser::GetTable<::HU::ChannelDescriptor_InputEventChannel_TouchScreenConfig>()},
  }}, {{
  }},
};

::uint8_t* ChannelDescriptor_InputEventChannel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ChannelDescriptor.InputEventChannel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated uint32 keycodes_supported = 1;
  for (int i = 0, n = this->_internal_keycodes_supported_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_keycodes_supported().Get(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .HU.ChannelDescriptor.InputEventChannel.TouchScreenConfig touch_screen_config = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::touch_screen_config(this),
        _Internal::touch_screen_config(this).GetCachedSize(), target, stream);
  }

  // optional .HU.ChannelDescriptor.InputEventChannel.TouchScreenConfig touch_pad_config = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::touch_pad_config(this),
        _Internal::touch_pad_config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ChannelDescriptor.InputEventChannel)
  return target;
}

::size_t ChannelDescriptor_InputEventChannel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ChannelDescriptor.InputEventChannel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 keycodes_supported = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_keycodes_supported())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_keycodes_supported_size());
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .HU.ChannelDescriptor.InputEventChannel.TouchScreenConfig touch_screen_config = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.touch_screen_config_);
    }

    // optional .HU.ChannelDescriptor.InputEventChannel.TouchScreenConfig touch_pad_config = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.touch_pad_config_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelDescriptor_InputEventChannel::_class_data_ = {
    ChannelDescriptor_InputEventChannel::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChannelDescriptor_InputEventChannel::GetClassData() const {
  return &_class_data_;
}

void ChannelDescriptor_InputEventChannel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelDescriptor_InputEventChannel*>(&to_msg);
  auto& from = static_cast<const ChannelDescriptor_InputEventChannel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ChannelDescriptor.InputEventChannel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_keycodes_supported()->MergeFrom(from._internal_keycodes_supported());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_touch_screen_config()->::HU::ChannelDescriptor_InputEventChannel_TouchScreenConfig::MergeFrom(
          from._internal_touch_screen_config());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_touch_pad_config()->::HU::ChannelDescriptor_InputEventChannel_TouchScreenConfig::MergeFrom(
          from._internal_touch_pad_config());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelDescriptor_InputEventChannel::CopyFrom(const ChannelDescriptor_InputEventChannel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ChannelDescriptor.InputEventChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelDescriptor_InputEventChannel::IsInitialized() const {
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.touch_screen_config_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.touch_pad_config_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* ChannelDescriptor_InputEventChannel::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChannelDescriptor_InputEventChannel::InternalSwap(ChannelDescriptor_InputEventChannel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.keycodes_supported_.InternalSwap(&other->_impl_.keycodes_supported_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel, _impl_.touch_pad_config_)
      + sizeof(ChannelDescriptor_InputEventChannel::_impl_.touch_pad_config_)
      - PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputEventChannel, _impl_.touch_screen_config_)>(
          reinterpret_cast<char*>(&_impl_.touch_screen_config_),
          reinterpret_cast<char*>(&other->_impl_.touch_screen_config_));
}

::google::protobuf::Metadata ChannelDescriptor_InputEventChannel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[37]);
}
// ===================================================================

class ChannelDescriptor_InputStreamChannel::_Internal {
 public:
  using HasBits = decltype(std::declval<ChannelDescriptor_InputStreamChannel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputStreamChannel, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::HU::AudioCofig& audio_config(const ChannelDescriptor_InputStreamChannel* msg);
  static void set_has_audio_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_available_while_in_call(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000005) ^ 0x00000005) != 0;
  }
};

const ::HU::AudioCofig& ChannelDescriptor_InputStreamChannel::_Internal::audio_config(const ChannelDescriptor_InputStreamChannel* msg) {
  return *msg->_impl_.audio_config_;
}
ChannelDescriptor_InputStreamChannel::ChannelDescriptor_InputStreamChannel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ChannelDescriptor.InputStreamChannel)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_InputStreamChannel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ChannelDescriptor_InputStreamChannel::ChannelDescriptor_InputStreamChannel(
    ::google::protobuf::Arena* arena,
    const ChannelDescriptor_InputStreamChannel& from)
    : ::google::protobuf::Message(arena) {
  ChannelDescriptor_InputStreamChannel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.audio_config_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::HU::AudioCofig>(arena, *from._impl_.audio_config_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, available_while_in_call_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, available_while_in_call_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, available_while_in_call_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:HU.ChannelDescriptor.InputStreamChannel)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_InputStreamChannel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        type_{static_cast< ::HU::STREAM_TYPE >(1)} {}

inline void ChannelDescriptor_InputStreamChannel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, audio_config_),
           0,
           offsetof(Impl_, available_while_in_call_) -
               offsetof(Impl_, audio_config_) +
               sizeof(Impl_::available_while_in_call_));
}
ChannelDescriptor_InputStreamChannel::~ChannelDescriptor_InputStreamChannel() {
  // @@protoc_insertion_point(destructor:HU.ChannelDescriptor.InputStreamChannel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelDescriptor_InputStreamChannel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.audio_config_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChannelDescriptor_InputStreamChannel::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ChannelDescriptor.InputStreamChannel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.audio_config_ != nullptr);
    _impl_.audio_config_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    _impl_.available_while_in_call_ = false;
    _impl_.type_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelDescriptor_InputStreamChannel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> ChannelDescriptor_InputStreamChannel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputStreamChannel, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ChannelDescriptor_InputStreamChannel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required .HU.STREAM_TYPE type = 1;
    {::_pbi::TcParser::FastEvS1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputStreamChannel, _impl_.type_)}},
    // required .HU.AudioCofig audio_config = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputStreamChannel, _impl_.audio_config_)}},
    // optional bool available_while_in_call = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ChannelDescriptor_InputStreamChannel, _impl_.available_while_in_call_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputStreamChannel, _impl_.available_while_in_call_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .HU.STREAM_TYPE type = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputStreamChannel, _impl_.type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // required .HU.AudioCofig audio_config = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputStreamChannel, _impl_.audio_config_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool available_while_in_call = 3;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputStreamChannel, _impl_.available_while_in_call_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::HU::STREAM_TYPE_internal_data_},
    {::_pbi::TcParser::GetTable<::HU::AudioCofig>()},
  }}, {{
  }},
};

::uint8_t* ChannelDescriptor_InputStreamChannel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ChannelDescriptor.InputStreamChannel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HU.STREAM_TYPE type = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // required .HU.AudioCofig audio_config = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::audio_config(this),
        _Internal::audio_config(this).GetCachedSize(), target, stream);
  }

  // optional bool available_while_in_call = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_available_while_in_call(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ChannelDescriptor.InputStreamChannel)
  return target;
}

::size_t ChannelDescriptor_InputStreamChannel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ChannelDescriptor.InputStreamChannel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required .HU.AudioCofig audio_config = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.audio_config_);
  }

  // optional bool available_while_in_call = 3;
  if (cached_has_bits & 0x00000002u) {
    total_size += 2;
  }

  // required .HU.STREAM_TYPE type = 1;
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelDescriptor_InputStreamChannel::_class_data_ = {
    ChannelDescriptor_InputStreamChannel::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChannelDescriptor_InputStreamChannel::GetClassData() const {
  return &_class_data_;
}

void ChannelDescriptor_InputStreamChannel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelDescriptor_InputStreamChannel*>(&to_msg);
  auto& from = static_cast<const ChannelDescriptor_InputStreamChannel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ChannelDescriptor.InputStreamChannel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_audio_config()->::HU::AudioCofig::MergeFrom(
          from._internal_audio_config());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.available_while_in_call_ = from._impl_.available_while_in_call_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelDescriptor_InputStreamChannel::CopyFrom(const ChannelDescriptor_InputStreamChannel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ChannelDescriptor.InputStreamChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelDescriptor_InputStreamChannel::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.audio_config_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* ChannelDescriptor_InputStreamChannel::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChannelDescriptor_InputStreamChannel::InternalSwap(ChannelDescriptor_InputStreamChannel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputStreamChannel, _impl_.type_)
      + sizeof(ChannelDescriptor_InputStreamChannel::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(ChannelDescriptor_InputStreamChannel, _impl_.audio_config_)>(
          reinterpret_cast<char*>(&_impl_.audio_config_),
          reinterpret_cast<char*>(&other->_impl_.audio_config_));
}

::google::protobuf::Metadata ChannelDescriptor_InputStreamChannel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[38]);
}
// ===================================================================

class ChannelDescriptor_BluetoothService::_Internal {
 public:
  using HasBits = decltype(std::declval<ChannelDescriptor_BluetoothService>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChannelDescriptor_BluetoothService, _impl_._has_bits_);
  static void set_has_car_address(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ChannelDescriptor_BluetoothService::ChannelDescriptor_BluetoothService(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ChannelDescriptor.BluetoothService)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_BluetoothService::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        supported_pairing_methods_{visibility, arena, from.supported_pairing_methods_},
        car_address_(arena, from.car_address_) {}

ChannelDescriptor_BluetoothService::ChannelDescriptor_BluetoothService(
    ::google::protobuf::Arena* arena,
    const ChannelDescriptor_BluetoothService& from)
    : ::google::protobuf::Message(arena) {
  ChannelDescriptor_BluetoothService* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:HU.ChannelDescriptor.BluetoothService)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_BluetoothService::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        supported_pairing_methods_{visibility, arena},
        car_address_(arena) {}

inline void ChannelDescriptor_BluetoothService::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ChannelDescriptor_BluetoothService::~ChannelDescriptor_BluetoothService() {
  // @@protoc_insertion_point(destructor:HU.ChannelDescriptor.BluetoothService)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelDescriptor_BluetoothService::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.car_address_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChannelDescriptor_BluetoothService::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ChannelDescriptor.BluetoothService)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.supported_pairing_methods_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.car_address_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelDescriptor_BluetoothService::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 57, 2> ChannelDescriptor_BluetoothService::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelDescriptor_BluetoothService, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ChannelDescriptor_BluetoothService_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .HU.BluetoothPairingMethod supported_pairing_methods = 2;
    {::_pbi::TcParser::FastEr1R1,
     {16, 63, 4, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_BluetoothService, _impl_.supported_pairing_methods_)}},
    // required string car_address = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_BluetoothService, _impl_.car_address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string car_address = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_BluetoothService, _impl_.car_address_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .HU.BluetoothPairingMethod supported_pairing_methods = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_BluetoothService, _impl_.supported_pairing_methods_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnumRange)},
  }}, {{
    {1, 4},
  }}, {{
    "\45\13\0\0\0\0\0\0"
    "HU.ChannelDescriptor.BluetoothService"
    "car_address"
  }},
};

::uint8_t* ChannelDescriptor_BluetoothService::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ChannelDescriptor.BluetoothService)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string car_address = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_car_address();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.ChannelDescriptor.BluetoothService.car_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .HU.BluetoothPairingMethod supported_pairing_methods = 2;
  for (int i = 0, n = this->_internal_supported_pairing_methods_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, static_cast<::HU::BluetoothPairingMethod>(this->_internal_supported_pairing_methods().Get(i)),
        target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ChannelDescriptor.BluetoothService)
  return target;
}

::size_t ChannelDescriptor_BluetoothService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ChannelDescriptor.BluetoothService)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HU.BluetoothPairingMethod supported_pairing_methods = 2;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_supported_pairing_methods_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_supported_pairing_methods().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{1} * count;
  }
  // required string car_address = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_car_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelDescriptor_BluetoothService::_class_data_ = {
    ChannelDescriptor_BluetoothService::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChannelDescriptor_BluetoothService::GetClassData() const {
  return &_class_data_;
}

void ChannelDescriptor_BluetoothService::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelDescriptor_BluetoothService*>(&to_msg);
  auto& from = static_cast<const ChannelDescriptor_BluetoothService&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ChannelDescriptor.BluetoothService)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_supported_pairing_methods()->MergeFrom(from._internal_supported_pairing_methods());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_car_address(from._internal_car_address());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelDescriptor_BluetoothService::CopyFrom(const ChannelDescriptor_BluetoothService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ChannelDescriptor.BluetoothService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelDescriptor_BluetoothService::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* ChannelDescriptor_BluetoothService::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChannelDescriptor_BluetoothService::InternalSwap(ChannelDescriptor_BluetoothService* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.supported_pairing_methods_.InternalSwap(&other->_impl_.supported_pairing_methods_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.car_address_, &other->_impl_.car_address_, arena);
}

::google::protobuf::Metadata ChannelDescriptor_BluetoothService::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[39]);
}
// ===================================================================

class ChannelDescriptor_NavigationStatusService_ImageOptions::_Internal {
 public:
  using HasBits = decltype(std::declval<ChannelDescriptor_NavigationStatusService_ImageOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService_ImageOptions, _impl_._has_bits_);
  static void set_has_width(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_height(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_colour_depth_bits(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

ChannelDescriptor_NavigationStatusService_ImageOptions::ChannelDescriptor_NavigationStatusService_ImageOptions(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ChannelDescriptor.NavigationStatusService.ImageOptions)
}
ChannelDescriptor_NavigationStatusService_ImageOptions::ChannelDescriptor_NavigationStatusService_ImageOptions(
    ::google::protobuf::Arena* arena, const ChannelDescriptor_NavigationStatusService_ImageOptions& from)
    : ChannelDescriptor_NavigationStatusService_ImageOptions(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_NavigationStatusService_ImageOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ChannelDescriptor_NavigationStatusService_ImageOptions::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           0,
           offsetof(Impl_, colour_depth_bits_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::colour_depth_bits_));
}
ChannelDescriptor_NavigationStatusService_ImageOptions::~ChannelDescriptor_NavigationStatusService_ImageOptions() {
  // @@protoc_insertion_point(destructor:HU.ChannelDescriptor.NavigationStatusService.ImageOptions)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelDescriptor_NavigationStatusService_ImageOptions::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChannelDescriptor_NavigationStatusService_ImageOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ChannelDescriptor.NavigationStatusService.ImageOptions)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.width_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.colour_depth_bits_) -
        reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.colour_depth_bits_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelDescriptor_NavigationStatusService_ImageOptions::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> ChannelDescriptor_NavigationStatusService_ImageOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService_ImageOptions, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ChannelDescriptor_NavigationStatusService_ImageOptions_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required int32 width = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelDescriptor_NavigationStatusService_ImageOptions, _impl_.width_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService_ImageOptions, _impl_.width_)}},
    // required int32 height = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelDescriptor_NavigationStatusService_ImageOptions, _impl_.height_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService_ImageOptions, _impl_.height_)}},
    // required int32 colour_depth_bits = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelDescriptor_NavigationStatusService_ImageOptions, _impl_.colour_depth_bits_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService_ImageOptions, _impl_.colour_depth_bits_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 width = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService_ImageOptions, _impl_.width_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 height = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService_ImageOptions, _impl_.height_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required int32 colour_depth_bits = 3;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService_ImageOptions, _impl_.colour_depth_bits_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ChannelDescriptor_NavigationStatusService_ImageOptions::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ChannelDescriptor.NavigationStatusService.ImageOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 width = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_width(), target);
  }

  // required int32 height = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_height(), target);
  }

  // required int32 colour_depth_bits = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_colour_depth_bits(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ChannelDescriptor.NavigationStatusService.ImageOptions)
  return target;
}

::size_t ChannelDescriptor_NavigationStatusService_ImageOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ChannelDescriptor.NavigationStatusService.ImageOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // required int32 width = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_width());
    }

    // required int32 height = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_height());
    }

    // required int32 colour_depth_bits = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_colour_depth_bits());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelDescriptor_NavigationStatusService_ImageOptions::_class_data_ = {
    ChannelDescriptor_NavigationStatusService_ImageOptions::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChannelDescriptor_NavigationStatusService_ImageOptions::GetClassData() const {
  return &_class_data_;
}

void ChannelDescriptor_NavigationStatusService_ImageOptions::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelDescriptor_NavigationStatusService_ImageOptions*>(&to_msg);
  auto& from = static_cast<const ChannelDescriptor_NavigationStatusService_ImageOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ChannelDescriptor.NavigationStatusService.ImageOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.width_ = from._impl_.width_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.height_ = from._impl_.height_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.colour_depth_bits_ = from._impl_.colour_depth_bits_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelDescriptor_NavigationStatusService_ImageOptions::CopyFrom(const ChannelDescriptor_NavigationStatusService_ImageOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ChannelDescriptor.NavigationStatusService.ImageOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelDescriptor_NavigationStatusService_ImageOptions::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* ChannelDescriptor_NavigationStatusService_ImageOptions::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChannelDescriptor_NavigationStatusService_ImageOptions::InternalSwap(ChannelDescriptor_NavigationStatusService_ImageOptions* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService_ImageOptions, _impl_.colour_depth_bits_)
      + sizeof(ChannelDescriptor_NavigationStatusService_ImageOptions::_impl_.colour_depth_bits_)
      - PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService_ImageOptions, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::google::protobuf::Metadata ChannelDescriptor_NavigationStatusService_ImageOptions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[40]);
}
// ===================================================================

class ChannelDescriptor_NavigationStatusService::_Internal {
 public:
  using HasBits = decltype(std::declval<ChannelDescriptor_NavigationStatusService>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService, _impl_._has_bits_);
  static void set_has_minimum_interval_ms(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::HU::ChannelDescriptor_NavigationStatusService_ImageOptions& image_options(const ChannelDescriptor_NavigationStatusService* msg);
  static void set_has_image_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000006) ^ 0x00000006) != 0;
  }
};

const ::HU::ChannelDescriptor_NavigationStatusService_ImageOptions& ChannelDescriptor_NavigationStatusService::_Internal::image_options(const ChannelDescriptor_NavigationStatusService* msg) {
  return *msg->_impl_.image_options_;
}
ChannelDescriptor_NavigationStatusService::ChannelDescriptor_NavigationStatusService(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ChannelDescriptor.NavigationStatusService)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_NavigationStatusService::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ChannelDescriptor_NavigationStatusService::ChannelDescriptor_NavigationStatusService(
    ::google::protobuf::Arena* arena,
    const ChannelDescriptor_NavigationStatusService& from)
    : ::google::protobuf::Message(arena) {
  ChannelDescriptor_NavigationStatusService* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.image_options_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::HU::ChannelDescriptor_NavigationStatusService_ImageOptions>(arena, *from._impl_.image_options_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, minimum_interval_ms_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, minimum_interval_ms_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, minimum_interval_ms_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:HU.ChannelDescriptor.NavigationStatusService)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_NavigationStatusService::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        type_{static_cast< ::HU::ChannelDescriptor_NavigationStatusService_CLUSTER_TYPE >(1)} {}

inline void ChannelDescriptor_NavigationStatusService::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, image_options_),
           0,
           offsetof(Impl_, minimum_interval_ms_) -
               offsetof(Impl_, image_options_) +
               sizeof(Impl_::minimum_interval_ms_));
}
ChannelDescriptor_NavigationStatusService::~ChannelDescriptor_NavigationStatusService() {
  // @@protoc_insertion_point(destructor:HU.ChannelDescriptor.NavigationStatusService)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelDescriptor_NavigationStatusService::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.image_options_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChannelDescriptor_NavigationStatusService::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ChannelDescriptor.NavigationStatusService)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.image_options_ != nullptr);
    _impl_.image_options_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    _impl_.minimum_interval_ms_ = 0u;
    _impl_.type_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelDescriptor_NavigationStatusService::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> ChannelDescriptor_NavigationStatusService::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ChannelDescriptor_NavigationStatusService_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required uint32 minimum_interval_ms = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelDescriptor_NavigationStatusService, _impl_.minimum_interval_ms_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService, _impl_.minimum_interval_ms_)}},
    // required .HU.ChannelDescriptor.NavigationStatusService.CLUSTER_TYPE type = 2;
    {::_pbi::TcParser::FastEr1S1,
     {16, 2, 2, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService, _impl_.type_)}},
    // optional .HU.ChannelDescriptor.NavigationStatusService.ImageOptions image_options = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService, _impl_.image_options_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required uint32 minimum_interval_ms = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService, _impl_.minimum_interval_ms_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // required .HU.ChannelDescriptor.NavigationStatusService.CLUSTER_TYPE type = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService, _impl_.type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .HU.ChannelDescriptor.NavigationStatusService.ImageOptions image_options = 3;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService, _impl_.image_options_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {1, 2},
    {::_pbi::TcParser::GetTable<::HU::ChannelDescriptor_NavigationStatusService_ImageOptions>()},
  }}, {{
  }},
};

::uint8_t* ChannelDescriptor_NavigationStatusService::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ChannelDescriptor.NavigationStatusService)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required uint32 minimum_interval_ms = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_minimum_interval_ms(), target);
  }

  // required .HU.ChannelDescriptor.NavigationStatusService.CLUSTER_TYPE type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  // optional .HU.ChannelDescriptor.NavigationStatusService.ImageOptions image_options = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::image_options(this),
        _Internal::image_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ChannelDescriptor.NavigationStatusService)
  return target;
}

::size_t ChannelDescriptor_NavigationStatusService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ChannelDescriptor.NavigationStatusService)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .HU.ChannelDescriptor.NavigationStatusService.ImageOptions image_options = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.image_options_);
  }

  if (cached_has_bits & 0x00000006u) {
    // required uint32 minimum_interval_ms = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_minimum_interval_ms());
    }

    // required .HU.ChannelDescriptor.NavigationStatusService.CLUSTER_TYPE type = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelDescriptor_NavigationStatusService::_class_data_ = {
    ChannelDescriptor_NavigationStatusService::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChannelDescriptor_NavigationStatusService::GetClassData() const {
  return &_class_data_;
}

void ChannelDescriptor_NavigationStatusService::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelDescriptor_NavigationStatusService*>(&to_msg);
  auto& from = static_cast<const ChannelDescriptor_NavigationStatusService&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ChannelDescriptor.NavigationStatusService)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_image_options()->::HU::ChannelDescriptor_NavigationStatusService_ImageOptions::MergeFrom(
          from._internal_image_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.minimum_interval_ms_ = from._impl_.minimum_interval_ms_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelDescriptor_NavigationStatusService::CopyFrom(const ChannelDescriptor_NavigationStatusService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ChannelDescriptor.NavigationStatusService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelDescriptor_NavigationStatusService::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!_impl_.image_options_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* ChannelDescriptor_NavigationStatusService::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChannelDescriptor_NavigationStatusService::InternalSwap(ChannelDescriptor_NavigationStatusService* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService, _impl_.type_)
      + sizeof(ChannelDescriptor_NavigationStatusService::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(ChannelDescriptor_NavigationStatusService, _impl_.image_options_)>(
          reinterpret_cast<char*>(&_impl_.image_options_),
          reinterpret_cast<char*>(&other->_impl_.image_options_));
}

::google::protobuf::Metadata ChannelDescriptor_NavigationStatusService::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[41]);
}
// ===================================================================

class ChannelDescriptor_PhoneStatusService::_Internal {
 public:
};

ChannelDescriptor_PhoneStatusService::ChannelDescriptor_PhoneStatusService(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:HU.ChannelDescriptor.PhoneStatusService)
}
ChannelDescriptor_PhoneStatusService::ChannelDescriptor_PhoneStatusService(
    ::google::protobuf::Arena* arena,
    const ChannelDescriptor_PhoneStatusService& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ChannelDescriptor_PhoneStatusService* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:HU.ChannelDescriptor.PhoneStatusService)
}









::google::protobuf::Metadata ChannelDescriptor_PhoneStatusService::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[42]);
}
// ===================================================================

class ChannelDescriptor_VendorExtensionService::_Internal {
 public:
  using HasBits = decltype(std::declval<ChannelDescriptor_VendorExtensionService>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChannelDescriptor_VendorExtensionService, _impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ChannelDescriptor_VendorExtensionService::ChannelDescriptor_VendorExtensionService(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ChannelDescriptor.VendorExtensionService)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_VendorExtensionService::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        package_white_list_{visibility, arena, from.package_white_list_},
        name_(arena, from.name_),
        data_(arena, from.data_) {}

ChannelDescriptor_VendorExtensionService::ChannelDescriptor_VendorExtensionService(
    ::google::protobuf::Arena* arena,
    const ChannelDescriptor_VendorExtensionService& from)
    : ::google::protobuf::Message(arena) {
  ChannelDescriptor_VendorExtensionService* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:HU.ChannelDescriptor.VendorExtensionService)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_VendorExtensionService::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        package_white_list_{visibility, arena},
        name_(arena),
        data_(arena) {}

inline void ChannelDescriptor_VendorExtensionService::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ChannelDescriptor_VendorExtensionService::~ChannelDescriptor_VendorExtensionService() {
  // @@protoc_insertion_point(destructor:HU.ChannelDescriptor.VendorExtensionService)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelDescriptor_VendorExtensionService::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChannelDescriptor_VendorExtensionService::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ChannelDescriptor.VendorExtensionService)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.package_white_list_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.data_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelDescriptor_VendorExtensionService::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 74, 2> ChannelDescriptor_VendorExtensionService::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelDescriptor_VendorExtensionService, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ChannelDescriptor_VendorExtensionService_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_VendorExtensionService, _impl_.name_)}},
    // repeated string package_white_list = 2;
    {::_pbi::TcParser::FastSR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_VendorExtensionService, _impl_.package_white_list_)}},
    // optional bytes data = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_VendorExtensionService, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_VendorExtensionService, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated string package_white_list = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_VendorExtensionService, _impl_.package_white_list_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
    // optional bytes data = 3;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_VendorExtensionService, _impl_.data_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\4\22\0\0\0\0\0"
    "HU.ChannelDescriptor.VendorExtensionService"
    "name"
    "package_white_list"
  }},
};

::uint8_t* ChannelDescriptor_VendorExtensionService::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ChannelDescriptor.VendorExtensionService)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.ChannelDescriptor.VendorExtensionService.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string package_white_list = 2;
  for (int i = 0, n = this->_internal_package_white_list_size(); i < n; ++i) {
    const auto& s = this->_internal_package_white_list().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.ChannelDescriptor.VendorExtensionService.package_white_list");
    target = stream->WriteString(2, s, target);
  }

  // optional bytes data = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ChannelDescriptor.VendorExtensionService)
  return target;
}

::size_t ChannelDescriptor_VendorExtensionService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ChannelDescriptor.VendorExtensionService)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string package_white_list = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_package_white_list().size());
  for (int i = 0, n = _internal_package_white_list().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_package_white_list().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional bytes data = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_data());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelDescriptor_VendorExtensionService::_class_data_ = {
    ChannelDescriptor_VendorExtensionService::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChannelDescriptor_VendorExtensionService::GetClassData() const {
  return &_class_data_;
}

void ChannelDescriptor_VendorExtensionService::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelDescriptor_VendorExtensionService*>(&to_msg);
  auto& from = static_cast<const ChannelDescriptor_VendorExtensionService&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ChannelDescriptor.VendorExtensionService)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_package_white_list()->MergeFrom(from._internal_package_white_list());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_data(from._internal_data());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelDescriptor_VendorExtensionService::CopyFrom(const ChannelDescriptor_VendorExtensionService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ChannelDescriptor.VendorExtensionService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelDescriptor_VendorExtensionService::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ChannelDescriptor_VendorExtensionService::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChannelDescriptor_VendorExtensionService::InternalSwap(ChannelDescriptor_VendorExtensionService* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.package_white_list_.InternalSwap(&other->_impl_.package_white_list_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata ChannelDescriptor_VendorExtensionService::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[43]);
}
// ===================================================================

class ChannelDescriptor_GenericNotificationService::_Internal {
 public:
  using HasBits = decltype(std::declval<ChannelDescriptor_GenericNotificationService>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChannelDescriptor_GenericNotificationService, _impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ChannelDescriptor_GenericNotificationService::ChannelDescriptor_GenericNotificationService(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ChannelDescriptor.GenericNotificationService)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_GenericNotificationService::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

ChannelDescriptor_GenericNotificationService::ChannelDescriptor_GenericNotificationService(
    ::google::protobuf::Arena* arena,
    const ChannelDescriptor_GenericNotificationService& from)
    : ::google::protobuf::Message(arena) {
  ChannelDescriptor_GenericNotificationService* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:HU.ChannelDescriptor.GenericNotificationService)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor_GenericNotificationService::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void ChannelDescriptor_GenericNotificationService::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ChannelDescriptor_GenericNotificationService::~ChannelDescriptor_GenericNotificationService() {
  // @@protoc_insertion_point(destructor:HU.ChannelDescriptor.GenericNotificationService)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelDescriptor_GenericNotificationService::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChannelDescriptor_GenericNotificationService::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ChannelDescriptor.GenericNotificationService)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelDescriptor_GenericNotificationService::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 60, 2> ChannelDescriptor_GenericNotificationService::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelDescriptor_GenericNotificationService, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ChannelDescriptor_GenericNotificationService_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor_GenericNotificationService, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor_GenericNotificationService, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\4\0\0\0\0\0\0"
    "HU.ChannelDescriptor.GenericNotificationService"
    "name"
  }},
};

::uint8_t* ChannelDescriptor_GenericNotificationService::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ChannelDescriptor.GenericNotificationService)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.ChannelDescriptor.GenericNotificationService.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ChannelDescriptor.GenericNotificationService)
  return target;
}

::size_t ChannelDescriptor_GenericNotificationService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ChannelDescriptor.GenericNotificationService)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string name = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelDescriptor_GenericNotificationService::_class_data_ = {
    ChannelDescriptor_GenericNotificationService::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChannelDescriptor_GenericNotificationService::GetClassData() const {
  return &_class_data_;
}

void ChannelDescriptor_GenericNotificationService::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelDescriptor_GenericNotificationService*>(&to_msg);
  auto& from = static_cast<const ChannelDescriptor_GenericNotificationService&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ChannelDescriptor.GenericNotificationService)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelDescriptor_GenericNotificationService::CopyFrom(const ChannelDescriptor_GenericNotificationService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ChannelDescriptor.GenericNotificationService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelDescriptor_GenericNotificationService::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ChannelDescriptor_GenericNotificationService::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChannelDescriptor_GenericNotificationService::InternalSwap(ChannelDescriptor_GenericNotificationService* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata ChannelDescriptor_GenericNotificationService::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[44]);
}
// ===================================================================

class ChannelDescriptor::_Internal {
 public:
  using HasBits = decltype(std::declval<ChannelDescriptor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_._has_bits_);
  static void set_has_channel_id(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::HU::ChannelDescriptor_SensorChannel& sensor_channel(const ChannelDescriptor* msg);
  static void set_has_sensor_channel(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HU::ChannelDescriptor_OutputStreamChannel& output_stream_channel(const ChannelDescriptor* msg);
  static void set_has_output_stream_channel(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::HU::ChannelDescriptor_InputEventChannel& input_event_channel(const ChannelDescriptor* msg);
  static void set_has_input_event_channel(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::HU::ChannelDescriptor_InputStreamChannel& input_stream_channel(const ChannelDescriptor* msg);
  static void set_has_input_stream_channel(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::HU::ChannelDescriptor_BluetoothService& bluetooth_service(const ChannelDescriptor* msg);
  static void set_has_bluetooth_service(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::HU::ChannelDescriptor_NavigationStatusService& navigation_status_service(const ChannelDescriptor* msg);
  static void set_has_navigation_status_service(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::HU::ChannelDescriptor_PhoneStatusService& phone_status_service(const ChannelDescriptor* msg);
  static void set_has_phone_status_service(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::HU::ChannelDescriptor_VendorExtensionService& vendor_extension_service(const ChannelDescriptor* msg);
  static void set_has_vendor_extension_service(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::HU::ChannelDescriptor_GenericNotificationService& generic_notification_service(const ChannelDescriptor* msg);
  static void set_has_generic_notification_service(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000200) ^ 0x00000200) != 0;
  }
};

const ::HU::ChannelDescriptor_SensorChannel& ChannelDescriptor::_Internal::sensor_channel(const ChannelDescriptor* msg) {
  return *msg->_impl_.sensor_channel_;
}
const ::HU::ChannelDescriptor_OutputStreamChannel& ChannelDescriptor::_Internal::output_stream_channel(const ChannelDescriptor* msg) {
  return *msg->_impl_.output_stream_channel_;
}
const ::HU::ChannelDescriptor_InputEventChannel& ChannelDescriptor::_Internal::input_event_channel(const ChannelDescriptor* msg) {
  return *msg->_impl_.input_event_channel_;
}
const ::HU::ChannelDescriptor_InputStreamChannel& ChannelDescriptor::_Internal::input_stream_channel(const ChannelDescriptor* msg) {
  return *msg->_impl_.input_stream_channel_;
}
const ::HU::ChannelDescriptor_BluetoothService& ChannelDescriptor::_Internal::bluetooth_service(const ChannelDescriptor* msg) {
  return *msg->_impl_.bluetooth_service_;
}
const ::HU::ChannelDescriptor_NavigationStatusService& ChannelDescriptor::_Internal::navigation_status_service(const ChannelDescriptor* msg) {
  return *msg->_impl_.navigation_status_service_;
}
const ::HU::ChannelDescriptor_PhoneStatusService& ChannelDescriptor::_Internal::phone_status_service(const ChannelDescriptor* msg) {
  return *msg->_impl_.phone_status_service_;
}
const ::HU::ChannelDescriptor_VendorExtensionService& ChannelDescriptor::_Internal::vendor_extension_service(const ChannelDescriptor* msg) {
  return *msg->_impl_.vendor_extension_service_;
}
const ::HU::ChannelDescriptor_GenericNotificationService& ChannelDescriptor::_Internal::generic_notification_service(const ChannelDescriptor* msg) {
  return *msg->_impl_.generic_notification_service_;
}
ChannelDescriptor::ChannelDescriptor(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ChannelDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ChannelDescriptor::ChannelDescriptor(
    ::google::protobuf::Arena* arena,
    const ChannelDescriptor& from)
    : ::google::protobuf::Message(arena) {
  ChannelDescriptor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.sensor_channel_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::HU::ChannelDescriptor_SensorChannel>(arena, *from._impl_.sensor_channel_)
                : nullptr;
  _impl_.output_stream_channel_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::HU::ChannelDescriptor_OutputStreamChannel>(arena, *from._impl_.output_stream_channel_)
                : nullptr;
  _impl_.input_event_channel_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::HU::ChannelDescriptor_InputEventChannel>(arena, *from._impl_.input_event_channel_)
                : nullptr;
  _impl_.input_stream_channel_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::HU::ChannelDescriptor_InputStreamChannel>(arena, *from._impl_.input_stream_channel_)
                : nullptr;
  _impl_.bluetooth_service_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::HU::ChannelDescriptor_BluetoothService>(arena, *from._impl_.bluetooth_service_)
                : nullptr;
  _impl_.navigation_status_service_ = (cached_has_bits & 0x00000020u)
                ? CreateMaybeMessage<::HU::ChannelDescriptor_NavigationStatusService>(arena, *from._impl_.navigation_status_service_)
                : nullptr;
  _impl_.phone_status_service_ = (cached_has_bits & 0x00000040u)
                ? CreateMaybeMessage<::HU::ChannelDescriptor_PhoneStatusService>(arena, *from._impl_.phone_status_service_)
                : nullptr;
  _impl_.vendor_extension_service_ = (cached_has_bits & 0x00000080u)
                ? CreateMaybeMessage<::HU::ChannelDescriptor_VendorExtensionService>(arena, *from._impl_.vendor_extension_service_)
                : nullptr;
  _impl_.generic_notification_service_ = (cached_has_bits & 0x00000100u)
                ? CreateMaybeMessage<::HU::ChannelDescriptor_GenericNotificationService>(arena, *from._impl_.generic_notification_service_)
                : nullptr;
  _impl_.channel_id_ = from._impl_.channel_id_;

  // @@protoc_insertion_point(copy_constructor:HU.ChannelDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE ChannelDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ChannelDescriptor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sensor_channel_),
           0,
           offsetof(Impl_, channel_id_) -
               offsetof(Impl_, sensor_channel_) +
               sizeof(Impl_::channel_id_));
}
ChannelDescriptor::~ChannelDescriptor() {
  // @@protoc_insertion_point(destructor:HU.ChannelDescriptor)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.sensor_channel_;
  delete _impl_.output_stream_channel_;
  delete _impl_.input_event_channel_;
  delete _impl_.input_stream_channel_;
  delete _impl_.bluetooth_service_;
  delete _impl_.navigation_status_service_;
  delete _impl_.phone_status_service_;
  delete _impl_.vendor_extension_service_;
  delete _impl_.generic_notification_service_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChannelDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ChannelDescriptor)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.sensor_channel_ != nullptr);
      _impl_.sensor_channel_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.output_stream_channel_ != nullptr);
      _impl_.output_stream_channel_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.input_event_channel_ != nullptr);
      _impl_.input_event_channel_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.input_stream_channel_ != nullptr);
      _impl_.input_stream_channel_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.bluetooth_service_ != nullptr);
      _impl_.bluetooth_service_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.navigation_status_service_ != nullptr);
      _impl_.navigation_status_service_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.phone_status_service_ != nullptr);
      _impl_.phone_status_service_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.vendor_extension_service_ != nullptr);
      _impl_.vendor_extension_service_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    ABSL_DCHECK(_impl_.generic_notification_service_ != nullptr);
    _impl_.generic_notification_service_->Clear();
  }
  _impl_.channel_id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelDescriptor::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 9, 0, 2> ChannelDescriptor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294960448,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ChannelDescriptor_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required uint32 channel_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelDescriptor, _impl_.channel_id_), 9>(),
     {8, 9, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.channel_id_)}},
    // optional .HU.ChannelDescriptor.SensorChannel sensor_channel = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.sensor_channel_)}},
    // optional .HU.ChannelDescriptor.OutputStreamChannel output_stream_channel = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.output_stream_channel_)}},
    // optional .HU.ChannelDescriptor.InputEventChannel input_event_channel = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.input_event_channel_)}},
    // optional .HU.ChannelDescriptor.InputStreamChannel input_stream_channel = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 3, PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.input_stream_channel_)}},
    // optional .HU.ChannelDescriptor.BluetoothService bluetooth_service = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 4, 4, PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.bluetooth_service_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .HU.ChannelDescriptor.NavigationStatusService navigation_status_service = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 5, 5, PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.navigation_status_service_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .HU.ChannelDescriptor.PhoneStatusService phone_status_service = 10;
    {::_pbi::TcParser::FastMdS1,
     {82, 6, 6, PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.phone_status_service_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .HU.ChannelDescriptor.VendorExtensionService vendor_extension_service = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 7, 7, PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.vendor_extension_service_)}},
    // optional .HU.ChannelDescriptor.GenericNotificationService generic_notification_service = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 8, 8, PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.generic_notification_service_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required uint32 channel_id = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.channel_id_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .HU.ChannelDescriptor.SensorChannel sensor_channel = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.sensor_channel_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .HU.ChannelDescriptor.OutputStreamChannel output_stream_channel = 3;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.output_stream_channel_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .HU.ChannelDescriptor.InputEventChannel input_event_channel = 4;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.input_event_channel_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .HU.ChannelDescriptor.InputStreamChannel input_stream_channel = 5;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.input_stream_channel_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .HU.ChannelDescriptor.BluetoothService bluetooth_service = 6;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.bluetooth_service_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .HU.ChannelDescriptor.NavigationStatusService navigation_status_service = 8;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.navigation_status_service_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .HU.ChannelDescriptor.PhoneStatusService phone_status_service = 10;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.phone_status_service_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvDefault)},
    // optional .HU.ChannelDescriptor.VendorExtensionService vendor_extension_service = 12;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.vendor_extension_service_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .HU.ChannelDescriptor.GenericNotificationService generic_notification_service = 13;
    {PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.generic_notification_service_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::HU::ChannelDescriptor_SensorChannel>()},
    {::_pbi::TcParser::GetTable<::HU::ChannelDescriptor_OutputStreamChannel>()},
    {::_pbi::TcParser::GetTable<::HU::ChannelDescriptor_InputEventChannel>()},
    {::_pbi::TcParser::GetTable<::HU::ChannelDescriptor_InputStreamChannel>()},
    {::_pbi::TcParser::GetTable<::HU::ChannelDescriptor_BluetoothService>()},
    {::_pbi::TcParser::GetTable<::HU::ChannelDescriptor_NavigationStatusService>()},
    {::_pbi::FieldAuxDefaultMessage{}, &::HU::_ChannelDescriptor_PhoneStatusService_default_instance_},
    {::_pbi::TcParser::GetTable<::HU::ChannelDescriptor_VendorExtensionService>()},
    {::_pbi::TcParser::GetTable<::HU::ChannelDescriptor_GenericNotificationService>()},
  }}, {{
  }},
};

::uint8_t* ChannelDescriptor::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ChannelDescriptor)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required uint32 channel_id = 1;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_channel_id(), target);
  }

  // optional .HU.ChannelDescriptor.SensorChannel sensor_channel = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::sensor_channel(this),
        _Internal::sensor_channel(this).GetCachedSize(), target, stream);
  }

  // optional .HU.ChannelDescriptor.OutputStreamChannel output_stream_channel = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::output_stream_channel(this),
        _Internal::output_stream_channel(this).GetCachedSize(), target, stream);
  }

  // optional .HU.ChannelDescriptor.InputEventChannel input_event_channel = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::input_event_channel(this),
        _Internal::input_event_channel(this).GetCachedSize(), target, stream);
  }

  // optional .HU.ChannelDescriptor.InputStreamChannel input_stream_channel = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::input_stream_channel(this),
        _Internal::input_stream_channel(this).GetCachedSize(), target, stream);
  }

  // optional .HU.ChannelDescriptor.BluetoothService bluetooth_service = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::bluetooth_service(this),
        _Internal::bluetooth_service(this).GetCachedSize(), target, stream);
  }

  // optional .HU.ChannelDescriptor.NavigationStatusService navigation_status_service = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, _Internal::navigation_status_service(this),
        _Internal::navigation_status_service(this).GetCachedSize(), target, stream);
  }

  // optional .HU.ChannelDescriptor.PhoneStatusService phone_status_service = 10;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, _Internal::phone_status_service(this),
        _Internal::phone_status_service(this).GetCachedSize(), target, stream);
  }

  // optional .HU.ChannelDescriptor.VendorExtensionService vendor_extension_service = 12;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, _Internal::vendor_extension_service(this),
        _Internal::vendor_extension_service(this).GetCachedSize(), target, stream);
  }

  // optional .HU.ChannelDescriptor.GenericNotificationService generic_notification_service = 13;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, _Internal::generic_notification_service(this),
        _Internal::generic_notification_service(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ChannelDescriptor)
  return target;
}

::size_t ChannelDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ChannelDescriptor)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .HU.ChannelDescriptor.SensorChannel sensor_channel = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.sensor_channel_);
    }

    // optional .HU.ChannelDescriptor.OutputStreamChannel output_stream_channel = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.output_stream_channel_);
    }

    // optional .HU.ChannelDescriptor.InputEventChannel input_event_channel = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.input_event_channel_);
    }

    // optional .HU.ChannelDescriptor.InputStreamChannel input_stream_channel = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.input_stream_channel_);
    }

    // optional .HU.ChannelDescriptor.BluetoothService bluetooth_service = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.bluetooth_service_);
    }

    // optional .HU.ChannelDescriptor.NavigationStatusService navigation_status_service = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.navigation_status_service_);
    }

    // optional .HU.ChannelDescriptor.PhoneStatusService phone_status_service = 10;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.phone_status_service_);
    }

    // optional .HU.ChannelDescriptor.VendorExtensionService vendor_extension_service = 12;
    if (cached_has_bits & 0x00000080u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.vendor_extension_service_);
    }

  }
  // optional .HU.ChannelDescriptor.GenericNotificationService generic_notification_service = 13;
  if (cached_has_bits & 0x00000100u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.generic_notification_service_);
  }

  // required uint32 channel_id = 1;
  if (cached_has_bits & 0x00000200u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_channel_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelDescriptor::_class_data_ = {
    ChannelDescriptor::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChannelDescriptor::GetClassData() const {
  return &_class_data_;
}

void ChannelDescriptor::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelDescriptor*>(&to_msg);
  auto& from = static_cast<const ChannelDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ChannelDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_sensor_channel()->::HU::ChannelDescriptor_SensorChannel::MergeFrom(
          from._internal_sensor_channel());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_output_stream_channel()->::HU::ChannelDescriptor_OutputStreamChannel::MergeFrom(
          from._internal_output_stream_channel());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_input_event_channel()->::HU::ChannelDescriptor_InputEventChannel::MergeFrom(
          from._internal_input_event_channel());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_input_stream_channel()->::HU::ChannelDescriptor_InputStreamChannel::MergeFrom(
          from._internal_input_stream_channel());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_bluetooth_service()->::HU::ChannelDescriptor_BluetoothService::MergeFrom(
          from._internal_bluetooth_service());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_navigation_status_service()->::HU::ChannelDescriptor_NavigationStatusService::MergeFrom(
          from._internal_navigation_status_service());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_phone_status_service()->::HU::ChannelDescriptor_PhoneStatusService::MergeFrom(
          from._internal_phone_status_service());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_vendor_extension_service()->::HU::ChannelDescriptor_VendorExtensionService::MergeFrom(
          from._internal_vendor_extension_service());
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_generic_notification_service()->::HU::ChannelDescriptor_GenericNotificationService::MergeFrom(
          from._internal_generic_notification_service());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.channel_id_ = from._impl_.channel_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelDescriptor::CopyFrom(const ChannelDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ChannelDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelDescriptor::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!_impl_.output_stream_channel_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!_impl_.input_event_channel_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!_impl_.input_stream_channel_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!_impl_.bluetooth_service_->IsInitialized()) return false;
  }
  if ((_impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (!_impl_.navigation_status_service_->IsInitialized()) return false;
  }
  return true;
}

::_pbi::CachedSize* ChannelDescriptor::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChannelDescriptor::InternalSwap(ChannelDescriptor* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.channel_id_)
      + sizeof(ChannelDescriptor::_impl_.channel_id_)
      - PROTOBUF_FIELD_OFFSET(ChannelDescriptor, _impl_.sensor_channel_)>(
          reinterpret_cast<char*>(&_impl_.sensor_channel_),
          reinterpret_cast<char*>(&other->_impl_.sensor_channel_));
}

::google::protobuf::Metadata ChannelDescriptor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[45]);
}
// ===================================================================

class ServiceDiscoveryRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ServiceDiscoveryRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ServiceDiscoveryRequest, _impl_._has_bits_);
  static void set_has_phone_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ServiceDiscoveryRequest::ServiceDiscoveryRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ServiceDiscoveryRequest)
}
inline PROTOBUF_NDEBUG_INLINE ServiceDiscoveryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        phone_name_(arena, from.phone_name_) {}

ServiceDiscoveryRequest::ServiceDiscoveryRequest(
    ::google::protobuf::Arena* arena,
    const ServiceDiscoveryRequest& from)
    : ::google::protobuf::Message(arena) {
  ServiceDiscoveryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:HU.ServiceDiscoveryRequest)
}
inline PROTOBUF_NDEBUG_INLINE ServiceDiscoveryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        phone_name_(arena) {}

inline void ServiceDiscoveryRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ServiceDiscoveryRequest::~ServiceDiscoveryRequest() {
  // @@protoc_insertion_point(destructor:HU.ServiceDiscoveryRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ServiceDiscoveryRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.phone_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ServiceDiscoveryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ServiceDiscoveryRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.phone_name_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ServiceDiscoveryRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 45, 2> ServiceDiscoveryRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ServiceDiscoveryRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967287,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ServiceDiscoveryRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string phone_name = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(ServiceDiscoveryRequest, _impl_.phone_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string phone_name = 4;
    {PROTOBUF_FIELD_OFFSET(ServiceDiscoveryRequest, _impl_.phone_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\12\0\0\0\0\0\0"
    "HU.ServiceDiscoveryRequest"
    "phone_name"
  }},
};

::uint8_t* ServiceDiscoveryRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ServiceDiscoveryRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string phone_name = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_phone_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.ServiceDiscoveryRequest.phone_name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ServiceDiscoveryRequest)
  return target;
}

::size_t ServiceDiscoveryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ServiceDiscoveryRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string phone_name = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_phone_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ServiceDiscoveryRequest::_class_data_ = {
    ServiceDiscoveryRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ServiceDiscoveryRequest::GetClassData() const {
  return &_class_data_;
}

void ServiceDiscoveryRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ServiceDiscoveryRequest*>(&to_msg);
  auto& from = static_cast<const ServiceDiscoveryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ServiceDiscoveryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_phone_name(from._internal_phone_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServiceDiscoveryRequest::CopyFrom(const ServiceDiscoveryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ServiceDiscoveryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ServiceDiscoveryRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ServiceDiscoveryRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ServiceDiscoveryRequest::InternalSwap(ServiceDiscoveryRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.phone_name_, &other->_impl_.phone_name_, arena);
}

::google::protobuf::Metadata ServiceDiscoveryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[46]);
}
// ===================================================================

class ServiceDiscoveryResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ServiceDiscoveryResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_._has_bits_);
  static void set_has_head_unit_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_car_model(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_car_year(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_car_serial(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_driver_pos(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_headunit_make(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_headunit_model(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_sw_build(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_sw_version(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_can_play_native_media_during_vr(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_hide_clock(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x000007ff) ^ 0x000007ff) != 0;
  }
};

ServiceDiscoveryResponse::ServiceDiscoveryResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ServiceDiscoveryResponse)
}
inline PROTOBUF_NDEBUG_INLINE ServiceDiscoveryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        channels_{visibility, arena, from.channels_},
        head_unit_name_(arena, from.head_unit_name_),
        car_model_(arena, from.car_model_),
        car_year_(arena, from.car_year_),
        car_serial_(arena, from.car_serial_),
        headunit_make_(arena, from.headunit_make_),
        headunit_model_(arena, from.headunit_model_),
        sw_build_(arena, from.sw_build_),
        sw_version_(arena, from.sw_version_) {}

ServiceDiscoveryResponse::ServiceDiscoveryResponse(
    ::google::protobuf::Arena* arena,
    const ServiceDiscoveryResponse& from)
    : ::google::protobuf::Message(arena) {
  ServiceDiscoveryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, driver_pos_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, driver_pos_),
           offsetof(Impl_, hide_clock_) -
               offsetof(Impl_, driver_pos_) +
               sizeof(Impl_::hide_clock_));

  // @@protoc_insertion_point(copy_constructor:HU.ServiceDiscoveryResponse)
}
inline PROTOBUF_NDEBUG_INLINE ServiceDiscoveryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        channels_{visibility, arena},
        head_unit_name_(arena),
        car_model_(arena),
        car_year_(arena),
        car_serial_(arena),
        headunit_make_(arena),
        headunit_model_(arena),
        sw_build_(arena),
        sw_version_(arena) {}

inline void ServiceDiscoveryResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, driver_pos_),
           0,
           offsetof(Impl_, hide_clock_) -
               offsetof(Impl_, driver_pos_) +
               sizeof(Impl_::hide_clock_));
}
ServiceDiscoveryResponse::~ServiceDiscoveryResponse() {
  // @@protoc_insertion_point(destructor:HU.ServiceDiscoveryResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ServiceDiscoveryResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.head_unit_name_.Destroy();
  _impl_.car_model_.Destroy();
  _impl_.car_year_.Destroy();
  _impl_.car_serial_.Destroy();
  _impl_.headunit_make_.Destroy();
  _impl_.headunit_model_.Destroy();
  _impl_.sw_build_.Destroy();
  _impl_.sw_version_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ServiceDiscoveryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ServiceDiscoveryResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channels_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.head_unit_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.car_model_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.car_year_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.car_serial_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.headunit_make_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.headunit_model_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.sw_build_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000080u) {
      _impl_.sw_version_.ClearNonDefaultToEmpty();
    }
  }
  ::memset(&_impl_.driver_pos_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.hide_clock_) -
      reinterpret_cast<char*>(&_impl_.driver_pos_)) + sizeof(_impl_.hide_clock_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ServiceDiscoveryResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 1, 130, 2> ServiceDiscoveryResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ServiceDiscoveryResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .HU.ChannelDescriptor channels = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.channels_)}},
    // required string head_unit_name = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.head_unit_name_)}},
    // required string car_model = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.car_model_)}},
    // required string car_year = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.car_year_)}},
    // required string car_serial = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.car_serial_)}},
    // required bool driver_pos = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ServiceDiscoveryResponse, _impl_.driver_pos_), 8>(),
     {48, 8, 0, PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.driver_pos_)}},
    // required string headunit_make = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 4, 0, PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.headunit_make_)}},
    // required string headunit_model = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 5, 0, PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.headunit_model_)}},
    // required string sw_build = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 6, 0, PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.sw_build_)}},
    // required string sw_version = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 7, 0, PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.sw_version_)}},
    // required bool can_play_native_media_during_vr = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ServiceDiscoveryResponse, _impl_.can_play_native_media_during_vr_), 9>(),
     {88, 9, 0, PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.can_play_native_media_during_vr_)}},
    // required bool hide_clock = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ServiceDiscoveryResponse, _impl_.hide_clock_), 10>(),
     {96, 10, 0, PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.hide_clock_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .HU.ChannelDescriptor channels = 1;
    {PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.channels_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // required string head_unit_name = 2;
    {PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.head_unit_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string car_model = 3;
    {PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.car_model_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string car_year = 4;
    {PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.car_year_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string car_serial = 5;
    {PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.car_serial_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required bool driver_pos = 6;
    {PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.driver_pos_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required string headunit_make = 7;
    {PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.headunit_make_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string headunit_model = 8;
    {PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.headunit_model_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string sw_build = 9;
    {PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.sw_build_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string sw_version = 10;
    {PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.sw_version_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required bool can_play_native_media_during_vr = 11;
    {PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.can_play_native_media_during_vr_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // required bool hide_clock = 12;
    {PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.hide_clock_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::HU::ChannelDescriptor>()},
  }}, {{
    "\33\0\16\11\10\12\0\15\16\10\12\0\0\0\0\0"
    "HU.ServiceDiscoveryResponse"
    "head_unit_name"
    "car_model"
    "car_year"
    "car_serial"
    "headunit_make"
    "headunit_model"
    "sw_build"
    "sw_version"
  }},
};

::uint8_t* ServiceDiscoveryResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ServiceDiscoveryResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .HU.ChannelDescriptor channels = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_channels_size()); i < n; i++) {
    const auto& repfield = this->_internal_channels().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // required string head_unit_name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_head_unit_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.ServiceDiscoveryResponse.head_unit_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // required string car_model = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_car_model();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.ServiceDiscoveryResponse.car_model");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // required string car_year = 4;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_car_year();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.ServiceDiscoveryResponse.car_year");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // required string car_serial = 5;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_car_serial();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.ServiceDiscoveryResponse.car_serial");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // required bool driver_pos = 6;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_driver_pos(), target);
  }

  // required string headunit_make = 7;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_headunit_make();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.ServiceDiscoveryResponse.headunit_make");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // required string headunit_model = 8;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_headunit_model();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.ServiceDiscoveryResponse.headunit_model");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // required string sw_build = 9;
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_sw_build();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.ServiceDiscoveryResponse.sw_build");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // required string sw_version = 10;
  if (cached_has_bits & 0x00000080u) {
    const std::string& _s = this->_internal_sw_version();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.ServiceDiscoveryResponse.sw_version");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // required bool can_play_native_media_during_vr = 11;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        11, this->_internal_can_play_native_media_during_vr(), target);
  }

  // required bool hide_clock = 12;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        12, this->_internal_hide_clock(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ServiceDiscoveryResponse)
  return target;
}

::size_t ServiceDiscoveryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ServiceDiscoveryResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HU.ChannelDescriptor channels = 1;
  total_size += 1UL * this->_internal_channels_size();
  for (const auto& msg : this->_internal_channels()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // required string head_unit_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_head_unit_name());
    }

    // required string car_model = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_car_model());
    }

    // required string car_year = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_car_year());
    }

    // required string car_serial = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_car_serial());
    }

    // required string headunit_make = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_headunit_make());
    }

    // required string headunit_model = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_headunit_model());
    }

    // required string sw_build = 9;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sw_build());
    }

    // required string sw_version = 10;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sw_version());
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // required bool driver_pos = 6;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2;
    }

    // required bool can_play_native_media_during_vr = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2;
    }

    // required bool hide_clock = 12;
    if (cached_has_bits & 0x00000400u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ServiceDiscoveryResponse::_class_data_ = {
    ServiceDiscoveryResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ServiceDiscoveryResponse::GetClassData() const {
  return &_class_data_;
}

void ServiceDiscoveryResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ServiceDiscoveryResponse*>(&to_msg);
  auto& from = static_cast<const ServiceDiscoveryResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ServiceDiscoveryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_channels()->MergeFrom(
      from._internal_channels());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_head_unit_name(from._internal_head_unit_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_car_model(from._internal_car_model());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_car_year(from._internal_car_year());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_car_serial(from._internal_car_serial());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_headunit_make(from._internal_headunit_make());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_headunit_model(from._internal_headunit_model());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_sw_build(from._internal_sw_build());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_set_sw_version(from._internal_sw_version());
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.driver_pos_ = from._impl_.driver_pos_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.can_play_native_media_during_vr_ = from._impl_.can_play_native_media_during_vr_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.hide_clock_ = from._impl_.hide_clock_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServiceDiscoveryResponse::CopyFrom(const ServiceDiscoveryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ServiceDiscoveryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ServiceDiscoveryResponse::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(_internal_channels()))
    return false;
  return true;
}

::_pbi::CachedSize* ServiceDiscoveryResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ServiceDiscoveryResponse::InternalSwap(ServiceDiscoveryResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.channels_.InternalSwap(&other->_impl_.channels_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.head_unit_name_, &other->_impl_.head_unit_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.car_model_, &other->_impl_.car_model_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.car_year_, &other->_impl_.car_year_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.car_serial_, &other->_impl_.car_serial_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.headunit_make_, &other->_impl_.headunit_make_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.headunit_model_, &other->_impl_.headunit_model_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sw_build_, &other->_impl_.sw_build_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sw_version_, &other->_impl_.sw_version_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.hide_clock_)
      + sizeof(ServiceDiscoveryResponse::_impl_.hide_clock_)
      - PROTOBUF_FIELD_OFFSET(ServiceDiscoveryResponse, _impl_.driver_pos_)>(
          reinterpret_cast<char*>(&_impl_.driver_pos_),
          reinterpret_cast<char*>(&other->_impl_.driver_pos_));
}

::google::protobuf::Metadata ServiceDiscoveryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[47]);
}
// ===================================================================

class ChannelOpenRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ChannelOpenRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChannelOpenRequest, _impl_._has_bits_);
  static void set_has_priority(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

ChannelOpenRequest::ChannelOpenRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ChannelOpenRequest)
}
ChannelOpenRequest::ChannelOpenRequest(
    ::google::protobuf::Arena* arena, const ChannelOpenRequest& from)
    : ChannelOpenRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ChannelOpenRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ChannelOpenRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, priority_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, priority_) +
               sizeof(Impl_::id_));
}
ChannelOpenRequest::~ChannelOpenRequest() {
  // @@protoc_insertion_point(destructor:HU.ChannelOpenRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelOpenRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChannelOpenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ChannelOpenRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.priority_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.id_) -
        reinterpret_cast<char*>(&_impl_.priority_)) + sizeof(_impl_.id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelOpenRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ChannelOpenRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelOpenRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ChannelOpenRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelOpenRequest, _impl_.id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ChannelOpenRequest, _impl_.id_)}},
    // optional int32 priority = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelOpenRequest, _impl_.priority_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelOpenRequest, _impl_.priority_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 priority = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelOpenRequest, _impl_.priority_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 id = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelOpenRequest, _impl_.id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ChannelOpenRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ChannelOpenRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 priority = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_priority(), target);
  }

  // optional int32 id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ChannelOpenRequest)
  return target;
}

::size_t ChannelOpenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ChannelOpenRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 priority = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_priority());
    }

    // optional int32 id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelOpenRequest::_class_data_ = {
    ChannelOpenRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChannelOpenRequest::GetClassData() const {
  return &_class_data_;
}

void ChannelOpenRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelOpenRequest*>(&to_msg);
  auto& from = static_cast<const ChannelOpenRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ChannelOpenRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.priority_ = from._impl_.priority_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelOpenRequest::CopyFrom(const ChannelOpenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ChannelOpenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelOpenRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ChannelOpenRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChannelOpenRequest::InternalSwap(ChannelOpenRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChannelOpenRequest, _impl_.id_)
      + sizeof(ChannelOpenRequest::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(ChannelOpenRequest, _impl_.priority_)>(
          reinterpret_cast<char*>(&_impl_.priority_),
          reinterpret_cast<char*>(&other->_impl_.priority_));
}

::google::protobuf::Metadata ChannelOpenRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[48]);
}
// ===================================================================

class ChannelOpenResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<ChannelOpenResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChannelOpenResponse, _impl_._has_bits_);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ChannelOpenResponse::ChannelOpenResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ChannelOpenResponse)
}
ChannelOpenResponse::ChannelOpenResponse(
    ::google::protobuf::Arena* arena, const ChannelOpenResponse& from)
    : ChannelOpenResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ChannelOpenResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ChannelOpenResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
ChannelOpenResponse::~ChannelOpenResponse() {
  // @@protoc_insertion_point(destructor:HU.ChannelOpenResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelOpenResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ChannelOpenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ChannelOpenResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChannelOpenResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ChannelOpenResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelOpenResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ChannelOpenResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required .HU.STATUS status = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelOpenResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .HU.STATUS status = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelOpenResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {0, 1},
  }}, {{
  }},
};

::uint8_t* ChannelOpenResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ChannelOpenResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HU.STATUS status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ChannelOpenResponse)
  return target;
}

::size_t ChannelOpenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ChannelOpenResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required .HU.STATUS status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ChannelOpenResponse::_class_data_ = {
    ChannelOpenResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ChannelOpenResponse::GetClassData() const {
  return &_class_data_;
}

void ChannelOpenResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ChannelOpenResponse*>(&to_msg);
  auto& from = static_cast<const ChannelOpenResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ChannelOpenResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelOpenResponse::CopyFrom(const ChannelOpenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ChannelOpenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChannelOpenResponse::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* ChannelOpenResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ChannelOpenResponse::InternalSwap(ChannelOpenResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata ChannelOpenResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[49]);
}
// ===================================================================

class PingRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PingRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PingRequest, _impl_._has_bits_);
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

PingRequest::PingRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.PingRequest)
}
PingRequest::PingRequest(
    ::google::protobuf::Arena* arena, const PingRequest& from)
    : PingRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PingRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
PingRequest::~PingRequest() {
  // @@protoc_insertion_point(destructor:HU.PingRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PingRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.PingRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PingRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PingRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PingRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PingRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required int64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PingRequest, _impl_.timestamp_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PingRequest, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(PingRequest, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PingRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.PingRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 timestamp = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.PingRequest)
  return target;
}

::size_t PingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.PingRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required int64 timestamp = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PingRequest::_class_data_ = {
    PingRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PingRequest::GetClassData() const {
  return &_class_data_;
}

void PingRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PingRequest*>(&to_msg);
  auto& from = static_cast<const PingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.PingRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PingRequest::CopyFrom(const PingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.PingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PingRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* PingRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PingRequest::InternalSwap(PingRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata PingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[50]);
}
// ===================================================================

class PingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<PingResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PingResponse, _impl_._has_bits_);
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

PingResponse::PingResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.PingResponse)
}
PingResponse::PingResponse(
    ::google::protobuf::Arena* arena, const PingResponse& from)
    : PingResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
PingResponse::~PingResponse() {
  // @@protoc_insertion_point(destructor:HU.PingResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PingResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.PingResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PingResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PingResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PingResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PingResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required int64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PingResponse, _impl_.timestamp_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PingResponse, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(PingResponse, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PingResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.PingResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int64 timestamp = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.PingResponse)
  return target;
}

::size_t PingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.PingResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required int64 timestamp = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PingResponse::_class_data_ = {
    PingResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PingResponse::GetClassData() const {
  return &_class_data_;
}

void PingResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PingResponse*>(&to_msg);
  auto& from = static_cast<const PingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.PingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PingResponse::CopyFrom(const PingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.PingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PingResponse::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* PingResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PingResponse::InternalSwap(PingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata PingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[51]);
}
// ===================================================================

class ShutdownRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<ShutdownRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ShutdownRequest, _impl_._has_bits_);
  static void set_has_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ShutdownRequest::ShutdownRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.ShutdownRequest)
}
ShutdownRequest::ShutdownRequest(
    ::google::protobuf::Arena* arena, const ShutdownRequest& from)
    : ShutdownRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ShutdownRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        reason_{static_cast< ::HU::ShutdownRequest_REASON >(1)} {}

inline void ShutdownRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ShutdownRequest::~ShutdownRequest() {
  // @@protoc_insertion_point(destructor:HU.ShutdownRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ShutdownRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ShutdownRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.ShutdownRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reason_ = 1;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ShutdownRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ShutdownRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ShutdownRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ShutdownRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .HU.ShutdownRequest.REASON reason = 1;
    {::_pbi::TcParser::FastEr1S1,
     {8, 0, 1, PROTOBUF_FIELD_OFFSET(ShutdownRequest, _impl_.reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .HU.ShutdownRequest.REASON reason = 1;
    {PROTOBUF_FIELD_OFFSET(ShutdownRequest, _impl_.reason_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {1, 1},
  }}, {{
  }},
};

::uint8_t* ShutdownRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.ShutdownRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .HU.ShutdownRequest.REASON reason = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.ShutdownRequest)
  return target;
}

::size_t ShutdownRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.ShutdownRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .HU.ShutdownRequest.REASON reason = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_reason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ShutdownRequest::_class_data_ = {
    ShutdownRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ShutdownRequest::GetClassData() const {
  return &_class_data_;
}

void ShutdownRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ShutdownRequest*>(&to_msg);
  auto& from = static_cast<const ShutdownRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.ShutdownRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_reason(from._internal_reason());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ShutdownRequest::CopyFrom(const ShutdownRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.ShutdownRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ShutdownRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ShutdownRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ShutdownRequest::InternalSwap(ShutdownRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.reason_, other->_impl_.reason_);
}

::google::protobuf::Metadata ShutdownRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[52]);
}
// ===================================================================

class ShutdownResponse::_Internal {
 public:
};

ShutdownResponse::ShutdownResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:HU.ShutdownResponse)
}
ShutdownResponse::ShutdownResponse(
    ::google::protobuf::Arena* arena,
    const ShutdownResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ShutdownResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:HU.ShutdownResponse)
}









::google::protobuf::Metadata ShutdownResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[53]);
}
// ===================================================================

class MediaSetupRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<MediaSetupRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MediaSetupRequest, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MediaSetupRequest::MediaSetupRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.MediaSetupRequest)
}
MediaSetupRequest::MediaSetupRequest(
    ::google::protobuf::Arena* arena, const MediaSetupRequest& from)
    : MediaSetupRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MediaSetupRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MediaSetupRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
MediaSetupRequest::~MediaSetupRequest() {
  // @@protoc_insertion_point(destructor:HU.MediaSetupRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MediaSetupRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MediaSetupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.MediaSetupRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MediaSetupRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> MediaSetupRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MediaSetupRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MediaSetupRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MediaSetupRequest, _impl_.type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(MediaSetupRequest, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 type = 1;
    {PROTOBUF_FIELD_OFFSET(MediaSetupRequest, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MediaSetupRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.MediaSetupRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.MediaSetupRequest)
  return target;
}

::size_t MediaSetupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.MediaSetupRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 type = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MediaSetupRequest::_class_data_ = {
    MediaSetupRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MediaSetupRequest::GetClassData() const {
  return &_class_data_;
}

void MediaSetupRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MediaSetupRequest*>(&to_msg);
  auto& from = static_cast<const MediaSetupRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.MediaSetupRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MediaSetupRequest::CopyFrom(const MediaSetupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.MediaSetupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MediaSetupRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MediaSetupRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MediaSetupRequest::InternalSwap(MediaSetupRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata MediaSetupRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[54]);
}
// ===================================================================

class MediaSetupResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<MediaSetupResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MediaSetupResponse, _impl_._has_bits_);
  static void set_has_media_status(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_max_unacked(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

MediaSetupResponse::MediaSetupResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.MediaSetupResponse)
}
inline PROTOBUF_NDEBUG_INLINE MediaSetupResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        configs_{visibility, arena, from.configs_} {}

MediaSetupResponse::MediaSetupResponse(
    ::google::protobuf::Arena* arena,
    const MediaSetupResponse& from)
    : ::google::protobuf::Message(arena) {
  MediaSetupResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_unacked_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, max_unacked_),
           offsetof(Impl_, media_status_) -
               offsetof(Impl_, max_unacked_) +
               sizeof(Impl_::media_status_));

  // @@protoc_insertion_point(copy_constructor:HU.MediaSetupResponse)
}
inline PROTOBUF_NDEBUG_INLINE MediaSetupResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        configs_{visibility, arena},
        media_status_{static_cast< ::HU::MediaSetupResponse_MEDIA_STATUS >(1)} {}

inline void MediaSetupResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.max_unacked_ = {};
}
MediaSetupResponse::~MediaSetupResponse() {
  // @@protoc_insertion_point(destructor:HU.MediaSetupResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MediaSetupResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MediaSetupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.MediaSetupResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.configs_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.max_unacked_ = 0u;
    _impl_.media_status_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MediaSetupResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> MediaSetupResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MediaSetupResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MediaSetupResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required .HU.MediaSetupResponse.MEDIA_STATUS media_status = 1;
    {::_pbi::TcParser::FastEr1S1,
     {8, 1, 2, PROTOBUF_FIELD_OFFSET(MediaSetupResponse, _impl_.media_status_)}},
    // required uint32 max_unacked = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MediaSetupResponse, _impl_.max_unacked_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(MediaSetupResponse, _impl_.max_unacked_)}},
    // repeated uint32 configs = 3;
    {::_pbi::TcParser::FastV32R1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MediaSetupResponse, _impl_.configs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .HU.MediaSetupResponse.MEDIA_STATUS media_status = 1;
    {PROTOBUF_FIELD_OFFSET(MediaSetupResponse, _impl_.media_status_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // required uint32 max_unacked = 2;
    {PROTOBUF_FIELD_OFFSET(MediaSetupResponse, _impl_.max_unacked_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint32 configs = 3;
    {PROTOBUF_FIELD_OFFSET(MediaSetupResponse, _impl_.configs_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
  }}, {{
    {1, 2},
  }}, {{
  }},
};

::uint8_t* MediaSetupResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.MediaSetupResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HU.MediaSetupResponse.MEDIA_STATUS media_status = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_media_status(), target);
  }

  // required uint32 max_unacked = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_max_unacked(), target);
  }

  // repeated uint32 configs = 3;
  for (int i = 0, n = this->_internal_configs_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_configs().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.MediaSetupResponse)
  return target;
}

::size_t MediaSetupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.MediaSetupResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 configs = 3;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_configs())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_configs_size());
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required uint32 max_unacked = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_max_unacked());
    }

    // required .HU.MediaSetupResponse.MEDIA_STATUS media_status = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_media_status());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MediaSetupResponse::_class_data_ = {
    MediaSetupResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MediaSetupResponse::GetClassData() const {
  return &_class_data_;
}

void MediaSetupResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MediaSetupResponse*>(&to_msg);
  auto& from = static_cast<const MediaSetupResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.MediaSetupResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_configs()->MergeFrom(from._internal_configs());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.max_unacked_ = from._impl_.max_unacked_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.media_status_ = from._impl_.media_status_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MediaSetupResponse::CopyFrom(const MediaSetupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.MediaSetupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MediaSetupResponse::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* MediaSetupResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MediaSetupResponse::InternalSwap(MediaSetupResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.configs_.InternalSwap(&other->_impl_.configs_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MediaSetupResponse, _impl_.media_status_)
      + sizeof(MediaSetupResponse::_impl_.media_status_)
      - PROTOBUF_FIELD_OFFSET(MediaSetupResponse, _impl_.max_unacked_)>(
          reinterpret_cast<char*>(&_impl_.max_unacked_),
          reinterpret_cast<char*>(&other->_impl_.max_unacked_));
}

::google::protobuf::Metadata MediaSetupResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[55]);
}
// ===================================================================

class MediaStopRequest::_Internal {
 public:
};

MediaStopRequest::MediaStopRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:HU.MediaStopRequest)
}
MediaStopRequest::MediaStopRequest(
    ::google::protobuf::Arena* arena,
    const MediaStopRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  MediaStopRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:HU.MediaStopRequest)
}









::google::protobuf::Metadata MediaStopRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[56]);
}
// ===================================================================

class MediaStartRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<MediaStartRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MediaStartRequest, _impl_._has_bits_);
  static void set_has_session(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_config(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

MediaStartRequest::MediaStartRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.MediaStartRequest)
}
MediaStartRequest::MediaStartRequest(
    ::google::protobuf::Arena* arena, const MediaStartRequest& from)
    : MediaStartRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MediaStartRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MediaStartRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_),
           0,
           offsetof(Impl_, config_) -
               offsetof(Impl_, session_) +
               sizeof(Impl_::config_));
}
MediaStartRequest::~MediaStartRequest() {
  // @@protoc_insertion_point(destructor:HU.MediaStartRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MediaStartRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MediaStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.MediaStartRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.session_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.config_) -
        reinterpret_cast<char*>(&_impl_.session_)) + sizeof(_impl_.config_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MediaStartRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> MediaStartRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MediaStartRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MediaStartRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 config = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MediaStartRequest, _impl_.config_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(MediaStartRequest, _impl_.config_)}},
    // required int32 session = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MediaStartRequest, _impl_.session_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(MediaStartRequest, _impl_.session_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 session = 1;
    {PROTOBUF_FIELD_OFFSET(MediaStartRequest, _impl_.session_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 config = 2;
    {PROTOBUF_FIELD_OFFSET(MediaStartRequest, _impl_.config_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MediaStartRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.MediaStartRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 session = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_session(), target);
  }

  // optional uint32 config = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_config(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.MediaStartRequest)
  return target;
}

::size_t MediaStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.MediaStartRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required int32 session = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_session());
  }

  // optional uint32 config = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_config());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MediaStartRequest::_class_data_ = {
    MediaStartRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MediaStartRequest::GetClassData() const {
  return &_class_data_;
}

void MediaStartRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MediaStartRequest*>(&to_msg);
  auto& from = static_cast<const MediaStartRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.MediaStartRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.session_ = from._impl_.session_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.config_ = from._impl_.config_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MediaStartRequest::CopyFrom(const MediaStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.MediaStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MediaStartRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* MediaStartRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MediaStartRequest::InternalSwap(MediaStartRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MediaStartRequest, _impl_.config_)
      + sizeof(MediaStartRequest::_impl_.config_)
      - PROTOBUF_FIELD_OFFSET(MediaStartRequest, _impl_.session_)>(
          reinterpret_cast<char*>(&_impl_.session_),
          reinterpret_cast<char*>(&other->_impl_.session_));
}

::google::protobuf::Metadata MediaStartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[57]);
}
// ===================================================================

class MediaAck::_Internal {
 public:
  using HasBits = decltype(std::declval<MediaAck>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MediaAck, _impl_._has_bits_);
  static void set_has_session(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

MediaAck::MediaAck(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.MediaAck)
}
MediaAck::MediaAck(
    ::google::protobuf::Arena* arena, const MediaAck& from)
    : MediaAck(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MediaAck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MediaAck::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_),
           0,
           offsetof(Impl_, value_) -
               offsetof(Impl_, session_) +
               sizeof(Impl_::value_));
}
MediaAck::~MediaAck() {
  // @@protoc_insertion_point(destructor:HU.MediaAck)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MediaAck::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MediaAck::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.MediaAck)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.session_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.value_) -
        reinterpret_cast<char*>(&_impl_.session_)) + sizeof(_impl_.value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MediaAck::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> MediaAck::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MediaAck, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MediaAck_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required uint32 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MediaAck, _impl_.value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(MediaAck, _impl_.value_)}},
    // required int32 session = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MediaAck, _impl_.session_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(MediaAck, _impl_.session_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 session = 1;
    {PROTOBUF_FIELD_OFFSET(MediaAck, _impl_.session_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required uint32 value = 2;
    {PROTOBUF_FIELD_OFFSET(MediaAck, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MediaAck::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.MediaAck)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 session = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_session(), target);
  }

  // required uint32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.MediaAck)
  return target;
}

::size_t MediaAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.MediaAck)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required int32 session = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_session());
    }

    // required uint32 value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MediaAck::_class_data_ = {
    MediaAck::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MediaAck::GetClassData() const {
  return &_class_data_;
}

void MediaAck::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MediaAck*>(&to_msg);
  auto& from = static_cast<const MediaAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.MediaAck)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.session_ = from._impl_.session_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.value_ = from._impl_.value_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MediaAck::CopyFrom(const MediaAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.MediaAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MediaAck::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* MediaAck::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MediaAck::InternalSwap(MediaAck* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MediaAck, _impl_.value_)
      + sizeof(MediaAck::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(MediaAck, _impl_.session_)>(
          reinterpret_cast<char*>(&_impl_.session_),
          reinterpret_cast<char*>(&other->_impl_.session_));
}

::google::protobuf::Metadata MediaAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[58]);
}
// ===================================================================

class MicRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<MicRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MicRequest, _impl_._has_bits_);
  static void set_has_open(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_anc(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ec(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_max_unacked(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

MicRequest::MicRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.MicRequest)
}
MicRequest::MicRequest(
    ::google::protobuf::Arena* arena, const MicRequest& from)
    : MicRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MicRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MicRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, open_),
           0,
           offsetof(Impl_, max_unacked_) -
               offsetof(Impl_, open_) +
               sizeof(Impl_::max_unacked_));
}
MicRequest::~MicRequest() {
  // @@protoc_insertion_point(destructor:HU.MicRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MicRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MicRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.MicRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.open_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_unacked_) -
        reinterpret_cast<char*>(&_impl_.open_)) + sizeof(_impl_.max_unacked_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MicRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> MicRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MicRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MicRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 max_unacked = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MicRequest, _impl_.max_unacked_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(MicRequest, _impl_.max_unacked_)}},
    // required bool open = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MicRequest, _impl_.open_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(MicRequest, _impl_.open_)}},
    // optional bool anc = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MicRequest, _impl_.anc_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(MicRequest, _impl_.anc_)}},
    // optional bool ec = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MicRequest, _impl_.ec_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(MicRequest, _impl_.ec_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required bool open = 1;
    {PROTOBUF_FIELD_OFFSET(MicRequest, _impl_.open_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool anc = 2;
    {PROTOBUF_FIELD_OFFSET(MicRequest, _impl_.anc_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool ec = 3;
    {PROTOBUF_FIELD_OFFSET(MicRequest, _impl_.ec_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 max_unacked = 4;
    {PROTOBUF_FIELD_OFFSET(MicRequest, _impl_.max_unacked_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MicRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.MicRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required bool open = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_open(), target);
  }

  // optional bool anc = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_anc(), target);
  }

  // optional bool ec = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_ec(), target);
  }

  // optional int32 max_unacked = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_max_unacked(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.MicRequest)
  return target;
}

::size_t MicRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.MicRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required bool open = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  if (cached_has_bits & 0x0000000eu) {
    // optional bool anc = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

    // optional bool ec = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

    // optional int32 max_unacked = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_max_unacked());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MicRequest::_class_data_ = {
    MicRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MicRequest::GetClassData() const {
  return &_class_data_;
}

void MicRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MicRequest*>(&to_msg);
  auto& from = static_cast<const MicRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.MicRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.open_ = from._impl_.open_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.anc_ = from._impl_.anc_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.ec_ = from._impl_.ec_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.max_unacked_ = from._impl_.max_unacked_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MicRequest::CopyFrom(const MicRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.MicRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MicRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* MicRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MicRequest::InternalSwap(MicRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MicRequest, _impl_.max_unacked_)
      + sizeof(MicRequest::_impl_.max_unacked_)
      - PROTOBUF_FIELD_OFFSET(MicRequest, _impl_.open_)>(
          reinterpret_cast<char*>(&_impl_.open_),
          reinterpret_cast<char*>(&other->_impl_.open_));
}

::google::protobuf::Metadata MicRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[59]);
}
// ===================================================================

class MicResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<MicResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MicResponse, _impl_._has_bits_);
  static void set_has_session(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

MicResponse::MicResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.MicResponse)
}
MicResponse::MicResponse(
    ::google::protobuf::Arena* arena, const MicResponse& from)
    : MicResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MicResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MicResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, session_),
           0,
           offsetof(Impl_, value_) -
               offsetof(Impl_, session_) +
               sizeof(Impl_::value_));
}
MicResponse::~MicResponse() {
  // @@protoc_insertion_point(destructor:HU.MicResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MicResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MicResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.MicResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.session_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.value_) -
        reinterpret_cast<char*>(&_impl_.session_)) + sizeof(_impl_.value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MicResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> MicResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MicResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MicResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required uint32 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MicResponse, _impl_.value_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(MicResponse, _impl_.value_)}},
    // required int32 session = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MicResponse, _impl_.session_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(MicResponse, _impl_.session_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 session = 1;
    {PROTOBUF_FIELD_OFFSET(MicResponse, _impl_.session_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required uint32 value = 2;
    {PROTOBUF_FIELD_OFFSET(MicResponse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MicResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.MicResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 session = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_session(), target);
  }

  // required uint32 value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.MicResponse)
  return target;
}

::size_t MicResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.MicResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required int32 session = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_session());
    }

    // required uint32 value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_value());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MicResponse::_class_data_ = {
    MicResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MicResponse::GetClassData() const {
  return &_class_data_;
}

void MicResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MicResponse*>(&to_msg);
  auto& from = static_cast<const MicResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.MicResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.session_ = from._impl_.session_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.value_ = from._impl_.value_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MicResponse::CopyFrom(const MicResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.MicResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MicResponse::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* MicResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MicResponse::InternalSwap(MicResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MicResponse, _impl_.value_)
      + sizeof(MicResponse::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(MicResponse, _impl_.session_)>(
          reinterpret_cast<char*>(&_impl_.session_),
          reinterpret_cast<char*>(&other->_impl_.session_));
}

::google::protobuf::Metadata MicResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[60]);
}
// ===================================================================

class VideoFocusRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<VideoFocusRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VideoFocusRequest, _impl_._has_bits_);
  static void set_has_disp_index(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

VideoFocusRequest::VideoFocusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.VideoFocusRequest)
}
VideoFocusRequest::VideoFocusRequest(
    ::google::protobuf::Arena* arena, const VideoFocusRequest& from)
    : VideoFocusRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE VideoFocusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mode_{static_cast< ::HU::VIDEO_FOCUS_MODE >(1)},
        reason_{static_cast< ::HU::VIDEO_FOCUS_REASON >(1)} {}

inline void VideoFocusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.disp_index_ = {};
}
VideoFocusRequest::~VideoFocusRequest() {
  // @@protoc_insertion_point(destructor:HU.VideoFocusRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VideoFocusRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VideoFocusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.VideoFocusRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    _impl_.disp_index_ = 0;
    _impl_.mode_ = 1;
    _impl_.reason_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VideoFocusRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> VideoFocusRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VideoFocusRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VideoFocusRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 disp_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VideoFocusRequest, _impl_.disp_index_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(VideoFocusRequest, _impl_.disp_index_)}},
    // optional .HU.VIDEO_FOCUS_MODE mode = 2;
    {::_pbi::TcParser::FastEr1S1,
     {16, 1, 2, PROTOBUF_FIELD_OFFSET(VideoFocusRequest, _impl_.mode_)}},
    // optional .HU.VIDEO_FOCUS_REASON reason = 3;
    {::_pbi::TcParser::FastEr1S1,
     {24, 2, 2, PROTOBUF_FIELD_OFFSET(VideoFocusRequest, _impl_.reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 disp_index = 1;
    {PROTOBUF_FIELD_OFFSET(VideoFocusRequest, _impl_.disp_index_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .HU.VIDEO_FOCUS_MODE mode = 2;
    {PROTOBUF_FIELD_OFFSET(VideoFocusRequest, _impl_.mode_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .HU.VIDEO_FOCUS_REASON reason = 3;
    {PROTOBUF_FIELD_OFFSET(VideoFocusRequest, _impl_.reason_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {1, 2},
    {1, 2},
  }}, {{
  }},
};

::uint8_t* VideoFocusRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.VideoFocusRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 disp_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_disp_index(), target);
  }

  // optional .HU.VIDEO_FOCUS_MODE mode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_mode(), target);
  }

  // optional .HU.VIDEO_FOCUS_REASON reason = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.VideoFocusRequest)
  return target;
}

::size_t VideoFocusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.VideoFocusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int32 disp_index = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_disp_index());
    }

    // optional .HU.VIDEO_FOCUS_MODE mode = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
    }

    // optional .HU.VIDEO_FOCUS_REASON reason = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_reason());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VideoFocusRequest::_class_data_ = {
    VideoFocusRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VideoFocusRequest::GetClassData() const {
  return &_class_data_;
}

void VideoFocusRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VideoFocusRequest*>(&to_msg);
  auto& from = static_cast<const VideoFocusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.VideoFocusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.disp_index_ = from._impl_.disp_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mode_ = from._impl_.mode_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.reason_ = from._impl_.reason_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VideoFocusRequest::CopyFrom(const VideoFocusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.VideoFocusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VideoFocusRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VideoFocusRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VideoFocusRequest::InternalSwap(VideoFocusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VideoFocusRequest, _impl_.reason_)
      + sizeof(VideoFocusRequest::_impl_.reason_)
      - PROTOBUF_FIELD_OFFSET(VideoFocusRequest, _impl_.disp_index_)>(
          reinterpret_cast<char*>(&_impl_.disp_index_),
          reinterpret_cast<char*>(&other->_impl_.disp_index_));
}

::google::protobuf::Metadata VideoFocusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[61]);
}
// ===================================================================

class VideoFocus::_Internal {
 public:
  using HasBits = decltype(std::declval<VideoFocus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VideoFocus, _impl_._has_bits_);
  static void set_has_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_unrequested(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

VideoFocus::VideoFocus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.VideoFocus)
}
VideoFocus::VideoFocus(
    ::google::protobuf::Arena* arena, const VideoFocus& from)
    : VideoFocus(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE VideoFocus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mode_{static_cast< ::HU::VIDEO_FOCUS_MODE >(1)} {}

inline void VideoFocus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.unrequested_ = {};
}
VideoFocus::~VideoFocus() {
  // @@protoc_insertion_point(destructor:HU.VideoFocus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VideoFocus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VideoFocus::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.VideoFocus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.unrequested_ = false;
    _impl_.mode_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VideoFocus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> VideoFocus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VideoFocus, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VideoFocus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool unrequested = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VideoFocus, _impl_.unrequested_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(VideoFocus, _impl_.unrequested_)}},
    // optional .HU.VIDEO_FOCUS_MODE mode = 1;
    {::_pbi::TcParser::FastEr1S1,
     {8, 1, 2, PROTOBUF_FIELD_OFFSET(VideoFocus, _impl_.mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .HU.VIDEO_FOCUS_MODE mode = 1;
    {PROTOBUF_FIELD_OFFSET(VideoFocus, _impl_.mode_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional bool unrequested = 2;
    {PROTOBUF_FIELD_OFFSET(VideoFocus, _impl_.unrequested_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {1, 2},
  }}, {{
  }},
};

::uint8_t* VideoFocus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.VideoFocus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .HU.VIDEO_FOCUS_MODE mode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mode(), target);
  }

  // optional bool unrequested = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_unrequested(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.VideoFocus)
  return target;
}

::size_t VideoFocus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.VideoFocus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool unrequested = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }

    // optional .HU.VIDEO_FOCUS_MODE mode = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VideoFocus::_class_data_ = {
    VideoFocus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VideoFocus::GetClassData() const {
  return &_class_data_;
}

void VideoFocus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VideoFocus*>(&to_msg);
  auto& from = static_cast<const VideoFocus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.VideoFocus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.unrequested_ = from._impl_.unrequested_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mode_ = from._impl_.mode_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VideoFocus::CopyFrom(const VideoFocus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.VideoFocus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VideoFocus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VideoFocus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VideoFocus::InternalSwap(VideoFocus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VideoFocus, _impl_.mode_)
      + sizeof(VideoFocus::_impl_.mode_)
      - PROTOBUF_FIELD_OFFSET(VideoFocus, _impl_.unrequested_)>(
          reinterpret_cast<char*>(&_impl_.unrequested_),
          reinterpret_cast<char*>(&other->_impl_.unrequested_));
}

::google::protobuf::Metadata VideoFocus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[62]);
}
// ===================================================================

class SensorStartRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorStartRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorStartRequest, _impl_._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_refresh_interval(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

SensorStartRequest::SensorStartRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorStartRequest)
}
SensorStartRequest::SensorStartRequest(
    ::google::protobuf::Arena* arena, const SensorStartRequest& from)
    : SensorStartRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorStartRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        type_{static_cast< ::HU::SENSOR_TYPE >(1)} {}

inline void SensorStartRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.refresh_interval_ = {};
}
SensorStartRequest::~SensorStartRequest() {
  // @@protoc_insertion_point(destructor:HU.SensorStartRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorStartRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorStartRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorStartRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.refresh_interval_ = ::int64_t{0};
    _impl_.type_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorStartRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SensorStartRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorStartRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SensorStartRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int64 refresh_interval = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SensorStartRequest, _impl_.refresh_interval_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(SensorStartRequest, _impl_.refresh_interval_)}},
    // required .HU.SENSOR_TYPE type = 1;
    {::_pbi::TcParser::FastEr1S1,
     {8, 1, 21, PROTOBUF_FIELD_OFFSET(SensorStartRequest, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .HU.SENSOR_TYPE type = 1;
    {PROTOBUF_FIELD_OFFSET(SensorStartRequest, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional int64 refresh_interval = 2;
    {PROTOBUF_FIELD_OFFSET(SensorStartRequest, _impl_.refresh_interval_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }}, {{
    {1, 21},
  }}, {{
  }},
};

::uint8_t* SensorStartRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorStartRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HU.SENSOR_TYPE type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // optional int64 refresh_interval = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_refresh_interval(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorStartRequest)
  return target;
}

::size_t SensorStartRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorStartRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 refresh_interval = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_refresh_interval());
  }

  // required .HU.SENSOR_TYPE type = 1;
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorStartRequest::_class_data_ = {
    SensorStartRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorStartRequest::GetClassData() const {
  return &_class_data_;
}

void SensorStartRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorStartRequest*>(&to_msg);
  auto& from = static_cast<const SensorStartRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorStartRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.refresh_interval_ = from._impl_.refresh_interval_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorStartRequest::CopyFrom(const SensorStartRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorStartRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorStartRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* SensorStartRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorStartRequest::InternalSwap(SensorStartRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorStartRequest, _impl_.type_)
      + sizeof(SensorStartRequest::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(SensorStartRequest, _impl_.refresh_interval_)>(
          reinterpret_cast<char*>(&_impl_.refresh_interval_),
          reinterpret_cast<char*>(&other->_impl_.refresh_interval_));
}

::google::protobuf::Metadata SensorStartRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[63]);
}
// ===================================================================

class SensorStartResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SensorStartResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SensorStartResponse, _impl_._has_bits_);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

SensorStartResponse::SensorStartResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.SensorStartResponse)
}
SensorStartResponse::SensorStartResponse(
    ::google::protobuf::Arena* arena, const SensorStartResponse& from)
    : SensorStartResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorStartResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorStartResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
SensorStartResponse::~SensorStartResponse() {
  // @@protoc_insertion_point(destructor:HU.SensorStartResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorStartResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorStartResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.SensorStartResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorStartResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SensorStartResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SensorStartResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SensorStartResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required .HU.STATUS status = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SensorStartResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .HU.STATUS status = 1;
    {PROTOBUF_FIELD_OFFSET(SensorStartResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {0, 1},
  }}, {{
  }},
};

::uint8_t* SensorStartResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.SensorStartResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HU.STATUS status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.SensorStartResponse)
  return target;
}

::size_t SensorStartResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.SensorStartResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required .HU.STATUS status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorStartResponse::_class_data_ = {
    SensorStartResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorStartResponse::GetClassData() const {
  return &_class_data_;
}

void SensorStartResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorStartResponse*>(&to_msg);
  auto& from = static_cast<const SensorStartResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.SensorStartResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorStartResponse::CopyFrom(const SensorStartResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.SensorStartResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorStartResponse::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* SensorStartResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorStartResponse::InternalSwap(SensorStartResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata SensorStartResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[64]);
}
// ===================================================================

class NavigationFocusRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<NavigationFocusRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NavigationFocusRequest, _impl_._has_bits_);
  static void set_has_focus_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

NavigationFocusRequest::NavigationFocusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.NavigationFocusRequest)
}
NavigationFocusRequest::NavigationFocusRequest(
    ::google::protobuf::Arena* arena, const NavigationFocusRequest& from)
    : NavigationFocusRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NavigationFocusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NavigationFocusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.focus_type_ = {};
}
NavigationFocusRequest::~NavigationFocusRequest() {
  // @@protoc_insertion_point(destructor:HU.NavigationFocusRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NavigationFocusRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NavigationFocusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.NavigationFocusRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.focus_type_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NavigationFocusRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> NavigationFocusRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NavigationFocusRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NavigationFocusRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 focus_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NavigationFocusRequest, _impl_.focus_type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(NavigationFocusRequest, _impl_.focus_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 focus_type = 1;
    {PROTOBUF_FIELD_OFFSET(NavigationFocusRequest, _impl_.focus_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NavigationFocusRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.NavigationFocusRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 focus_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_focus_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.NavigationFocusRequest)
  return target;
}

::size_t NavigationFocusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.NavigationFocusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 focus_type = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_focus_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NavigationFocusRequest::_class_data_ = {
    NavigationFocusRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NavigationFocusRequest::GetClassData() const {
  return &_class_data_;
}

void NavigationFocusRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NavigationFocusRequest*>(&to_msg);
  auto& from = static_cast<const NavigationFocusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.NavigationFocusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_focus_type(from._internal_focus_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NavigationFocusRequest::CopyFrom(const NavigationFocusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.NavigationFocusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NavigationFocusRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NavigationFocusRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NavigationFocusRequest::InternalSwap(NavigationFocusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.focus_type_, other->_impl_.focus_type_);
}

::google::protobuf::Metadata NavigationFocusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[65]);
}
// ===================================================================

class NavigationFocusResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<NavigationFocusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NavigationFocusResponse, _impl_._has_bits_);
  static void set_has_focus_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

NavigationFocusResponse::NavigationFocusResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.NavigationFocusResponse)
}
NavigationFocusResponse::NavigationFocusResponse(
    ::google::protobuf::Arena* arena, const NavigationFocusResponse& from)
    : NavigationFocusResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NavigationFocusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NavigationFocusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.focus_type_ = {};
}
NavigationFocusResponse::~NavigationFocusResponse() {
  // @@protoc_insertion_point(destructor:HU.NavigationFocusResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NavigationFocusResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NavigationFocusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.NavigationFocusResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.focus_type_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NavigationFocusResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> NavigationFocusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NavigationFocusResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NavigationFocusResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 focus_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NavigationFocusResponse, _impl_.focus_type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(NavigationFocusResponse, _impl_.focus_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 focus_type = 1;
    {PROTOBUF_FIELD_OFFSET(NavigationFocusResponse, _impl_.focus_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NavigationFocusResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.NavigationFocusResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 focus_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_focus_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.NavigationFocusResponse)
  return target;
}

::size_t NavigationFocusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.NavigationFocusResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 focus_type = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_focus_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NavigationFocusResponse::_class_data_ = {
    NavigationFocusResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NavigationFocusResponse::GetClassData() const {
  return &_class_data_;
}

void NavigationFocusResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NavigationFocusResponse*>(&to_msg);
  auto& from = static_cast<const NavigationFocusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.NavigationFocusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_focus_type(from._internal_focus_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NavigationFocusResponse::CopyFrom(const NavigationFocusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.NavigationFocusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NavigationFocusResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NavigationFocusResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NavigationFocusResponse::InternalSwap(NavigationFocusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.focus_type_, other->_impl_.focus_type_);
}

::google::protobuf::Metadata NavigationFocusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[66]);
}
// ===================================================================

class VoiceSessionRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<VoiceSessionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(VoiceSessionRequest, _impl_._has_bits_);
  static void set_has_voice_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

VoiceSessionRequest::VoiceSessionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.VoiceSessionRequest)
}
VoiceSessionRequest::VoiceSessionRequest(
    ::google::protobuf::Arena* arena, const VoiceSessionRequest& from)
    : VoiceSessionRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE VoiceSessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        voice_status_{static_cast< ::HU::VoiceSessionRequest_VOICE_STATUS >(1)} {}

inline void VoiceSessionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
VoiceSessionRequest::~VoiceSessionRequest() {
  // @@protoc_insertion_point(destructor:HU.VoiceSessionRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VoiceSessionRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void VoiceSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.VoiceSessionRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.voice_status_ = 1;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* VoiceSessionRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> VoiceSessionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VoiceSessionRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_VoiceSessionRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .HU.VoiceSessionRequest.VOICE_STATUS voice_status = 1;
    {::_pbi::TcParser::FastEr1S1,
     {8, 0, 2, PROTOBUF_FIELD_OFFSET(VoiceSessionRequest, _impl_.voice_status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .HU.VoiceSessionRequest.VOICE_STATUS voice_status = 1;
    {PROTOBUF_FIELD_OFFSET(VoiceSessionRequest, _impl_.voice_status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {1, 2},
  }}, {{
  }},
};

::uint8_t* VoiceSessionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.VoiceSessionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .HU.VoiceSessionRequest.VOICE_STATUS voice_status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_voice_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.VoiceSessionRequest)
  return target;
}

::size_t VoiceSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.VoiceSessionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .HU.VoiceSessionRequest.VOICE_STATUS voice_status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_voice_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData VoiceSessionRequest::_class_data_ = {
    VoiceSessionRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* VoiceSessionRequest::GetClassData() const {
  return &_class_data_;
}

void VoiceSessionRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<VoiceSessionRequest*>(&to_msg);
  auto& from = static_cast<const VoiceSessionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.VoiceSessionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_voice_status(from._internal_voice_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VoiceSessionRequest::CopyFrom(const VoiceSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.VoiceSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool VoiceSessionRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* VoiceSessionRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void VoiceSessionRequest::InternalSwap(VoiceSessionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.voice_status_, other->_impl_.voice_status_);
}

::google::protobuf::Metadata VoiceSessionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[67]);
}
// ===================================================================

class AudioFocusRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<AudioFocusRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AudioFocusRequest, _impl_._has_bits_);
  static void set_has_focus_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

AudioFocusRequest::AudioFocusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.AudioFocusRequest)
}
AudioFocusRequest::AudioFocusRequest(
    ::google::protobuf::Arena* arena, const AudioFocusRequest& from)
    : AudioFocusRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AudioFocusRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        focus_type_{static_cast< ::HU::AudioFocusRequest_AUDIO_FOCUS >(1)} {}

inline void AudioFocusRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AudioFocusRequest::~AudioFocusRequest() {
  // @@protoc_insertion_point(destructor:HU.AudioFocusRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AudioFocusRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AudioFocusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.AudioFocusRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.focus_type_ = 1;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AudioFocusRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AudioFocusRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AudioFocusRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AudioFocusRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required .HU.AudioFocusRequest.AUDIO_FOCUS focus_type = 1;
    {::_pbi::TcParser::FastEr1S1,
     {8, 0, 4, PROTOBUF_FIELD_OFFSET(AudioFocusRequest, _impl_.focus_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .HU.AudioFocusRequest.AUDIO_FOCUS focus_type = 1;
    {PROTOBUF_FIELD_OFFSET(AudioFocusRequest, _impl_.focus_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {1, 4},
  }}, {{
  }},
};

::uint8_t* AudioFocusRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.AudioFocusRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HU.AudioFocusRequest.AUDIO_FOCUS focus_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_focus_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.AudioFocusRequest)
  return target;
}

::size_t AudioFocusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.AudioFocusRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required .HU.AudioFocusRequest.AUDIO_FOCUS focus_type = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_focus_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AudioFocusRequest::_class_data_ = {
    AudioFocusRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AudioFocusRequest::GetClassData() const {
  return &_class_data_;
}

void AudioFocusRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AudioFocusRequest*>(&to_msg);
  auto& from = static_cast<const AudioFocusRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.AudioFocusRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_focus_type(from._internal_focus_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AudioFocusRequest::CopyFrom(const AudioFocusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.AudioFocusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AudioFocusRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* AudioFocusRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AudioFocusRequest::InternalSwap(AudioFocusRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.focus_type_, other->_impl_.focus_type_);
}

::google::protobuf::Metadata AudioFocusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[68]);
}
// ===================================================================

class AudioFocusResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<AudioFocusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AudioFocusResponse, _impl_._has_bits_);
  static void set_has_focus_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

AudioFocusResponse::AudioFocusResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.AudioFocusResponse)
}
AudioFocusResponse::AudioFocusResponse(
    ::google::protobuf::Arena* arena, const AudioFocusResponse& from)
    : AudioFocusResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AudioFocusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        focus_type_{static_cast< ::HU::AudioFocusResponse_AUDIO_FOCUS_STATE >(1)} {}

inline void AudioFocusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AudioFocusResponse::~AudioFocusResponse() {
  // @@protoc_insertion_point(destructor:HU.AudioFocusResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AudioFocusResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AudioFocusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.AudioFocusResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.focus_type_ = 1;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AudioFocusResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AudioFocusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AudioFocusResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AudioFocusResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required .HU.AudioFocusResponse.AUDIO_FOCUS_STATE focus_type = 1;
    {::_pbi::TcParser::FastEr1S1,
     {8, 0, 7, PROTOBUF_FIELD_OFFSET(AudioFocusResponse, _impl_.focus_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .HU.AudioFocusResponse.AUDIO_FOCUS_STATE focus_type = 1;
    {PROTOBUF_FIELD_OFFSET(AudioFocusResponse, _impl_.focus_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {1, 7},
  }}, {{
  }},
};

::uint8_t* AudioFocusResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.AudioFocusResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HU.AudioFocusResponse.AUDIO_FOCUS_STATE focus_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_focus_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.AudioFocusResponse)
  return target;
}

::size_t AudioFocusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.AudioFocusResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required .HU.AudioFocusResponse.AUDIO_FOCUS_STATE focus_type = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_focus_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AudioFocusResponse::_class_data_ = {
    AudioFocusResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AudioFocusResponse::GetClassData() const {
  return &_class_data_;
}

void AudioFocusResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AudioFocusResponse*>(&to_msg);
  auto& from = static_cast<const AudioFocusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.AudioFocusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_focus_type(from._internal_focus_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AudioFocusResponse::CopyFrom(const AudioFocusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.AudioFocusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AudioFocusResponse::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* AudioFocusResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AudioFocusResponse::InternalSwap(AudioFocusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.focus_type_, other->_impl_.focus_type_);
}

::google::protobuf::Metadata AudioFocusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[69]);
}
// ===================================================================

class AuthCompleteResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<AuthCompleteResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AuthCompleteResponse, _impl_._has_bits_);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

AuthCompleteResponse::AuthCompleteResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.AuthCompleteResponse)
}
AuthCompleteResponse::AuthCompleteResponse(
    ::google::protobuf::Arena* arena, const AuthCompleteResponse& from)
    : AuthCompleteResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AuthCompleteResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AuthCompleteResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
AuthCompleteResponse::~AuthCompleteResponse() {
  // @@protoc_insertion_point(destructor:HU.AuthCompleteResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AuthCompleteResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AuthCompleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.AuthCompleteResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AuthCompleteResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AuthCompleteResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AuthCompleteResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AuthCompleteResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required .HU.STATUS status = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AuthCompleteResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required .HU.STATUS status = 1;
    {PROTOBUF_FIELD_OFFSET(AuthCompleteResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {0, 1},
  }}, {{
  }},
};

::uint8_t* AuthCompleteResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.AuthCompleteResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HU.STATUS status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.AuthCompleteResponse)
  return target;
}

::size_t AuthCompleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.AuthCompleteResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required .HU.STATUS status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AuthCompleteResponse::_class_data_ = {
    AuthCompleteResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AuthCompleteResponse::GetClassData() const {
  return &_class_data_;
}

void AuthCompleteResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AuthCompleteResponse*>(&to_msg);
  auto& from = static_cast<const AuthCompleteResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.AuthCompleteResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AuthCompleteResponse::CopyFrom(const AuthCompleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.AuthCompleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AuthCompleteResponse::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* AuthCompleteResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AuthCompleteResponse::InternalSwap(AuthCompleteResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata AuthCompleteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[70]);
}
// ===================================================================

class PhoneStatus_Call::_Internal {
 public:
  using HasBits = decltype(std::declval<PhoneStatus_Call>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PhoneStatus_Call, _impl_._has_bits_);
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_call_time(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_phone_number(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_caller_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_phone_number_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_thumbnail(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

PhoneStatus_Call::PhoneStatus_Call(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.PhoneStatus.Call)
}
inline PROTOBUF_NDEBUG_INLINE PhoneStatus_Call::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        phone_number_(arena, from.phone_number_),
        caller_id_(arena, from.caller_id_),
        phone_number_type_(arena, from.phone_number_type_),
        thumbnail_(arena, from.thumbnail_) {}

PhoneStatus_Call::PhoneStatus_Call(
    ::google::protobuf::Arena* arena,
    const PhoneStatus_Call& from)
    : ::google::protobuf::Message(arena) {
  PhoneStatus_Call* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, call_time_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, call_time_),
           offsetof(Impl_, state_) -
               offsetof(Impl_, call_time_) +
               sizeof(Impl_::state_));

  // @@protoc_insertion_point(copy_constructor:HU.PhoneStatus.Call)
}
inline PROTOBUF_NDEBUG_INLINE PhoneStatus_Call::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        phone_number_(arena),
        caller_id_(arena),
        phone_number_type_(arena),
        thumbnail_(arena),
        state_{static_cast< ::HU::PhoneStatus_PHONE_STATE >(1)} {}

inline void PhoneStatus_Call::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.call_time_ = {};
}
PhoneStatus_Call::~PhoneStatus_Call() {
  // @@protoc_insertion_point(destructor:HU.PhoneStatus.Call)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PhoneStatus_Call::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.phone_number_.Destroy();
  _impl_.caller_id_.Destroy();
  _impl_.phone_number_type_.Destroy();
  _impl_.thumbnail_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PhoneStatus_Call::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.PhoneStatus.Call)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.phone_number_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.caller_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.phone_number_type_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.thumbnail_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000030u) {
    _impl_.call_time_ = 0u;
    _impl_.state_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PhoneStatus_Call::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 66, 2> PhoneStatus_Call::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PhoneStatus_Call, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PhoneStatus_Call_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .HU.PhoneStatus.PHONE_STATE state = 1;
    {::_pbi::TcParser::FastEr1S1,
     {8, 5, 6, PROTOBUF_FIELD_OFFSET(PhoneStatus_Call, _impl_.state_)}},
    // optional uint32 call_time = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PhoneStatus_Call, _impl_.call_time_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(PhoneStatus_Call, _impl_.call_time_)}},
    // optional string phone_number = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PhoneStatus_Call, _impl_.phone_number_)}},
    // optional string caller_id = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(PhoneStatus_Call, _impl_.caller_id_)}},
    // optional string phone_number_type = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(PhoneStatus_Call, _impl_.phone_number_type_)}},
    // optional bytes thumbnail = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 3, 0, PROTOBUF_FIELD_OFFSET(PhoneStatus_Call, _impl_.thumbnail_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .HU.PhoneStatus.PHONE_STATE state = 1;
    {PROTOBUF_FIELD_OFFSET(PhoneStatus_Call, _impl_.state_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint32 call_time = 2;
    {PROTOBUF_FIELD_OFFSET(PhoneStatus_Call, _impl_.call_time_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string phone_number = 3;
    {PROTOBUF_FIELD_OFFSET(PhoneStatus_Call, _impl_.phone_number_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string caller_id = 4;
    {PROTOBUF_FIELD_OFFSET(PhoneStatus_Call, _impl_.caller_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string phone_number_type = 5;
    {PROTOBUF_FIELD_OFFSET(PhoneStatus_Call, _impl_.phone_number_type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bytes thumbnail = 6;
    {PROTOBUF_FIELD_OFFSET(PhoneStatus_Call, _impl_.thumbnail_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {1, 6},
  }}, {{
    "\23\0\0\14\11\21\0\0"
    "HU.PhoneStatus.Call"
    "phone_number"
    "caller_id"
    "phone_number_type"
  }},
};

::uint8_t* PhoneStatus_Call::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.PhoneStatus.Call)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .HU.PhoneStatus.PHONE_STATE state = 1;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_state(), target);
  }

  // optional uint32 call_time = 2;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_call_time(), target);
  }

  // optional string phone_number = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_phone_number();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.PhoneStatus.Call.phone_number");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string caller_id = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_caller_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.PhoneStatus.Call.caller_id");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string phone_number_type = 5;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_phone_number_type();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.PhoneStatus.Call.phone_number_type");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional bytes thumbnail = 6;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_thumbnail();
    target = stream->WriteBytesMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.PhoneStatus.Call)
  return target;
}

::size_t PhoneStatus_Call::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.PhoneStatus.Call)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string phone_number = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_phone_number());
    }

    // optional string caller_id = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_caller_id());
    }

    // optional string phone_number_type = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_phone_number_type());
    }

    // optional bytes thumbnail = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_thumbnail());
    }

    // optional uint32 call_time = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_call_time());
    }

    // optional .HU.PhoneStatus.PHONE_STATE state = 1;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PhoneStatus_Call::_class_data_ = {
    PhoneStatus_Call::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PhoneStatus_Call::GetClassData() const {
  return &_class_data_;
}

void PhoneStatus_Call::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PhoneStatus_Call*>(&to_msg);
  auto& from = static_cast<const PhoneStatus_Call&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.PhoneStatus.Call)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_phone_number(from._internal_phone_number());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_caller_id(from._internal_caller_id());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_phone_number_type(from._internal_phone_number_type());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_thumbnail(from._internal_thumbnail());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.call_time_ = from._impl_.call_time_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.state_ = from._impl_.state_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PhoneStatus_Call::CopyFrom(const PhoneStatus_Call& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.PhoneStatus.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PhoneStatus_Call::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PhoneStatus_Call::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PhoneStatus_Call::InternalSwap(PhoneStatus_Call* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.phone_number_, &other->_impl_.phone_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.caller_id_, &other->_impl_.caller_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.phone_number_type_, &other->_impl_.phone_number_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.thumbnail_, &other->_impl_.thumbnail_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PhoneStatus_Call, _impl_.state_)
      + sizeof(PhoneStatus_Call::_impl_.state_)
      - PROTOBUF_FIELD_OFFSET(PhoneStatus_Call, _impl_.call_time_)>(
          reinterpret_cast<char*>(&_impl_.call_time_),
          reinterpret_cast<char*>(&other->_impl_.call_time_));
}

::google::protobuf::Metadata PhoneStatus_Call::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[71]);
}
// ===================================================================

class PhoneStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<PhoneStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PhoneStatus, _impl_._has_bits_);
  static void set_has_signal_strength(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PhoneStatus::PhoneStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.PhoneStatus)
}
inline PROTOBUF_NDEBUG_INLINE PhoneStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        calls_{visibility, arena, from.calls_} {}

PhoneStatus::PhoneStatus(
    ::google::protobuf::Arena* arena,
    const PhoneStatus& from)
    : ::google::protobuf::Message(arena) {
  PhoneStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.signal_strength_ = from._impl_.signal_strength_;

  // @@protoc_insertion_point(copy_constructor:HU.PhoneStatus)
}
inline PROTOBUF_NDEBUG_INLINE PhoneStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        calls_{visibility, arena} {}

inline void PhoneStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.signal_strength_ = {};
}
PhoneStatus::~PhoneStatus() {
  // @@protoc_insertion_point(destructor:HU.PhoneStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PhoneStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PhoneStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.PhoneStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.calls_.Clear();
  _impl_.signal_strength_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PhoneStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> PhoneStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PhoneStatus, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PhoneStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 signal_strength = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PhoneStatus, _impl_.signal_strength_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(PhoneStatus, _impl_.signal_strength_)}},
    // repeated .HU.PhoneStatus.Call calls = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PhoneStatus, _impl_.calls_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .HU.PhoneStatus.Call calls = 1;
    {PROTOBUF_FIELD_OFFSET(PhoneStatus, _impl_.calls_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 signal_strength = 2;
    {PROTOBUF_FIELD_OFFSET(PhoneStatus, _impl_.signal_strength_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::HU::PhoneStatus_Call>()},
  }}, {{
  }},
};

::uint8_t* PhoneStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.PhoneStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .HU.PhoneStatus.Call calls = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_calls_size()); i < n; i++) {
    const auto& repfield = this->_internal_calls().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 signal_strength = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_signal_strength(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.PhoneStatus)
  return target;
}

::size_t PhoneStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.PhoneStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HU.PhoneStatus.Call calls = 1;
  total_size += 1UL * this->_internal_calls_size();
  for (const auto& msg : this->_internal_calls()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional uint32 signal_strength = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_signal_strength());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PhoneStatus::_class_data_ = {
    PhoneStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PhoneStatus::GetClassData() const {
  return &_class_data_;
}

void PhoneStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PhoneStatus*>(&to_msg);
  auto& from = static_cast<const PhoneStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.PhoneStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_calls()->MergeFrom(
      from._internal_calls());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_signal_strength(from._internal_signal_strength());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PhoneStatus::CopyFrom(const PhoneStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.PhoneStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PhoneStatus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PhoneStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PhoneStatus::InternalSwap(PhoneStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.calls_.InternalSwap(&other->_impl_.calls_);
        swap(_impl_.signal_strength_, other->_impl_.signal_strength_);
}

::google::protobuf::Metadata PhoneStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[72]);
}
// ===================================================================

class PhoneStatusInput::_Internal {
 public:
  using HasBits = decltype(std::declval<PhoneStatusInput>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PhoneStatusInput, _impl_._has_bits_);
  static void set_has_caller_number(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_caller_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PhoneStatusInput::PhoneStatusInput(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.PhoneStatusInput)
}
inline PROTOBUF_NDEBUG_INLINE PhoneStatusInput::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        caller_number_(arena, from.caller_number_),
        caller_id_(arena, from.caller_id_) {}

PhoneStatusInput::PhoneStatusInput(
    ::google::protobuf::Arena* arena,
    const PhoneStatusInput& from)
    : ::google::protobuf::Message(arena) {
  PhoneStatusInput* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:HU.PhoneStatusInput)
}
inline PROTOBUF_NDEBUG_INLINE PhoneStatusInput::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        caller_number_(arena),
        caller_id_(arena) {}

inline void PhoneStatusInput::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PhoneStatusInput::~PhoneStatusInput() {
  // @@protoc_insertion_point(destructor:HU.PhoneStatusInput)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PhoneStatusInput::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.caller_number_.Destroy();
  _impl_.caller_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PhoneStatusInput::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.PhoneStatusInput)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.caller_number_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.caller_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PhoneStatusInput::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 50, 2> PhoneStatusInput::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PhoneStatusInput, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PhoneStatusInput_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string caller_id = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(PhoneStatusInput, _impl_.caller_id_)}},
    // optional string caller_number = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PhoneStatusInput, _impl_.caller_number_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string caller_number = 1;
    {PROTOBUF_FIELD_OFFSET(PhoneStatusInput, _impl_.caller_number_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string caller_id = 2;
    {PROTOBUF_FIELD_OFFSET(PhoneStatusInput, _impl_.caller_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\15\11\0\0\0\0\0"
    "HU.PhoneStatusInput"
    "caller_number"
    "caller_id"
  }},
};

::uint8_t* PhoneStatusInput::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.PhoneStatusInput)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string caller_number = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_caller_number();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.PhoneStatusInput.caller_number");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string caller_id = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_caller_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.PhoneStatusInput.caller_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.PhoneStatusInput)
  return target;
}

::size_t PhoneStatusInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.PhoneStatusInput)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string caller_number = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_caller_number());
    }

    // optional string caller_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_caller_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PhoneStatusInput::_class_data_ = {
    PhoneStatusInput::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PhoneStatusInput::GetClassData() const {
  return &_class_data_;
}

void PhoneStatusInput::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PhoneStatusInput*>(&to_msg);
  auto& from = static_cast<const PhoneStatusInput&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.PhoneStatusInput)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_caller_number(from._internal_caller_number());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_caller_id(from._internal_caller_id());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PhoneStatusInput::CopyFrom(const PhoneStatusInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.PhoneStatusInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PhoneStatusInput::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PhoneStatusInput::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PhoneStatusInput::InternalSwap(PhoneStatusInput* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.caller_number_, &other->_impl_.caller_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.caller_id_, &other->_impl_.caller_id_, arena);
}

::google::protobuf::Metadata PhoneStatusInput::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[73]);
}
// ===================================================================

class GenericNotificationRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GenericNotificationRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GenericNotificationRequest, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_text(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_icon(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

GenericNotificationRequest::GenericNotificationRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.GenericNotificationRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenericNotificationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        text_(arena, from.text_),
        icon_(arena, from.icon_) {}

GenericNotificationRequest::GenericNotificationRequest(
    ::google::protobuf::Arena* arena,
    const GenericNotificationRequest& from)
    : ::google::protobuf::Message(arena) {
  GenericNotificationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:HU.GenericNotificationRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenericNotificationRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        text_(arena),
        icon_(arena) {}

inline void GenericNotificationRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GenericNotificationRequest::~GenericNotificationRequest() {
  // @@protoc_insertion_point(destructor:HU.GenericNotificationRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GenericNotificationRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.text_.Destroy();
  _impl_.icon_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GenericNotificationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.GenericNotificationRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.text_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.icon_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GenericNotificationRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 48, 2> GenericNotificationRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenericNotificationRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GenericNotificationRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GenericNotificationRequest, _impl_.id_)}},
    // optional string text = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GenericNotificationRequest, _impl_.text_)}},
    // optional string icon = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(GenericNotificationRequest, _impl_.icon_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(GenericNotificationRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string text = 2;
    {PROTOBUF_FIELD_OFFSET(GenericNotificationRequest, _impl_.text_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string icon = 3;
    {PROTOBUF_FIELD_OFFSET(GenericNotificationRequest, _impl_.icon_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\2\4\4\0\0\0\0"
    "HU.GenericNotificationRequest"
    "id"
    "text"
    "icon"
  }},
};

::uint8_t* GenericNotificationRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.GenericNotificationRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.GenericNotificationRequest.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string text = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.GenericNotificationRequest.text");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string icon = 3;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_icon();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.GenericNotificationRequest.icon");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.GenericNotificationRequest)
  return target;
}

::size_t GenericNotificationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.GenericNotificationRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  if (cached_has_bits & 0x00000006u) {
    // optional string text = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_text());
    }

    // optional string icon = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_icon());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GenericNotificationRequest::_class_data_ = {
    GenericNotificationRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GenericNotificationRequest::GetClassData() const {
  return &_class_data_;
}

void GenericNotificationRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GenericNotificationRequest*>(&to_msg);
  auto& from = static_cast<const GenericNotificationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.GenericNotificationRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_text(from._internal_text());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_icon(from._internal_icon());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenericNotificationRequest::CopyFrom(const GenericNotificationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.GenericNotificationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GenericNotificationRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* GenericNotificationRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GenericNotificationRequest::InternalSwap(GenericNotificationRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.icon_, &other->_impl_.icon_, arena);
}

::google::protobuf::Metadata GenericNotificationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[74]);
}
// ===================================================================

class GenericNotificationResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GenericNotificationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GenericNotificationResponse, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_handled(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

GenericNotificationResponse::GenericNotificationResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.GenericNotificationResponse)
}
inline PROTOBUF_NDEBUG_INLINE GenericNotificationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_) {}

GenericNotificationResponse::GenericNotificationResponse(
    ::google::protobuf::Arena* arena,
    const GenericNotificationResponse& from)
    : ::google::protobuf::Message(arena) {
  GenericNotificationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.handled_ = from._impl_.handled_;

  // @@protoc_insertion_point(copy_constructor:HU.GenericNotificationResponse)
}
inline PROTOBUF_NDEBUG_INLINE GenericNotificationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena) {}

inline void GenericNotificationResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.handled_ = {};
}
GenericNotificationResponse::~GenericNotificationResponse() {
  // @@protoc_insertion_point(destructor:HU.GenericNotificationResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GenericNotificationResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GenericNotificationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.GenericNotificationResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.id_.ClearNonDefaultToEmpty();
  }
  _impl_.handled_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GenericNotificationResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 41, 2> GenericNotificationResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenericNotificationResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GenericNotificationResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // required bool handled = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GenericNotificationResponse, _impl_.handled_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GenericNotificationResponse, _impl_.handled_)}},
    // required string id = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GenericNotificationResponse, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string id = 1;
    {PROTOBUF_FIELD_OFFSET(GenericNotificationResponse, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required bool handled = 2;
    {PROTOBUF_FIELD_OFFSET(GenericNotificationResponse, _impl_.handled_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\36\2\0\0\0\0\0\0"
    "HU.GenericNotificationResponse"
    "id"
  }},
};

::uint8_t* GenericNotificationResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.GenericNotificationResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.GenericNotificationResponse.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // required bool handled = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_handled(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.GenericNotificationResponse)
  return target;
}

::size_t GenericNotificationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.GenericNotificationResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_id());
    }

    // required bool handled = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GenericNotificationResponse::_class_data_ = {
    GenericNotificationResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GenericNotificationResponse::GetClassData() const {
  return &_class_data_;
}

void GenericNotificationResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GenericNotificationResponse*>(&to_msg);
  auto& from = static_cast<const GenericNotificationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.GenericNotificationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.handled_ = from._impl_.handled_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenericNotificationResponse::CopyFrom(const GenericNotificationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.GenericNotificationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GenericNotificationResponse::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* GenericNotificationResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GenericNotificationResponse::InternalSwap(GenericNotificationResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
        swap(_impl_.handled_, other->_impl_.handled_);
}

::google::protobuf::Metadata GenericNotificationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[75]);
}
// ===================================================================

class StartGenericNotifications::_Internal {
 public:
};

StartGenericNotifications::StartGenericNotifications(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:HU.StartGenericNotifications)
}
StartGenericNotifications::StartGenericNotifications(
    ::google::protobuf::Arena* arena,
    const StartGenericNotifications& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  StartGenericNotifications* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:HU.StartGenericNotifications)
}









::google::protobuf::Metadata StartGenericNotifications::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[76]);
}
// ===================================================================

class StopGenericNotifications::_Internal {
 public:
};

StopGenericNotifications::StopGenericNotifications(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:HU.StopGenericNotifications)
}
StopGenericNotifications::StopGenericNotifications(
    ::google::protobuf::Arena* arena,
    const StopGenericNotifications& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  StopGenericNotifications* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:HU.StopGenericNotifications)
}









::google::protobuf::Metadata StopGenericNotifications::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[77]);
}
// ===================================================================

class BluetoothPairingRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<BluetoothPairingRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BluetoothPairingRequest, _impl_._has_bits_);
  static void set_has_phone_address(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_pairing_method(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

BluetoothPairingRequest::BluetoothPairingRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.BluetoothPairingRequest)
}
inline PROTOBUF_NDEBUG_INLINE BluetoothPairingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        phone_address_(arena, from.phone_address_) {}

BluetoothPairingRequest::BluetoothPairingRequest(
    ::google::protobuf::Arena* arena,
    const BluetoothPairingRequest& from)
    : ::google::protobuf::Message(arena) {
  BluetoothPairingRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.pairing_method_ = from._impl_.pairing_method_;

  // @@protoc_insertion_point(copy_constructor:HU.BluetoothPairingRequest)
}
inline PROTOBUF_NDEBUG_INLINE BluetoothPairingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        phone_address_(arena),
        pairing_method_{static_cast< ::HU::BluetoothPairingMethod >(1)} {}

inline void BluetoothPairingRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BluetoothPairingRequest::~BluetoothPairingRequest() {
  // @@protoc_insertion_point(destructor:HU.BluetoothPairingRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BluetoothPairingRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.phone_address_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BluetoothPairingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.BluetoothPairingRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.phone_address_.ClearNonDefaultToEmpty();
    }
    _impl_.pairing_method_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BluetoothPairingRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 48, 2> BluetoothPairingRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BluetoothPairingRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BluetoothPairingRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .HU.BluetoothPairingMethod pairing_method = 2;
    {::_pbi::TcParser::FastEr1S1,
     {16, 1, 4, PROTOBUF_FIELD_OFFSET(BluetoothPairingRequest, _impl_.pairing_method_)}},
    // required string phone_address = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BluetoothPairingRequest, _impl_.phone_address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // required string phone_address = 1;
    {PROTOBUF_FIELD_OFFSET(BluetoothPairingRequest, _impl_.phone_address_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .HU.BluetoothPairingMethod pairing_method = 2;
    {PROTOBUF_FIELD_OFFSET(BluetoothPairingRequest, _impl_.pairing_method_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {1, 4},
  }}, {{
    "\32\15\0\0\0\0\0\0"
    "HU.BluetoothPairingRequest"
    "phone_address"
  }},
};

::uint8_t* BluetoothPairingRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.BluetoothPairingRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required string phone_address = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_phone_address();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.BluetoothPairingRequest.phone_address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional .HU.BluetoothPairingMethod pairing_method = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_pairing_method(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.BluetoothPairingRequest)
  return target;
}

::size_t BluetoothPairingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.BluetoothPairingRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // required string phone_address = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_phone_address());
  }

  // optional .HU.BluetoothPairingMethod pairing_method = 2;
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_pairing_method());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BluetoothPairingRequest::_class_data_ = {
    BluetoothPairingRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BluetoothPairingRequest::GetClassData() const {
  return &_class_data_;
}

void BluetoothPairingRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BluetoothPairingRequest*>(&to_msg);
  auto& from = static_cast<const BluetoothPairingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.BluetoothPairingRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_phone_address(from._internal_phone_address());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.pairing_method_ = from._impl_.pairing_method_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BluetoothPairingRequest::CopyFrom(const BluetoothPairingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.BluetoothPairingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BluetoothPairingRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* BluetoothPairingRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BluetoothPairingRequest::InternalSwap(BluetoothPairingRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.phone_address_, &other->_impl_.phone_address_, arena);
  swap(_impl_.pairing_method_, other->_impl_.pairing_method_);
}

::google::protobuf::Metadata BluetoothPairingRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[78]);
}
// ===================================================================

class BluetoothPairingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<BluetoothPairingResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BluetoothPairingResponse, _impl_._has_bits_);
  static void set_has_already_paired(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

BluetoothPairingResponse::BluetoothPairingResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.BluetoothPairingResponse)
}
BluetoothPairingResponse::BluetoothPairingResponse(
    ::google::protobuf::Arena* arena, const BluetoothPairingResponse& from)
    : BluetoothPairingResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BluetoothPairingResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        status_{static_cast< ::HU::BluetoothPairingResponse_PAIRING_STATUS >(1)} {}

inline void BluetoothPairingResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.already_paired_ = {};
}
BluetoothPairingResponse::~BluetoothPairingResponse() {
  // @@protoc_insertion_point(destructor:HU.BluetoothPairingResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BluetoothPairingResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BluetoothPairingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.BluetoothPairingResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.already_paired_ = false;
    _impl_.status_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BluetoothPairingResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> BluetoothPairingResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BluetoothPairingResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BluetoothPairingResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .HU.BluetoothPairingResponse.PAIRING_STATUS status = 2;
    {::_pbi::TcParser::FastEr1S1,
     {16, 1, 2, PROTOBUF_FIELD_OFFSET(BluetoothPairingResponse, _impl_.status_)}},
    // optional bool already_paired = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BluetoothPairingResponse, _impl_.already_paired_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(BluetoothPairingResponse, _impl_.already_paired_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool already_paired = 1;
    {PROTOBUF_FIELD_OFFSET(BluetoothPairingResponse, _impl_.already_paired_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .HU.BluetoothPairingResponse.PAIRING_STATUS status = 2;
    {PROTOBUF_FIELD_OFFSET(BluetoothPairingResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {1, 2},
  }}, {{
  }},
};

::uint8_t* BluetoothPairingResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.BluetoothPairingResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool already_paired = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_already_paired(), target);
  }

  // optional .HU.BluetoothPairingResponse.PAIRING_STATUS status = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.BluetoothPairingResponse)
  return target;
}

::size_t BluetoothPairingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.BluetoothPairingResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool already_paired = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }

    // optional .HU.BluetoothPairingResponse.PAIRING_STATUS status = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BluetoothPairingResponse::_class_data_ = {
    BluetoothPairingResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BluetoothPairingResponse::GetClassData() const {
  return &_class_data_;
}

void BluetoothPairingResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BluetoothPairingResponse*>(&to_msg);
  auto& from = static_cast<const BluetoothPairingResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.BluetoothPairingResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.already_paired_ = from._impl_.already_paired_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.status_ = from._impl_.status_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BluetoothPairingResponse::CopyFrom(const BluetoothPairingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.BluetoothPairingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BluetoothPairingResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BluetoothPairingResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BluetoothPairingResponse::InternalSwap(BluetoothPairingResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BluetoothPairingResponse, _impl_.status_)
      + sizeof(BluetoothPairingResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(BluetoothPairingResponse, _impl_.already_paired_)>(
          reinterpret_cast<char*>(&_impl_.already_paired_),
          reinterpret_cast<char*>(&other->_impl_.already_paired_));
}

::google::protobuf::Metadata BluetoothPairingResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[79]);
}
// ===================================================================

class BluetoothAuthData::_Internal {
 public:
  using HasBits = decltype(std::declval<BluetoothAuthData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BluetoothAuthData, _impl_._has_bits_);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

BluetoothAuthData::BluetoothAuthData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.BluetoothAuthData)
}
inline PROTOBUF_NDEBUG_INLINE BluetoothAuthData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        data_(arena, from.data_) {}

BluetoothAuthData::BluetoothAuthData(
    ::google::protobuf::Arena* arena,
    const BluetoothAuthData& from)
    : ::google::protobuf::Message(arena) {
  BluetoothAuthData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:HU.BluetoothAuthData)
}
inline PROTOBUF_NDEBUG_INLINE BluetoothAuthData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        data_(arena) {}

inline void BluetoothAuthData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BluetoothAuthData::~BluetoothAuthData() {
  // @@protoc_insertion_point(destructor:HU.BluetoothAuthData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BluetoothAuthData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.data_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void BluetoothAuthData::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.BluetoothAuthData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.data_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BluetoothAuthData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 33, 2> BluetoothAuthData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BluetoothAuthData, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_BluetoothAuthData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string data = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BluetoothAuthData, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string data = 1;
    {PROTOBUF_FIELD_OFFSET(BluetoothAuthData, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\4\0\0\0\0\0\0"
    "HU.BluetoothAuthData"
    "data"
  }},
};

::uint8_t* BluetoothAuthData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.BluetoothAuthData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string data = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_data();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.BluetoothAuthData.data");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.BluetoothAuthData)
  return target;
}

::size_t BluetoothAuthData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.BluetoothAuthData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BluetoothAuthData::_class_data_ = {
    BluetoothAuthData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BluetoothAuthData::GetClassData() const {
  return &_class_data_;
}

void BluetoothAuthData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BluetoothAuthData*>(&to_msg);
  auto& from = static_cast<const BluetoothAuthData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.BluetoothAuthData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BluetoothAuthData::CopyFrom(const BluetoothAuthData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.BluetoothAuthData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BluetoothAuthData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BluetoothAuthData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BluetoothAuthData::InternalSwap(BluetoothAuthData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata BluetoothAuthData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[80]);
}
// ===================================================================

class NAVMessagesStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<NAVMessagesStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NAVMessagesStatus, _impl_._has_bits_);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

NAVMessagesStatus::NAVMessagesStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.NAVMessagesStatus)
}
NAVMessagesStatus::NAVMessagesStatus(
    ::google::protobuf::Arena* arena, const NAVMessagesStatus& from)
    : NAVMessagesStatus(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NAVMessagesStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        status_{static_cast< ::HU::NAVMessagesStatus_STATUS >(1)} {}

inline void NAVMessagesStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NAVMessagesStatus::~NAVMessagesStatus() {
  // @@protoc_insertion_point(destructor:HU.NAVMessagesStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NAVMessagesStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NAVMessagesStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.NAVMessagesStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_ = 1;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NAVMessagesStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> NAVMessagesStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NAVMessagesStatus, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NAVMessagesStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .HU.NAVMessagesStatus.STATUS status = 1;
    {::_pbi::TcParser::FastEr1S1,
     {8, 0, 2, PROTOBUF_FIELD_OFFSET(NAVMessagesStatus, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .HU.NAVMessagesStatus.STATUS status = 1;
    {PROTOBUF_FIELD_OFFSET(NAVMessagesStatus, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {1, 2},
  }}, {{
  }},
};

::uint8_t* NAVMessagesStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.NAVMessagesStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .HU.NAVMessagesStatus.STATUS status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.NAVMessagesStatus)
  return target;
}

::size_t NAVMessagesStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.NAVMessagesStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .HU.NAVMessagesStatus.STATUS status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NAVMessagesStatus::_class_data_ = {
    NAVMessagesStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NAVMessagesStatus::GetClassData() const {
  return &_class_data_;
}

void NAVMessagesStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NAVMessagesStatus*>(&to_msg);
  auto& from = static_cast<const NAVMessagesStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.NAVMessagesStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NAVMessagesStatus::CopyFrom(const NAVMessagesStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.NAVMessagesStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NAVMessagesStatus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NAVMessagesStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NAVMessagesStatus::InternalSwap(NAVMessagesStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata NAVMessagesStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[81]);
}
// ===================================================================

class NAVTurnMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<NAVTurnMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NAVTurnMessage, _impl_._has_bits_);
  static void set_has_event_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_turn_side(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_turn_event(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_image(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_turn_number(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_turn_angle(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

NAVTurnMessage::NAVTurnMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.NAVTurnMessage)
}
inline PROTOBUF_NDEBUG_INLINE NAVTurnMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        event_name_(arena, from.event_name_),
        image_(arena, from.image_) {}

NAVTurnMessage::NAVTurnMessage(
    ::google::protobuf::Arena* arena,
    const NAVTurnMessage& from)
    : ::google::protobuf::Message(arena) {
  NAVTurnMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, turn_event_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, turn_event_),
           offsetof(Impl_, turn_side_) -
               offsetof(Impl_, turn_event_) +
               sizeof(Impl_::turn_side_));

  // @@protoc_insertion_point(copy_constructor:HU.NAVTurnMessage)
}
inline PROTOBUF_NDEBUG_INLINE NAVTurnMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        event_name_(arena),
        image_(arena),
        turn_side_{static_cast< ::HU::NAVTurnMessage_TURN_SIDE >(1)} {}

inline void NAVTurnMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, turn_event_),
           0,
           offsetof(Impl_, turn_angle_) -
               offsetof(Impl_, turn_event_) +
               sizeof(Impl_::turn_angle_));
}
NAVTurnMessage::~NAVTurnMessage() {
  // @@protoc_insertion_point(destructor:HU.NAVTurnMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NAVTurnMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.event_name_.Destroy();
  _impl_.image_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NAVTurnMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.NAVTurnMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.event_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.image_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&_impl_.turn_event_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.turn_angle_) -
        reinterpret_cast<char*>(&_impl_.turn_event_)) + sizeof(_impl_.turn_angle_));
    _impl_.turn_side_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NAVTurnMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 36, 2> NAVTurnMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NAVTurnMessage, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NAVTurnMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string event_name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NAVTurnMessage, _impl_.event_name_)}},
    // optional .HU.NAVTurnMessage.TURN_SIDE turn_side = 2;
    {::_pbi::TcParser::FastEr1S1,
     {16, 5, 3, PROTOBUF_FIELD_OFFSET(NAVTurnMessage, _impl_.turn_side_)}},
    // optional .HU.NAVTurnMessage.TURN_EVENT turn_event = 3;
    {::_pbi::TcParser::FastEvS1,
     {24, 2, 1, PROTOBUF_FIELD_OFFSET(NAVTurnMessage, _impl_.turn_event_)}},
    // optional bytes image = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(NAVTurnMessage, _impl_.image_)}},
    // optional int32 turn_number = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NAVTurnMessage, _impl_.turn_number_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(NAVTurnMessage, _impl_.turn_number_)}},
    // optional int32 turn_angle = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NAVTurnMessage, _impl_.turn_angle_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(NAVTurnMessage, _impl_.turn_angle_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string event_name = 1;
    {PROTOBUF_FIELD_OFFSET(NAVTurnMessage, _impl_.event_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional .HU.NAVTurnMessage.TURN_SIDE turn_side = 2;
    {PROTOBUF_FIELD_OFFSET(NAVTurnMessage, _impl_.turn_side_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .HU.NAVTurnMessage.TURN_EVENT turn_event = 3;
    {PROTOBUF_FIELD_OFFSET(NAVTurnMessage, _impl_.turn_event_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional bytes image = 4;
    {PROTOBUF_FIELD_OFFSET(NAVTurnMessage, _impl_.image_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional int32 turn_number = 5;
    {PROTOBUF_FIELD_OFFSET(NAVTurnMessage, _impl_.turn_number_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 turn_angle = 6;
    {PROTOBUF_FIELD_OFFSET(NAVTurnMessage, _impl_.turn_angle_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {1, 3},
    {::_pbi::FieldAuxEnumData{}, ::HU::NAVTurnMessage_TURN_EVENT_internal_data_},
  }}, {{
    "\21\12\0\0\0\0\0\0"
    "HU.NAVTurnMessage"
    "event_name"
  }},
};

::uint8_t* NAVTurnMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.NAVTurnMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string event_name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_event_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "HU.NAVTurnMessage.event_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional .HU.NAVTurnMessage.TURN_SIDE turn_side = 2;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_turn_side(), target);
  }

  // optional .HU.NAVTurnMessage.TURN_EVENT turn_event = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_turn_event(), target);
  }

  // optional bytes image = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_image();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  // optional int32 turn_number = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_turn_number(), target);
  }

  // optional int32 turn_angle = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_turn_angle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.NAVTurnMessage)
  return target;
}

::size_t NAVTurnMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.NAVTurnMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string event_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_event_name());
    }

    // optional bytes image = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_image());
    }

    // optional .HU.NAVTurnMessage.TURN_EVENT turn_event = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_turn_event());
    }

    // optional int32 turn_number = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_turn_number());
    }

    // optional int32 turn_angle = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_turn_angle());
    }

    // optional .HU.NAVTurnMessage.TURN_SIDE turn_side = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_turn_side());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NAVTurnMessage::_class_data_ = {
    NAVTurnMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NAVTurnMessage::GetClassData() const {
  return &_class_data_;
}

void NAVTurnMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NAVTurnMessage*>(&to_msg);
  auto& from = static_cast<const NAVTurnMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.NAVTurnMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_event_name(from._internal_event_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_image(from._internal_image());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.turn_event_ = from._impl_.turn_event_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.turn_number_ = from._impl_.turn_number_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.turn_angle_ = from._impl_.turn_angle_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.turn_side_ = from._impl_.turn_side_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NAVTurnMessage::CopyFrom(const NAVTurnMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.NAVTurnMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NAVTurnMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NAVTurnMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NAVTurnMessage::InternalSwap(NAVTurnMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_name_, &other->_impl_.event_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.image_, &other->_impl_.image_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NAVTurnMessage, _impl_.turn_side_)
      + sizeof(NAVTurnMessage::_impl_.turn_side_)
      - PROTOBUF_FIELD_OFFSET(NAVTurnMessage, _impl_.turn_event_)>(
          reinterpret_cast<char*>(&_impl_.turn_event_),
          reinterpret_cast<char*>(&other->_impl_.turn_event_));
}

::google::protobuf::Metadata NAVTurnMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[82]);
}
// ===================================================================

class NAVDistanceMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<NAVDistanceMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NAVDistanceMessage, _impl_._has_bits_);
  static void set_has_distance(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_time_until(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_display_distance(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_display_distance_unit(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

NAVDistanceMessage::NAVDistanceMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:HU.NAVDistanceMessage)
}
NAVDistanceMessage::NAVDistanceMessage(
    ::google::protobuf::Arena* arena, const NAVDistanceMessage& from)
    : NAVDistanceMessage(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NAVDistanceMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        display_distance_unit_{static_cast< ::HU::NAVDistanceMessage_DISPLAY_DISTANCE_UNIT >(1)} {}

inline void NAVDistanceMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, distance_),
           0,
           offsetof(Impl_, display_distance_) -
               offsetof(Impl_, distance_) +
               sizeof(Impl_::display_distance_));
}
NAVDistanceMessage::~NAVDistanceMessage() {
  // @@protoc_insertion_point(destructor:HU.NAVDistanceMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NAVDistanceMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NAVDistanceMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:HU.NAVDistanceMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.distance_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.display_distance_) -
        reinterpret_cast<char*>(&_impl_.distance_)) + sizeof(_impl_.display_distance_));
    _impl_.display_distance_unit_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NAVDistanceMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> NAVDistanceMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NAVDistanceMessage, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NAVDistanceMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .HU.NAVDistanceMessage.DISPLAY_DISTANCE_UNIT display_distance_unit = 4;
    {::_pbi::TcParser::FastEr1S1,
     {32, 3, 6, PROTOBUF_FIELD_OFFSET(NAVDistanceMessage, _impl_.display_distance_unit_)}},
    // optional int32 distance = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NAVDistanceMessage, _impl_.distance_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(NAVDistanceMessage, _impl_.distance_)}},
    // optional int32 time_until = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NAVDistanceMessage, _impl_.time_until_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(NAVDistanceMessage, _impl_.time_until_)}},
    // optional uint64 display_distance = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(NAVDistanceMessage, _impl_.display_distance_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(NAVDistanceMessage, _impl_.display_distance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 distance = 1;
    {PROTOBUF_FIELD_OFFSET(NAVDistanceMessage, _impl_.distance_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 time_until = 2;
    {PROTOBUF_FIELD_OFFSET(NAVDistanceMessage, _impl_.time_until_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint64 display_distance = 3;
    {PROTOBUF_FIELD_OFFSET(NAVDistanceMessage, _impl_.display_distance_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional .HU.NAVDistanceMessage.DISPLAY_DISTANCE_UNIT display_distance_unit = 4;
    {PROTOBUF_FIELD_OFFSET(NAVDistanceMessage, _impl_.display_distance_unit_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {1, 6},
  }}, {{
  }},
};

::uint8_t* NAVDistanceMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HU.NAVDistanceMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 distance = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_distance(), target);
  }

  // optional int32 time_until = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_time_until(), target);
  }

  // optional uint64 display_distance = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_display_distance(), target);
  }

  // optional .HU.NAVDistanceMessage.DISPLAY_DISTANCE_UNIT display_distance_unit = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_display_distance_unit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HU.NAVDistanceMessage)
  return target;
}

::size_t NAVDistanceMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HU.NAVDistanceMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int32 distance = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_distance());
    }

    // optional int32 time_until = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_time_until());
    }

    // optional uint64 display_distance = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_display_distance());
    }

    // optional .HU.NAVDistanceMessage.DISPLAY_DISTANCE_UNIT display_distance_unit = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_display_distance_unit());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NAVDistanceMessage::_class_data_ = {
    NAVDistanceMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NAVDistanceMessage::GetClassData() const {
  return &_class_data_;
}

void NAVDistanceMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NAVDistanceMessage*>(&to_msg);
  auto& from = static_cast<const NAVDistanceMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HU.NAVDistanceMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.distance_ = from._impl_.distance_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.time_until_ = from._impl_.time_until_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.display_distance_ = from._impl_.display_distance_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.display_distance_unit_ = from._impl_.display_distance_unit_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NAVDistanceMessage::CopyFrom(const NAVDistanceMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HU.NAVDistanceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NAVDistanceMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NAVDistanceMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NAVDistanceMessage::InternalSwap(NAVDistanceMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NAVDistanceMessage, _impl_.display_distance_unit_)
      + sizeof(NAVDistanceMessage::_impl_.display_distance_unit_)
      - PROTOBUF_FIELD_OFFSET(NAVDistanceMessage, _impl_.distance_)>(
          reinterpret_cast<char*>(&_impl_.distance_),
          reinterpret_cast<char*>(&other->_impl_.distance_));
}

::google::protobuf::Metadata NAVDistanceMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_AndroidAuto_2eproto_getter, &descriptor_table_AndroidAuto_2eproto_once,
      file_level_metadata_AndroidAuto_2eproto[83]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace HU
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
